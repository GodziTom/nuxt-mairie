
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.5.2
 * Query Engine version: aebc046ce8b88ebbcb45efe31cbe7d06fd6abc0a
 */
Prisma.prismaVersion = {
  client: "5.5.2",
  engine: "aebc046ce8b88ebbcb45efe31cbe7d06fd6abc0a"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CollectivitesScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  type_service_local: 'type_service_local',
  siret: 'siret',
  siren: 'siren',
  code_insee_commune: 'code_insee_commune',
  code_postal: 'code_postal',
  nom_commune: 'nom_commune',
  pays: 'pays',
  continent: 'continent',
  longitude: 'longitude',
  latitude: 'latitude',
  adresse: 'adresse',
  adresse_courriel: 'adresse_courriel',
  telephone: 'telephone',
  telecopie: 'telecopie',
  site_internet: 'site_internet',
  copyright: 'copyright',
  ancien_code_pivot: 'ancien_code_pivot',
  reseau_social: 'reseau_social',
  texte_reference: 'texte_reference',
  partenaire: 'partenaire',
  itm_identifiant: 'itm_identifiant',
  sigle: 'sigle',
  date_modification: 'date_modification',
  date_creation: 'date_creation',
  partenaire_date_modification: 'partenaire_date_modification',
  mission: 'mission',
  formulaire_contact: 'formulaire_contact',
  version_type: 'version_type',
  version_etat_modification: 'version_etat_modification',
  version_source: 'version_source',
  type_organisme: 'type_organisme',
  type_repertoire: 'type_repertoire',
  plage_ouverture: 'plage_ouverture',
  hierarchie: 'hierarchie',
  categorie: 'categorie',
  sve: 'sve',
  telephone_accessible: 'telephone_accessible',
  application_mobile: 'application_mobile',
  statut_de_diffusion: 'statut_de_diffusion',
  information_complementaire: 'information_complementaire',
  commentaire_plage_ouverture: 'commentaire_plage_ouverture',
  annuaire: 'annuaire',
  tchat: 'tchat',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  is_selected: 'is_selected',
  is_sended: 'is_sended'
};

exports.Prisma.ServiceScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  type_service_local: 'type_service_local',
  siret: 'siret',
  siren: 'siren',
  code_insee_commune: 'code_insee_commune',
  code_postal: 'code_postal',
  nom_commune: 'nom_commune',
  pays: 'pays',
  continent: 'continent',
  longitude: 'longitude',
  latitude: 'latitude',
  adresse: 'adresse',
  adresse_courriel: 'adresse_courriel',
  telephone: 'telephone',
  telecopie: 'telecopie',
  site_internet: 'site_internet',
  copyright: 'copyright',
  ancien_code_pivot: 'ancien_code_pivot',
  reseau_social: 'reseau_social',
  texte_reference: 'texte_reference',
  partenaire: 'partenaire',
  itm_identifiant: 'itm_identifiant',
  sigle: 'sigle',
  date_modification: 'date_modification',
  date_creation: 'date_creation',
  partenaire_date_modification: 'partenaire_date_modification',
  mission: 'mission',
  formulaire_contact: 'formulaire_contact',
  version_type: 'version_type',
  version_etat_modification: 'version_etat_modification',
  version_source: 'version_source',
  type_organisme: 'type_organisme',
  type_repertoire: 'type_repertoire',
  plage_ouverture: 'plage_ouverture',
  hierarchie: 'hierarchie',
  categorie: 'categorie',
  sve: 'sve',
  telephone_accessible: 'telephone_accessible',
  application_mobile: 'application_mobile',
  statut_de_diffusion: 'statut_de_diffusion',
  information_complementaire: 'information_complementaire',
  commentaire_plage_ouverture: 'commentaire_plage_ouverture',
  annuaire: 'annuaire',
  tchat: 'tchat'
};

exports.Prisma.Service2ScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  type_service_local: 'type_service_local',
  siret: 'siret',
  siren: 'siren',
  code_insee_commune: 'code_insee_commune',
  code_postal: 'code_postal',
  nom_commune: 'nom_commune',
  pays: 'pays',
  continent: 'continent',
  longitude: 'longitude',
  latitude: 'latitude',
  adresse: 'adresse',
  adresse_courriel: 'adresse_courriel',
  telephone: 'telephone',
  telecopie: 'telecopie',
  site_internet: 'site_internet',
  copyright: 'copyright',
  ancien_code_pivot: 'ancien_code_pivot',
  reseau_social: 'reseau_social',
  texte_reference: 'texte_reference',
  partenaire: 'partenaire',
  itm_identifiant: 'itm_identifiant',
  sigle: 'sigle',
  date_modification: 'date_modification',
  date_creation: 'date_creation',
  partenaire_date_modification: 'partenaire_date_modification',
  mission: 'mission',
  formulaire_contact: 'formulaire_contact',
  version_type: 'version_type',
  version_etat_modification: 'version_etat_modification',
  version_source: 'version_source',
  type_organisme: 'type_organisme',
  type_repertoire: 'type_repertoire',
  plage_ouverture: 'plage_ouverture',
  hierarchie: 'hierarchie',
  categorie: 'categorie',
  sve: 'sve',
  telephone_accessible: 'telephone_accessible',
  application_mobile: 'application_mobile',
  statut_de_diffusion: 'statut_de_diffusion',
  information_complementaire: 'information_complementaire',
  commentaire_plage_ouverture: 'commentaire_plage_ouverture',
  annuaire: 'annuaire',
  tchat: 'tchat'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Collectivites_joinScalarFieldEnum = {
  code_postal: 'code_postal',
  code_departement: 'code_departement'
};

exports.Prisma.Collectivites_test_deptScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  type_service_local: 'type_service_local',
  siret: 'siret',
  siren: 'siren',
  code_insee_commune: 'code_insee_commune',
  code_postal: 'code_postal',
  code_departement: 'code_departement',
  nom_departement: 'nom_departement',
  nom_commune: 'nom_commune',
  pays: 'pays',
  continent: 'continent',
  longitude: 'longitude',
  latitude: 'latitude',
  adresse: 'adresse',
  adresse_courriel: 'adresse_courriel',
  telephone: 'telephone',
  telecopie: 'telecopie',
  site_internet: 'site_internet',
  copyright: 'copyright',
  ancien_code_pivot: 'ancien_code_pivot',
  reseau_social: 'reseau_social',
  texte_reference: 'texte_reference',
  partenaire: 'partenaire',
  itm_identifiant: 'itm_identifiant',
  sigle: 'sigle',
  date_modification: 'date_modification',
  date_creation: 'date_creation',
  partenaire_date_modification: 'partenaire_date_modification',
  mission: 'mission',
  formulaire_contact: 'formulaire_contact',
  version_type: 'version_type',
  version_etat_modification: 'version_etat_modification',
  version_source: 'version_source',
  type_organisme: 'type_organisme',
  type_repertoire: 'type_repertoire',
  plage_ouverture: 'plage_ouverture',
  hierarchie: 'hierarchie',
  categorie: 'categorie',
  sve: 'sve',
  telephone_accessible: 'telephone_accessible',
  application_mobile: 'application_mobile',
  statut_de_diffusion: 'statut_de_diffusion',
  information_complementaire: 'information_complementaire',
  commentaire_plage_ouverture: 'commentaire_plage_ouverture',
  annuaire: 'annuaire',
  tchat: 'tchat',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  is_selected: 'is_selected',
  is_sended: 'is_sended'
};

exports.Prisma.DepartementScalarFieldEnum = {
  departement_id: 'departement_id',
  departement_code: 'departement_code',
  departement_nom: 'departement_nom',
  departement_nom_uppercase: 'departement_nom_uppercase',
  departement_slug: 'departement_slug',
  departement_nom_soundex: 'departement_nom_soundex'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  collectivites: 'collectivites',
  service: 'service',
  service2: 'service2',
  users: 'users',
  collectivites_join: 'collectivites_join',
  collectivites_test_dept: 'collectivites_test_dept',
  departement: 'departement'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://github.com/prisma/prisma/issues`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
