
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model collectivites
 * 
 */
export type collectivites = $Result.DefaultSelection<Prisma.$collectivitesPayload>
/**
 * Model collectivites_join
 * 
 */
export type collectivites_join = $Result.DefaultSelection<Prisma.$collectivites_joinPayload>
/**
 * Model collectivites_test
 * 
 */
export type collectivites_test = $Result.DefaultSelection<Prisma.$collectivites_testPayload>
/**
 * Model departement
 * 
 */
export type departement = $Result.DefaultSelection<Prisma.$departementPayload>
/**
 * Model service
 * 
 */
export type service = $Result.DefaultSelection<Prisma.$servicePayload>
/**
 * Model service2
 * 
 */
export type service2 = $Result.DefaultSelection<Prisma.$service2Payload>
/**
 * Model users
 * 
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Collectivites
 * const collectivites = await prisma.collectivites.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Collectivites
   * const collectivites = await prisma.collectivites.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.collectivites`: Exposes CRUD operations for the **collectivites** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Collectivites
    * const collectivites = await prisma.collectivites.findMany()
    * ```
    */
  get collectivites(): Prisma.collectivitesDelegate<ExtArgs>;

  /**
   * `prisma.collectivites_join`: Exposes CRUD operations for the **collectivites_join** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Collectivites_joins
    * const collectivites_joins = await prisma.collectivites_join.findMany()
    * ```
    */
  get collectivites_join(): Prisma.collectivites_joinDelegate<ExtArgs>;

  /**
   * `prisma.collectivites_test`: Exposes CRUD operations for the **collectivites_test** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Collectivites_tests
    * const collectivites_tests = await prisma.collectivites_test.findMany()
    * ```
    */
  get collectivites_test(): Prisma.collectivites_testDelegate<ExtArgs>;

  /**
   * `prisma.departement`: Exposes CRUD operations for the **departement** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Departements
    * const departements = await prisma.departement.findMany()
    * ```
    */
  get departement(): Prisma.departementDelegate<ExtArgs>;

  /**
   * `prisma.service`: Exposes CRUD operations for the **service** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Services
    * const services = await prisma.service.findMany()
    * ```
    */
  get service(): Prisma.serviceDelegate<ExtArgs>;

  /**
   * `prisma.service2`: Exposes CRUD operations for the **service2** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Service2s
    * const service2s = await prisma.service2.findMany()
    * ```
    */
  get service2(): Prisma.service2Delegate<ExtArgs>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.5.2
   * Query Engine version: aebc046ce8b88ebbcb45efe31cbe7d06fd6abc0a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    collectivites: 'collectivites',
    collectivites_join: 'collectivites_join',
    collectivites_test: 'collectivites_test',
    departement: 'departement',
    service: 'service',
    service2: 'service2',
    users: 'users'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'collectivites' | 'collectivites_join' | 'collectivites_test' | 'departement' | 'service' | 'service2' | 'users'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      collectivites: {
        payload: Prisma.$collectivitesPayload<ExtArgs>
        fields: Prisma.collectivitesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.collectivitesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivitesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.collectivitesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivitesPayload>
          }
          findFirst: {
            args: Prisma.collectivitesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivitesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.collectivitesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivitesPayload>
          }
          findMany: {
            args: Prisma.collectivitesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivitesPayload>[]
          }
          create: {
            args: Prisma.collectivitesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivitesPayload>
          }
          createMany: {
            args: Prisma.collectivitesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.collectivitesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivitesPayload>
          }
          update: {
            args: Prisma.collectivitesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivitesPayload>
          }
          deleteMany: {
            args: Prisma.collectivitesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.collectivitesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.collectivitesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivitesPayload>
          }
          aggregate: {
            args: Prisma.CollectivitesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCollectivites>
          }
          groupBy: {
            args: Prisma.collectivitesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CollectivitesGroupByOutputType>[]
          }
          count: {
            args: Prisma.collectivitesCountArgs<ExtArgs>,
            result: $Utils.Optional<CollectivitesCountAggregateOutputType> | number
          }
        }
      }
      collectivites_join: {
        payload: Prisma.$collectivites_joinPayload<ExtArgs>
        fields: Prisma.collectivites_joinFieldRefs
        operations: {
          findUnique: {
            args: Prisma.collectivites_joinFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivites_joinPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.collectivites_joinFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivites_joinPayload>
          }
          findFirst: {
            args: Prisma.collectivites_joinFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivites_joinPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.collectivites_joinFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivites_joinPayload>
          }
          findMany: {
            args: Prisma.collectivites_joinFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivites_joinPayload>[]
          }
          create: {
            args: Prisma.collectivites_joinCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivites_joinPayload>
          }
          createMany: {
            args: Prisma.collectivites_joinCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.collectivites_joinDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivites_joinPayload>
          }
          update: {
            args: Prisma.collectivites_joinUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivites_joinPayload>
          }
          deleteMany: {
            args: Prisma.collectivites_joinDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.collectivites_joinUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.collectivites_joinUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivites_joinPayload>
          }
          aggregate: {
            args: Prisma.Collectivites_joinAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCollectivites_join>
          }
          groupBy: {
            args: Prisma.collectivites_joinGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Collectivites_joinGroupByOutputType>[]
          }
          count: {
            args: Prisma.collectivites_joinCountArgs<ExtArgs>,
            result: $Utils.Optional<Collectivites_joinCountAggregateOutputType> | number
          }
        }
      }
      collectivites_test: {
        payload: Prisma.$collectivites_testPayload<ExtArgs>
        fields: Prisma.collectivites_testFieldRefs
        operations: {
          findUnique: {
            args: Prisma.collectivites_testFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivites_testPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.collectivites_testFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivites_testPayload>
          }
          findFirst: {
            args: Prisma.collectivites_testFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivites_testPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.collectivites_testFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivites_testPayload>
          }
          findMany: {
            args: Prisma.collectivites_testFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivites_testPayload>[]
          }
          create: {
            args: Prisma.collectivites_testCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivites_testPayload>
          }
          createMany: {
            args: Prisma.collectivites_testCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.collectivites_testDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivites_testPayload>
          }
          update: {
            args: Prisma.collectivites_testUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivites_testPayload>
          }
          deleteMany: {
            args: Prisma.collectivites_testDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.collectivites_testUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.collectivites_testUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectivites_testPayload>
          }
          aggregate: {
            args: Prisma.Collectivites_testAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCollectivites_test>
          }
          groupBy: {
            args: Prisma.collectivites_testGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Collectivites_testGroupByOutputType>[]
          }
          count: {
            args: Prisma.collectivites_testCountArgs<ExtArgs>,
            result: $Utils.Optional<Collectivites_testCountAggregateOutputType> | number
          }
        }
      }
      departement: {
        payload: Prisma.$departementPayload<ExtArgs>
        fields: Prisma.departementFieldRefs
        operations: {
          findUnique: {
            args: Prisma.departementFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$departementPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.departementFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$departementPayload>
          }
          findFirst: {
            args: Prisma.departementFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$departementPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.departementFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$departementPayload>
          }
          findMany: {
            args: Prisma.departementFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$departementPayload>[]
          }
          create: {
            args: Prisma.departementCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$departementPayload>
          }
          createMany: {
            args: Prisma.departementCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.departementDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$departementPayload>
          }
          update: {
            args: Prisma.departementUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$departementPayload>
          }
          deleteMany: {
            args: Prisma.departementDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.departementUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.departementUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$departementPayload>
          }
          aggregate: {
            args: Prisma.DepartementAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDepartement>
          }
          groupBy: {
            args: Prisma.departementGroupByArgs<ExtArgs>,
            result: $Utils.Optional<DepartementGroupByOutputType>[]
          }
          count: {
            args: Prisma.departementCountArgs<ExtArgs>,
            result: $Utils.Optional<DepartementCountAggregateOutputType> | number
          }
        }
      }
      service: {
        payload: Prisma.$servicePayload<ExtArgs>
        fields: Prisma.serviceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.serviceFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.serviceFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicePayload>
          }
          findFirst: {
            args: Prisma.serviceFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.serviceFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicePayload>
          }
          findMany: {
            args: Prisma.serviceFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicePayload>[]
          }
          create: {
            args: Prisma.serviceCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicePayload>
          }
          createMany: {
            args: Prisma.serviceCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.serviceDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicePayload>
          }
          update: {
            args: Prisma.serviceUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicePayload>
          }
          deleteMany: {
            args: Prisma.serviceDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.serviceUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.serviceUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicePayload>
          }
          aggregate: {
            args: Prisma.ServiceAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateService>
          }
          groupBy: {
            args: Prisma.serviceGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ServiceGroupByOutputType>[]
          }
          count: {
            args: Prisma.serviceCountArgs<ExtArgs>,
            result: $Utils.Optional<ServiceCountAggregateOutputType> | number
          }
        }
      }
      service2: {
        payload: Prisma.$service2Payload<ExtArgs>
        fields: Prisma.service2FieldRefs
        operations: {
          findUnique: {
            args: Prisma.service2FindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$service2Payload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.service2FindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$service2Payload>
          }
          findFirst: {
            args: Prisma.service2FindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$service2Payload> | null
          }
          findFirstOrThrow: {
            args: Prisma.service2FindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$service2Payload>
          }
          findMany: {
            args: Prisma.service2FindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$service2Payload>[]
          }
          create: {
            args: Prisma.service2CreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$service2Payload>
          }
          createMany: {
            args: Prisma.service2CreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.service2DeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$service2Payload>
          }
          update: {
            args: Prisma.service2UpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$service2Payload>
          }
          deleteMany: {
            args: Prisma.service2DeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.service2UpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.service2UpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$service2Payload>
          }
          aggregate: {
            args: Prisma.Service2AggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateService2>
          }
          groupBy: {
            args: Prisma.service2GroupByArgs<ExtArgs>,
            result: $Utils.Optional<Service2GroupByOutputType>[]
          }
          count: {
            args: Prisma.service2CountArgs<ExtArgs>,
            result: $Utils.Optional<Service2CountAggregateOutputType> | number
          }
        }
      }
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>,
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type DepartementCountOutputType
   */

  export type DepartementCountOutputType = {
    collectivites_rel: number
  }

  export type DepartementCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collectivites_rel?: boolean | DepartementCountOutputTypeCountCollectivites_relArgs
  }

  // Custom InputTypes

  /**
   * DepartementCountOutputType without action
   */
  export type DepartementCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepartementCountOutputType
     */
    select?: DepartementCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * DepartementCountOutputType without action
   */
  export type DepartementCountOutputTypeCountCollectivites_relArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: collectivitesWhereInput
  }



  /**
   * Models
   */

  /**
   * Model collectivites
   */

  export type AggregateCollectivites = {
    _count: CollectivitesCountAggregateOutputType | null
    _avg: CollectivitesAvgAggregateOutputType | null
    _sum: CollectivitesSumAggregateOutputType | null
    _min: CollectivitesMinAggregateOutputType | null
    _max: CollectivitesMaxAggregateOutputType | null
  }

  export type CollectivitesAvgAggregateOutputType = {
    id: number | null
    longitude: Decimal | null
    latitude: Decimal | null
  }

  export type CollectivitesSumAggregateOutputType = {
    id: number | null
    longitude: Decimal | null
    latitude: Decimal | null
  }

  export type CollectivitesMinAggregateOutputType = {
    id: number | null
    nom: string | null
    type_service_local: string | null
    siret: string | null
    siren: string | null
    code_insee_commune: string | null
    code_postal: string | null
    code_departement: string | null
    nom_departement: string | null
    nom_commune: string | null
    pays: string | null
    continent: string | null
    longitude: Decimal | null
    latitude: Decimal | null
    adresse: string | null
    adresse_courriel: string | null
    telephone: string | null
    telecopie: string | null
    site_internet: string | null
    copyright: string | null
    ancien_code_pivot: string | null
    reseau_social: string | null
    texte_reference: string | null
    partenaire: string | null
    itm_identifiant: string | null
    sigle: string | null
    date_modification: Date | null
    date_creation: Date | null
    partenaire_date_modification: Date | null
    mission: string | null
    formulaire_contact: string | null
    version_type: string | null
    version_etat_modification: string | null
    version_source: string | null
    type_organisme: string | null
    type_repertoire: string | null
    categorie: string | null
    sve: string | null
    telephone_accessible: string | null
    application_mobile: string | null
    statut_de_diffusion: string | null
    information_complementaire: string | null
    commentaire_plage_ouverture: string | null
    annuaire: string | null
    tchat: string | null
    createdAt: Date | null
    updatedAt: Date | null
    is_selected: boolean | null
    is_sended: boolean | null
  }

  export type CollectivitesMaxAggregateOutputType = {
    id: number | null
    nom: string | null
    type_service_local: string | null
    siret: string | null
    siren: string | null
    code_insee_commune: string | null
    code_postal: string | null
    code_departement: string | null
    nom_departement: string | null
    nom_commune: string | null
    pays: string | null
    continent: string | null
    longitude: Decimal | null
    latitude: Decimal | null
    adresse: string | null
    adresse_courriel: string | null
    telephone: string | null
    telecopie: string | null
    site_internet: string | null
    copyright: string | null
    ancien_code_pivot: string | null
    reseau_social: string | null
    texte_reference: string | null
    partenaire: string | null
    itm_identifiant: string | null
    sigle: string | null
    date_modification: Date | null
    date_creation: Date | null
    partenaire_date_modification: Date | null
    mission: string | null
    formulaire_contact: string | null
    version_type: string | null
    version_etat_modification: string | null
    version_source: string | null
    type_organisme: string | null
    type_repertoire: string | null
    categorie: string | null
    sve: string | null
    telephone_accessible: string | null
    application_mobile: string | null
    statut_de_diffusion: string | null
    information_complementaire: string | null
    commentaire_plage_ouverture: string | null
    annuaire: string | null
    tchat: string | null
    createdAt: Date | null
    updatedAt: Date | null
    is_selected: boolean | null
    is_sended: boolean | null
  }

  export type CollectivitesCountAggregateOutputType = {
    id: number
    nom: number
    type_service_local: number
    siret: number
    siren: number
    code_insee_commune: number
    code_postal: number
    code_departement: number
    nom_departement: number
    nom_commune: number
    pays: number
    continent: number
    longitude: number
    latitude: number
    adresse: number
    adresse_courriel: number
    telephone: number
    telecopie: number
    site_internet: number
    copyright: number
    ancien_code_pivot: number
    reseau_social: number
    texte_reference: number
    partenaire: number
    itm_identifiant: number
    sigle: number
    date_modification: number
    date_creation: number
    partenaire_date_modification: number
    mission: number
    formulaire_contact: number
    version_type: number
    version_etat_modification: number
    version_source: number
    type_organisme: number
    type_repertoire: number
    plage_ouverture: number
    hierarchie: number
    categorie: number
    sve: number
    telephone_accessible: number
    application_mobile: number
    statut_de_diffusion: number
    information_complementaire: number
    commentaire_plage_ouverture: number
    annuaire: number
    tchat: number
    createdAt: number
    updatedAt: number
    is_selected: number
    is_sended: number
    _all: number
  }


  export type CollectivitesAvgAggregateInputType = {
    id?: true
    longitude?: true
    latitude?: true
  }

  export type CollectivitesSumAggregateInputType = {
    id?: true
    longitude?: true
    latitude?: true
  }

  export type CollectivitesMinAggregateInputType = {
    id?: true
    nom?: true
    type_service_local?: true
    siret?: true
    siren?: true
    code_insee_commune?: true
    code_postal?: true
    code_departement?: true
    nom_departement?: true
    nom_commune?: true
    pays?: true
    continent?: true
    longitude?: true
    latitude?: true
    adresse?: true
    adresse_courriel?: true
    telephone?: true
    telecopie?: true
    site_internet?: true
    copyright?: true
    ancien_code_pivot?: true
    reseau_social?: true
    texte_reference?: true
    partenaire?: true
    itm_identifiant?: true
    sigle?: true
    date_modification?: true
    date_creation?: true
    partenaire_date_modification?: true
    mission?: true
    formulaire_contact?: true
    version_type?: true
    version_etat_modification?: true
    version_source?: true
    type_organisme?: true
    type_repertoire?: true
    categorie?: true
    sve?: true
    telephone_accessible?: true
    application_mobile?: true
    statut_de_diffusion?: true
    information_complementaire?: true
    commentaire_plage_ouverture?: true
    annuaire?: true
    tchat?: true
    createdAt?: true
    updatedAt?: true
    is_selected?: true
    is_sended?: true
  }

  export type CollectivitesMaxAggregateInputType = {
    id?: true
    nom?: true
    type_service_local?: true
    siret?: true
    siren?: true
    code_insee_commune?: true
    code_postal?: true
    code_departement?: true
    nom_departement?: true
    nom_commune?: true
    pays?: true
    continent?: true
    longitude?: true
    latitude?: true
    adresse?: true
    adresse_courriel?: true
    telephone?: true
    telecopie?: true
    site_internet?: true
    copyright?: true
    ancien_code_pivot?: true
    reseau_social?: true
    texte_reference?: true
    partenaire?: true
    itm_identifiant?: true
    sigle?: true
    date_modification?: true
    date_creation?: true
    partenaire_date_modification?: true
    mission?: true
    formulaire_contact?: true
    version_type?: true
    version_etat_modification?: true
    version_source?: true
    type_organisme?: true
    type_repertoire?: true
    categorie?: true
    sve?: true
    telephone_accessible?: true
    application_mobile?: true
    statut_de_diffusion?: true
    information_complementaire?: true
    commentaire_plage_ouverture?: true
    annuaire?: true
    tchat?: true
    createdAt?: true
    updatedAt?: true
    is_selected?: true
    is_sended?: true
  }

  export type CollectivitesCountAggregateInputType = {
    id?: true
    nom?: true
    type_service_local?: true
    siret?: true
    siren?: true
    code_insee_commune?: true
    code_postal?: true
    code_departement?: true
    nom_departement?: true
    nom_commune?: true
    pays?: true
    continent?: true
    longitude?: true
    latitude?: true
    adresse?: true
    adresse_courriel?: true
    telephone?: true
    telecopie?: true
    site_internet?: true
    copyright?: true
    ancien_code_pivot?: true
    reseau_social?: true
    texte_reference?: true
    partenaire?: true
    itm_identifiant?: true
    sigle?: true
    date_modification?: true
    date_creation?: true
    partenaire_date_modification?: true
    mission?: true
    formulaire_contact?: true
    version_type?: true
    version_etat_modification?: true
    version_source?: true
    type_organisme?: true
    type_repertoire?: true
    plage_ouverture?: true
    hierarchie?: true
    categorie?: true
    sve?: true
    telephone_accessible?: true
    application_mobile?: true
    statut_de_diffusion?: true
    information_complementaire?: true
    commentaire_plage_ouverture?: true
    annuaire?: true
    tchat?: true
    createdAt?: true
    updatedAt?: true
    is_selected?: true
    is_sended?: true
    _all?: true
  }

  export type CollectivitesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which collectivites to aggregate.
     */
    where?: collectivitesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collectivites to fetch.
     */
    orderBy?: collectivitesOrderByWithRelationInput | collectivitesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: collectivitesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collectivites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collectivites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned collectivites
    **/
    _count?: true | CollectivitesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CollectivitesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CollectivitesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CollectivitesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CollectivitesMaxAggregateInputType
  }

  export type GetCollectivitesAggregateType<T extends CollectivitesAggregateArgs> = {
        [P in keyof T & keyof AggregateCollectivites]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCollectivites[P]>
      : GetScalarType<T[P], AggregateCollectivites[P]>
  }




  export type collectivitesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: collectivitesWhereInput
    orderBy?: collectivitesOrderByWithAggregationInput | collectivitesOrderByWithAggregationInput[]
    by: CollectivitesScalarFieldEnum[] | CollectivitesScalarFieldEnum
    having?: collectivitesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CollectivitesCountAggregateInputType | true
    _avg?: CollectivitesAvgAggregateInputType
    _sum?: CollectivitesSumAggregateInputType
    _min?: CollectivitesMinAggregateInputType
    _max?: CollectivitesMaxAggregateInputType
  }

  export type CollectivitesGroupByOutputType = {
    id: number
    nom: string | null
    type_service_local: string | null
    siret: string | null
    siren: string | null
    code_insee_commune: string | null
    code_postal: string | null
    code_departement: string | null
    nom_departement: string | null
    nom_commune: string | null
    pays: string | null
    continent: string | null
    longitude: Decimal | null
    latitude: Decimal | null
    adresse: string | null
    adresse_courriel: string | null
    telephone: string | null
    telecopie: string | null
    site_internet: string | null
    copyright: string | null
    ancien_code_pivot: string | null
    reseau_social: string | null
    texte_reference: string | null
    partenaire: string | null
    itm_identifiant: string | null
    sigle: string | null
    date_modification: Date | null
    date_creation: Date | null
    partenaire_date_modification: Date | null
    mission: string | null
    formulaire_contact: string | null
    version_type: string | null
    version_etat_modification: string | null
    version_source: string | null
    type_organisme: string | null
    type_repertoire: string | null
    plage_ouverture: JsonValue | null
    hierarchie: JsonValue | null
    categorie: string | null
    sve: string | null
    telephone_accessible: string | null
    application_mobile: string | null
    statut_de_diffusion: string | null
    information_complementaire: string | null
    commentaire_plage_ouverture: string | null
    annuaire: string | null
    tchat: string | null
    createdAt: Date | null
    updatedAt: Date | null
    is_selected: boolean
    is_sended: boolean
    _count: CollectivitesCountAggregateOutputType | null
    _avg: CollectivitesAvgAggregateOutputType | null
    _sum: CollectivitesSumAggregateOutputType | null
    _min: CollectivitesMinAggregateOutputType | null
    _max: CollectivitesMaxAggregateOutputType | null
  }

  type GetCollectivitesGroupByPayload<T extends collectivitesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CollectivitesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CollectivitesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CollectivitesGroupByOutputType[P]>
            : GetScalarType<T[P], CollectivitesGroupByOutputType[P]>
        }
      >
    >


  export type collectivitesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nom?: boolean
    type_service_local?: boolean
    siret?: boolean
    siren?: boolean
    code_insee_commune?: boolean
    code_postal?: boolean
    code_departement?: boolean
    nom_departement?: boolean
    nom_commune?: boolean
    pays?: boolean
    continent?: boolean
    longitude?: boolean
    latitude?: boolean
    adresse?: boolean
    adresse_courriel?: boolean
    telephone?: boolean
    telecopie?: boolean
    site_internet?: boolean
    copyright?: boolean
    ancien_code_pivot?: boolean
    reseau_social?: boolean
    texte_reference?: boolean
    partenaire?: boolean
    itm_identifiant?: boolean
    sigle?: boolean
    date_modification?: boolean
    date_creation?: boolean
    partenaire_date_modification?: boolean
    mission?: boolean
    formulaire_contact?: boolean
    version_type?: boolean
    version_etat_modification?: boolean
    version_source?: boolean
    type_organisme?: boolean
    type_repertoire?: boolean
    plage_ouverture?: boolean
    hierarchie?: boolean
    categorie?: boolean
    sve?: boolean
    telephone_accessible?: boolean
    application_mobile?: boolean
    statut_de_diffusion?: boolean
    information_complementaire?: boolean
    commentaire_plage_ouverture?: boolean
    annuaire?: boolean
    tchat?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    is_selected?: boolean
    is_sended?: boolean
    departement_id?: boolean | collectivites$departement_idArgs<ExtArgs>
  }, ExtArgs["result"]["collectivites"]>

  export type collectivitesSelectScalar = {
    id?: boolean
    nom?: boolean
    type_service_local?: boolean
    siret?: boolean
    siren?: boolean
    code_insee_commune?: boolean
    code_postal?: boolean
    code_departement?: boolean
    nom_departement?: boolean
    nom_commune?: boolean
    pays?: boolean
    continent?: boolean
    longitude?: boolean
    latitude?: boolean
    adresse?: boolean
    adresse_courriel?: boolean
    telephone?: boolean
    telecopie?: boolean
    site_internet?: boolean
    copyright?: boolean
    ancien_code_pivot?: boolean
    reseau_social?: boolean
    texte_reference?: boolean
    partenaire?: boolean
    itm_identifiant?: boolean
    sigle?: boolean
    date_modification?: boolean
    date_creation?: boolean
    partenaire_date_modification?: boolean
    mission?: boolean
    formulaire_contact?: boolean
    version_type?: boolean
    version_etat_modification?: boolean
    version_source?: boolean
    type_organisme?: boolean
    type_repertoire?: boolean
    plage_ouverture?: boolean
    hierarchie?: boolean
    categorie?: boolean
    sve?: boolean
    telephone_accessible?: boolean
    application_mobile?: boolean
    statut_de_diffusion?: boolean
    information_complementaire?: boolean
    commentaire_plage_ouverture?: boolean
    annuaire?: boolean
    tchat?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    is_selected?: boolean
    is_sended?: boolean
  }

  export type collectivitesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    departement_id?: boolean | collectivites$departement_idArgs<ExtArgs>
  }


  export type $collectivitesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "collectivites"
    objects: {
      departement_id: Prisma.$departementPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nom: string | null
      type_service_local: string | null
      siret: string | null
      siren: string | null
      code_insee_commune: string | null
      code_postal: string | null
      code_departement: string | null
      nom_departement: string | null
      nom_commune: string | null
      pays: string | null
      continent: string | null
      longitude: Prisma.Decimal | null
      latitude: Prisma.Decimal | null
      adresse: string | null
      adresse_courriel: string | null
      telephone: string | null
      telecopie: string | null
      site_internet: string | null
      copyright: string | null
      ancien_code_pivot: string | null
      reseau_social: string | null
      texte_reference: string | null
      partenaire: string | null
      itm_identifiant: string | null
      sigle: string | null
      date_modification: Date | null
      date_creation: Date | null
      partenaire_date_modification: Date | null
      mission: string | null
      formulaire_contact: string | null
      version_type: string | null
      version_etat_modification: string | null
      version_source: string | null
      type_organisme: string | null
      type_repertoire: string | null
      plage_ouverture: Prisma.JsonValue | null
      hierarchie: Prisma.JsonValue | null
      categorie: string | null
      sve: string | null
      telephone_accessible: string | null
      application_mobile: string | null
      statut_de_diffusion: string | null
      information_complementaire: string | null
      commentaire_plage_ouverture: string | null
      annuaire: string | null
      tchat: string | null
      createdAt: Date | null
      updatedAt: Date | null
      is_selected: boolean
      is_sended: boolean
    }, ExtArgs["result"]["collectivites"]>
    composites: {}
  }


  type collectivitesGetPayload<S extends boolean | null | undefined | collectivitesDefaultArgs> = $Result.GetResult<Prisma.$collectivitesPayload, S>

  type collectivitesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<collectivitesFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: CollectivitesCountAggregateInputType | true
    }

  export interface collectivitesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['collectivites'], meta: { name: 'collectivites' } }
    /**
     * Find zero or one Collectivites that matches the filter.
     * @param {collectivitesFindUniqueArgs} args - Arguments to find a Collectivites
     * @example
     * // Get one Collectivites
     * const collectivites = await prisma.collectivites.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends collectivitesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, collectivitesFindUniqueArgs<ExtArgs>>
    ): Prisma__collectivitesClient<$Result.GetResult<Prisma.$collectivitesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Collectivites that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {collectivitesFindUniqueOrThrowArgs} args - Arguments to find a Collectivites
     * @example
     * // Get one Collectivites
     * const collectivites = await prisma.collectivites.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends collectivitesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, collectivitesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__collectivitesClient<$Result.GetResult<Prisma.$collectivitesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Collectivites that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectivitesFindFirstArgs} args - Arguments to find a Collectivites
     * @example
     * // Get one Collectivites
     * const collectivites = await prisma.collectivites.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends collectivitesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, collectivitesFindFirstArgs<ExtArgs>>
    ): Prisma__collectivitesClient<$Result.GetResult<Prisma.$collectivitesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Collectivites that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectivitesFindFirstOrThrowArgs} args - Arguments to find a Collectivites
     * @example
     * // Get one Collectivites
     * const collectivites = await prisma.collectivites.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends collectivitesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, collectivitesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__collectivitesClient<$Result.GetResult<Prisma.$collectivitesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Collectivites that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectivitesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Collectivites
     * const collectivites = await prisma.collectivites.findMany()
     * 
     * // Get first 10 Collectivites
     * const collectivites = await prisma.collectivites.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const collectivitesWithIdOnly = await prisma.collectivites.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends collectivitesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, collectivitesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$collectivitesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Collectivites.
     * @param {collectivitesCreateArgs} args - Arguments to create a Collectivites.
     * @example
     * // Create one Collectivites
     * const Collectivites = await prisma.collectivites.create({
     *   data: {
     *     // ... data to create a Collectivites
     *   }
     * })
     * 
    **/
    create<T extends collectivitesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, collectivitesCreateArgs<ExtArgs>>
    ): Prisma__collectivitesClient<$Result.GetResult<Prisma.$collectivitesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Collectivites.
     *     @param {collectivitesCreateManyArgs} args - Arguments to create many Collectivites.
     *     @example
     *     // Create many Collectivites
     *     const collectivites = await prisma.collectivites.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends collectivitesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, collectivitesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Collectivites.
     * @param {collectivitesDeleteArgs} args - Arguments to delete one Collectivites.
     * @example
     * // Delete one Collectivites
     * const Collectivites = await prisma.collectivites.delete({
     *   where: {
     *     // ... filter to delete one Collectivites
     *   }
     * })
     * 
    **/
    delete<T extends collectivitesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, collectivitesDeleteArgs<ExtArgs>>
    ): Prisma__collectivitesClient<$Result.GetResult<Prisma.$collectivitesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Collectivites.
     * @param {collectivitesUpdateArgs} args - Arguments to update one Collectivites.
     * @example
     * // Update one Collectivites
     * const collectivites = await prisma.collectivites.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends collectivitesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, collectivitesUpdateArgs<ExtArgs>>
    ): Prisma__collectivitesClient<$Result.GetResult<Prisma.$collectivitesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Collectivites.
     * @param {collectivitesDeleteManyArgs} args - Arguments to filter Collectivites to delete.
     * @example
     * // Delete a few Collectivites
     * const { count } = await prisma.collectivites.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends collectivitesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, collectivitesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Collectivites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectivitesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Collectivites
     * const collectivites = await prisma.collectivites.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends collectivitesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, collectivitesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Collectivites.
     * @param {collectivitesUpsertArgs} args - Arguments to update or create a Collectivites.
     * @example
     * // Update or create a Collectivites
     * const collectivites = await prisma.collectivites.upsert({
     *   create: {
     *     // ... data to create a Collectivites
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Collectivites we want to update
     *   }
     * })
    **/
    upsert<T extends collectivitesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, collectivitesUpsertArgs<ExtArgs>>
    ): Prisma__collectivitesClient<$Result.GetResult<Prisma.$collectivitesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Collectivites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectivitesCountArgs} args - Arguments to filter Collectivites to count.
     * @example
     * // Count the number of Collectivites
     * const count = await prisma.collectivites.count({
     *   where: {
     *     // ... the filter for the Collectivites we want to count
     *   }
     * })
    **/
    count<T extends collectivitesCountArgs>(
      args?: Subset<T, collectivitesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CollectivitesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Collectivites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectivitesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CollectivitesAggregateArgs>(args: Subset<T, CollectivitesAggregateArgs>): Prisma.PrismaPromise<GetCollectivitesAggregateType<T>>

    /**
     * Group by Collectivites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectivitesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends collectivitesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: collectivitesGroupByArgs['orderBy'] }
        : { orderBy?: collectivitesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, collectivitesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCollectivitesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the collectivites model
   */
  readonly fields: collectivitesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for collectivites.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__collectivitesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    departement_id<T extends collectivites$departement_idArgs<ExtArgs> = {}>(args?: Subset<T, collectivites$departement_idArgs<ExtArgs>>): Prisma__departementClient<$Result.GetResult<Prisma.$departementPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the collectivites model
   */ 
  interface collectivitesFieldRefs {
    readonly id: FieldRef<"collectivites", 'Int'>
    readonly nom: FieldRef<"collectivites", 'String'>
    readonly type_service_local: FieldRef<"collectivites", 'String'>
    readonly siret: FieldRef<"collectivites", 'String'>
    readonly siren: FieldRef<"collectivites", 'String'>
    readonly code_insee_commune: FieldRef<"collectivites", 'String'>
    readonly code_postal: FieldRef<"collectivites", 'String'>
    readonly code_departement: FieldRef<"collectivites", 'String'>
    readonly nom_departement: FieldRef<"collectivites", 'String'>
    readonly nom_commune: FieldRef<"collectivites", 'String'>
    readonly pays: FieldRef<"collectivites", 'String'>
    readonly continent: FieldRef<"collectivites", 'String'>
    readonly longitude: FieldRef<"collectivites", 'Decimal'>
    readonly latitude: FieldRef<"collectivites", 'Decimal'>
    readonly adresse: FieldRef<"collectivites", 'String'>
    readonly adresse_courriel: FieldRef<"collectivites", 'String'>
    readonly telephone: FieldRef<"collectivites", 'String'>
    readonly telecopie: FieldRef<"collectivites", 'String'>
    readonly site_internet: FieldRef<"collectivites", 'String'>
    readonly copyright: FieldRef<"collectivites", 'String'>
    readonly ancien_code_pivot: FieldRef<"collectivites", 'String'>
    readonly reseau_social: FieldRef<"collectivites", 'String'>
    readonly texte_reference: FieldRef<"collectivites", 'String'>
    readonly partenaire: FieldRef<"collectivites", 'String'>
    readonly itm_identifiant: FieldRef<"collectivites", 'String'>
    readonly sigle: FieldRef<"collectivites", 'String'>
    readonly date_modification: FieldRef<"collectivites", 'DateTime'>
    readonly date_creation: FieldRef<"collectivites", 'DateTime'>
    readonly partenaire_date_modification: FieldRef<"collectivites", 'DateTime'>
    readonly mission: FieldRef<"collectivites", 'String'>
    readonly formulaire_contact: FieldRef<"collectivites", 'String'>
    readonly version_type: FieldRef<"collectivites", 'String'>
    readonly version_etat_modification: FieldRef<"collectivites", 'String'>
    readonly version_source: FieldRef<"collectivites", 'String'>
    readonly type_organisme: FieldRef<"collectivites", 'String'>
    readonly type_repertoire: FieldRef<"collectivites", 'String'>
    readonly plage_ouverture: FieldRef<"collectivites", 'Json'>
    readonly hierarchie: FieldRef<"collectivites", 'Json'>
    readonly categorie: FieldRef<"collectivites", 'String'>
    readonly sve: FieldRef<"collectivites", 'String'>
    readonly telephone_accessible: FieldRef<"collectivites", 'String'>
    readonly application_mobile: FieldRef<"collectivites", 'String'>
    readonly statut_de_diffusion: FieldRef<"collectivites", 'String'>
    readonly information_complementaire: FieldRef<"collectivites", 'String'>
    readonly commentaire_plage_ouverture: FieldRef<"collectivites", 'String'>
    readonly annuaire: FieldRef<"collectivites", 'String'>
    readonly tchat: FieldRef<"collectivites", 'String'>
    readonly createdAt: FieldRef<"collectivites", 'DateTime'>
    readonly updatedAt: FieldRef<"collectivites", 'DateTime'>
    readonly is_selected: FieldRef<"collectivites", 'Boolean'>
    readonly is_sended: FieldRef<"collectivites", 'Boolean'>
  }
    

  // Custom InputTypes

  /**
   * collectivites findUnique
   */
  export type collectivitesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites
     */
    select?: collectivitesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectivitesInclude<ExtArgs> | null
    /**
     * Filter, which collectivites to fetch.
     */
    where: collectivitesWhereUniqueInput
  }


  /**
   * collectivites findUniqueOrThrow
   */
  export type collectivitesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites
     */
    select?: collectivitesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectivitesInclude<ExtArgs> | null
    /**
     * Filter, which collectivites to fetch.
     */
    where: collectivitesWhereUniqueInput
  }


  /**
   * collectivites findFirst
   */
  export type collectivitesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites
     */
    select?: collectivitesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectivitesInclude<ExtArgs> | null
    /**
     * Filter, which collectivites to fetch.
     */
    where?: collectivitesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collectivites to fetch.
     */
    orderBy?: collectivitesOrderByWithRelationInput | collectivitesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for collectivites.
     */
    cursor?: collectivitesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collectivites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collectivites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of collectivites.
     */
    distinct?: CollectivitesScalarFieldEnum | CollectivitesScalarFieldEnum[]
  }


  /**
   * collectivites findFirstOrThrow
   */
  export type collectivitesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites
     */
    select?: collectivitesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectivitesInclude<ExtArgs> | null
    /**
     * Filter, which collectivites to fetch.
     */
    where?: collectivitesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collectivites to fetch.
     */
    orderBy?: collectivitesOrderByWithRelationInput | collectivitesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for collectivites.
     */
    cursor?: collectivitesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collectivites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collectivites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of collectivites.
     */
    distinct?: CollectivitesScalarFieldEnum | CollectivitesScalarFieldEnum[]
  }


  /**
   * collectivites findMany
   */
  export type collectivitesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites
     */
    select?: collectivitesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectivitesInclude<ExtArgs> | null
    /**
     * Filter, which collectivites to fetch.
     */
    where?: collectivitesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collectivites to fetch.
     */
    orderBy?: collectivitesOrderByWithRelationInput | collectivitesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing collectivites.
     */
    cursor?: collectivitesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collectivites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collectivites.
     */
    skip?: number
    distinct?: CollectivitesScalarFieldEnum | CollectivitesScalarFieldEnum[]
  }


  /**
   * collectivites create
   */
  export type collectivitesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites
     */
    select?: collectivitesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectivitesInclude<ExtArgs> | null
    /**
     * The data needed to create a collectivites.
     */
    data?: XOR<collectivitesCreateInput, collectivitesUncheckedCreateInput>
  }


  /**
   * collectivites createMany
   */
  export type collectivitesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many collectivites.
     */
    data: collectivitesCreateManyInput | collectivitesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * collectivites update
   */
  export type collectivitesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites
     */
    select?: collectivitesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectivitesInclude<ExtArgs> | null
    /**
     * The data needed to update a collectivites.
     */
    data: XOR<collectivitesUpdateInput, collectivitesUncheckedUpdateInput>
    /**
     * Choose, which collectivites to update.
     */
    where: collectivitesWhereUniqueInput
  }


  /**
   * collectivites updateMany
   */
  export type collectivitesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update collectivites.
     */
    data: XOR<collectivitesUpdateManyMutationInput, collectivitesUncheckedUpdateManyInput>
    /**
     * Filter which collectivites to update
     */
    where?: collectivitesWhereInput
  }


  /**
   * collectivites upsert
   */
  export type collectivitesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites
     */
    select?: collectivitesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectivitesInclude<ExtArgs> | null
    /**
     * The filter to search for the collectivites to update in case it exists.
     */
    where: collectivitesWhereUniqueInput
    /**
     * In case the collectivites found by the `where` argument doesn't exist, create a new collectivites with this data.
     */
    create: XOR<collectivitesCreateInput, collectivitesUncheckedCreateInput>
    /**
     * In case the collectivites was found with the provided `where` argument, update it with this data.
     */
    update: XOR<collectivitesUpdateInput, collectivitesUncheckedUpdateInput>
  }


  /**
   * collectivites delete
   */
  export type collectivitesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites
     */
    select?: collectivitesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectivitesInclude<ExtArgs> | null
    /**
     * Filter which collectivites to delete.
     */
    where: collectivitesWhereUniqueInput
  }


  /**
   * collectivites deleteMany
   */
  export type collectivitesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which collectivites to delete
     */
    where?: collectivitesWhereInput
  }


  /**
   * collectivites.departement_id
   */
  export type collectivites$departement_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departement
     */
    select?: departementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: departementInclude<ExtArgs> | null
    where?: departementWhereInput
  }


  /**
   * collectivites without action
   */
  export type collectivitesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites
     */
    select?: collectivitesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectivitesInclude<ExtArgs> | null
  }



  /**
   * Model collectivites_join
   */

  export type AggregateCollectivites_join = {
    _count: Collectivites_joinCountAggregateOutputType | null
    _min: Collectivites_joinMinAggregateOutputType | null
    _max: Collectivites_joinMaxAggregateOutputType | null
  }

  export type Collectivites_joinMinAggregateOutputType = {
    code_postal: string | null
    code_departement: string | null
  }

  export type Collectivites_joinMaxAggregateOutputType = {
    code_postal: string | null
    code_departement: string | null
  }

  export type Collectivites_joinCountAggregateOutputType = {
    code_postal: number
    code_departement: number
    _all: number
  }


  export type Collectivites_joinMinAggregateInputType = {
    code_postal?: true
    code_departement?: true
  }

  export type Collectivites_joinMaxAggregateInputType = {
    code_postal?: true
    code_departement?: true
  }

  export type Collectivites_joinCountAggregateInputType = {
    code_postal?: true
    code_departement?: true
    _all?: true
  }

  export type Collectivites_joinAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which collectivites_join to aggregate.
     */
    where?: collectivites_joinWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collectivites_joins to fetch.
     */
    orderBy?: collectivites_joinOrderByWithRelationInput | collectivites_joinOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: collectivites_joinWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collectivites_joins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collectivites_joins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned collectivites_joins
    **/
    _count?: true | Collectivites_joinCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Collectivites_joinMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Collectivites_joinMaxAggregateInputType
  }

  export type GetCollectivites_joinAggregateType<T extends Collectivites_joinAggregateArgs> = {
        [P in keyof T & keyof AggregateCollectivites_join]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCollectivites_join[P]>
      : GetScalarType<T[P], AggregateCollectivites_join[P]>
  }




  export type collectivites_joinGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: collectivites_joinWhereInput
    orderBy?: collectivites_joinOrderByWithAggregationInput | collectivites_joinOrderByWithAggregationInput[]
    by: Collectivites_joinScalarFieldEnum[] | Collectivites_joinScalarFieldEnum
    having?: collectivites_joinScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Collectivites_joinCountAggregateInputType | true
    _min?: Collectivites_joinMinAggregateInputType
    _max?: Collectivites_joinMaxAggregateInputType
  }

  export type Collectivites_joinGroupByOutputType = {
    code_postal: string
    code_departement: string | null
    _count: Collectivites_joinCountAggregateOutputType | null
    _min: Collectivites_joinMinAggregateOutputType | null
    _max: Collectivites_joinMaxAggregateOutputType | null
  }

  type GetCollectivites_joinGroupByPayload<T extends collectivites_joinGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Collectivites_joinGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Collectivites_joinGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Collectivites_joinGroupByOutputType[P]>
            : GetScalarType<T[P], Collectivites_joinGroupByOutputType[P]>
        }
      >
    >


  export type collectivites_joinSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    code_postal?: boolean
    code_departement?: boolean
  }, ExtArgs["result"]["collectivites_join"]>

  export type collectivites_joinSelectScalar = {
    code_postal?: boolean
    code_departement?: boolean
  }


  export type $collectivites_joinPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "collectivites_join"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      code_postal: string
      code_departement: string | null
    }, ExtArgs["result"]["collectivites_join"]>
    composites: {}
  }


  type collectivites_joinGetPayload<S extends boolean | null | undefined | collectivites_joinDefaultArgs> = $Result.GetResult<Prisma.$collectivites_joinPayload, S>

  type collectivites_joinCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<collectivites_joinFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Collectivites_joinCountAggregateInputType | true
    }

  export interface collectivites_joinDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['collectivites_join'], meta: { name: 'collectivites_join' } }
    /**
     * Find zero or one Collectivites_join that matches the filter.
     * @param {collectivites_joinFindUniqueArgs} args - Arguments to find a Collectivites_join
     * @example
     * // Get one Collectivites_join
     * const collectivites_join = await prisma.collectivites_join.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends collectivites_joinFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, collectivites_joinFindUniqueArgs<ExtArgs>>
    ): Prisma__collectivites_joinClient<$Result.GetResult<Prisma.$collectivites_joinPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Collectivites_join that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {collectivites_joinFindUniqueOrThrowArgs} args - Arguments to find a Collectivites_join
     * @example
     * // Get one Collectivites_join
     * const collectivites_join = await prisma.collectivites_join.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends collectivites_joinFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, collectivites_joinFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__collectivites_joinClient<$Result.GetResult<Prisma.$collectivites_joinPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Collectivites_join that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectivites_joinFindFirstArgs} args - Arguments to find a Collectivites_join
     * @example
     * // Get one Collectivites_join
     * const collectivites_join = await prisma.collectivites_join.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends collectivites_joinFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, collectivites_joinFindFirstArgs<ExtArgs>>
    ): Prisma__collectivites_joinClient<$Result.GetResult<Prisma.$collectivites_joinPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Collectivites_join that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectivites_joinFindFirstOrThrowArgs} args - Arguments to find a Collectivites_join
     * @example
     * // Get one Collectivites_join
     * const collectivites_join = await prisma.collectivites_join.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends collectivites_joinFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, collectivites_joinFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__collectivites_joinClient<$Result.GetResult<Prisma.$collectivites_joinPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Collectivites_joins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectivites_joinFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Collectivites_joins
     * const collectivites_joins = await prisma.collectivites_join.findMany()
     * 
     * // Get first 10 Collectivites_joins
     * const collectivites_joins = await prisma.collectivites_join.findMany({ take: 10 })
     * 
     * // Only select the `code_postal`
     * const collectivites_joinWithCode_postalOnly = await prisma.collectivites_join.findMany({ select: { code_postal: true } })
     * 
    **/
    findMany<T extends collectivites_joinFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, collectivites_joinFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$collectivites_joinPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Collectivites_join.
     * @param {collectivites_joinCreateArgs} args - Arguments to create a Collectivites_join.
     * @example
     * // Create one Collectivites_join
     * const Collectivites_join = await prisma.collectivites_join.create({
     *   data: {
     *     // ... data to create a Collectivites_join
     *   }
     * })
     * 
    **/
    create<T extends collectivites_joinCreateArgs<ExtArgs>>(
      args: SelectSubset<T, collectivites_joinCreateArgs<ExtArgs>>
    ): Prisma__collectivites_joinClient<$Result.GetResult<Prisma.$collectivites_joinPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Collectivites_joins.
     *     @param {collectivites_joinCreateManyArgs} args - Arguments to create many Collectivites_joins.
     *     @example
     *     // Create many Collectivites_joins
     *     const collectivites_join = await prisma.collectivites_join.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends collectivites_joinCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, collectivites_joinCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Collectivites_join.
     * @param {collectivites_joinDeleteArgs} args - Arguments to delete one Collectivites_join.
     * @example
     * // Delete one Collectivites_join
     * const Collectivites_join = await prisma.collectivites_join.delete({
     *   where: {
     *     // ... filter to delete one Collectivites_join
     *   }
     * })
     * 
    **/
    delete<T extends collectivites_joinDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, collectivites_joinDeleteArgs<ExtArgs>>
    ): Prisma__collectivites_joinClient<$Result.GetResult<Prisma.$collectivites_joinPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Collectivites_join.
     * @param {collectivites_joinUpdateArgs} args - Arguments to update one Collectivites_join.
     * @example
     * // Update one Collectivites_join
     * const collectivites_join = await prisma.collectivites_join.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends collectivites_joinUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, collectivites_joinUpdateArgs<ExtArgs>>
    ): Prisma__collectivites_joinClient<$Result.GetResult<Prisma.$collectivites_joinPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Collectivites_joins.
     * @param {collectivites_joinDeleteManyArgs} args - Arguments to filter Collectivites_joins to delete.
     * @example
     * // Delete a few Collectivites_joins
     * const { count } = await prisma.collectivites_join.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends collectivites_joinDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, collectivites_joinDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Collectivites_joins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectivites_joinUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Collectivites_joins
     * const collectivites_join = await prisma.collectivites_join.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends collectivites_joinUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, collectivites_joinUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Collectivites_join.
     * @param {collectivites_joinUpsertArgs} args - Arguments to update or create a Collectivites_join.
     * @example
     * // Update or create a Collectivites_join
     * const collectivites_join = await prisma.collectivites_join.upsert({
     *   create: {
     *     // ... data to create a Collectivites_join
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Collectivites_join we want to update
     *   }
     * })
    **/
    upsert<T extends collectivites_joinUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, collectivites_joinUpsertArgs<ExtArgs>>
    ): Prisma__collectivites_joinClient<$Result.GetResult<Prisma.$collectivites_joinPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Collectivites_joins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectivites_joinCountArgs} args - Arguments to filter Collectivites_joins to count.
     * @example
     * // Count the number of Collectivites_joins
     * const count = await prisma.collectivites_join.count({
     *   where: {
     *     // ... the filter for the Collectivites_joins we want to count
     *   }
     * })
    **/
    count<T extends collectivites_joinCountArgs>(
      args?: Subset<T, collectivites_joinCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Collectivites_joinCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Collectivites_join.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Collectivites_joinAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Collectivites_joinAggregateArgs>(args: Subset<T, Collectivites_joinAggregateArgs>): Prisma.PrismaPromise<GetCollectivites_joinAggregateType<T>>

    /**
     * Group by Collectivites_join.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectivites_joinGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends collectivites_joinGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: collectivites_joinGroupByArgs['orderBy'] }
        : { orderBy?: collectivites_joinGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, collectivites_joinGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCollectivites_joinGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the collectivites_join model
   */
  readonly fields: collectivites_joinFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for collectivites_join.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__collectivites_joinClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the collectivites_join model
   */ 
  interface collectivites_joinFieldRefs {
    readonly code_postal: FieldRef<"collectivites_join", 'String'>
    readonly code_departement: FieldRef<"collectivites_join", 'String'>
  }
    

  // Custom InputTypes

  /**
   * collectivites_join findUnique
   */
  export type collectivites_joinFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites_join
     */
    select?: collectivites_joinSelect<ExtArgs> | null
    /**
     * Filter, which collectivites_join to fetch.
     */
    where: collectivites_joinWhereUniqueInput
  }


  /**
   * collectivites_join findUniqueOrThrow
   */
  export type collectivites_joinFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites_join
     */
    select?: collectivites_joinSelect<ExtArgs> | null
    /**
     * Filter, which collectivites_join to fetch.
     */
    where: collectivites_joinWhereUniqueInput
  }


  /**
   * collectivites_join findFirst
   */
  export type collectivites_joinFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites_join
     */
    select?: collectivites_joinSelect<ExtArgs> | null
    /**
     * Filter, which collectivites_join to fetch.
     */
    where?: collectivites_joinWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collectivites_joins to fetch.
     */
    orderBy?: collectivites_joinOrderByWithRelationInput | collectivites_joinOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for collectivites_joins.
     */
    cursor?: collectivites_joinWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collectivites_joins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collectivites_joins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of collectivites_joins.
     */
    distinct?: Collectivites_joinScalarFieldEnum | Collectivites_joinScalarFieldEnum[]
  }


  /**
   * collectivites_join findFirstOrThrow
   */
  export type collectivites_joinFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites_join
     */
    select?: collectivites_joinSelect<ExtArgs> | null
    /**
     * Filter, which collectivites_join to fetch.
     */
    where?: collectivites_joinWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collectivites_joins to fetch.
     */
    orderBy?: collectivites_joinOrderByWithRelationInput | collectivites_joinOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for collectivites_joins.
     */
    cursor?: collectivites_joinWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collectivites_joins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collectivites_joins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of collectivites_joins.
     */
    distinct?: Collectivites_joinScalarFieldEnum | Collectivites_joinScalarFieldEnum[]
  }


  /**
   * collectivites_join findMany
   */
  export type collectivites_joinFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites_join
     */
    select?: collectivites_joinSelect<ExtArgs> | null
    /**
     * Filter, which collectivites_joins to fetch.
     */
    where?: collectivites_joinWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collectivites_joins to fetch.
     */
    orderBy?: collectivites_joinOrderByWithRelationInput | collectivites_joinOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing collectivites_joins.
     */
    cursor?: collectivites_joinWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collectivites_joins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collectivites_joins.
     */
    skip?: number
    distinct?: Collectivites_joinScalarFieldEnum | Collectivites_joinScalarFieldEnum[]
  }


  /**
   * collectivites_join create
   */
  export type collectivites_joinCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites_join
     */
    select?: collectivites_joinSelect<ExtArgs> | null
    /**
     * The data needed to create a collectivites_join.
     */
    data: XOR<collectivites_joinCreateInput, collectivites_joinUncheckedCreateInput>
  }


  /**
   * collectivites_join createMany
   */
  export type collectivites_joinCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many collectivites_joins.
     */
    data: collectivites_joinCreateManyInput | collectivites_joinCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * collectivites_join update
   */
  export type collectivites_joinUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites_join
     */
    select?: collectivites_joinSelect<ExtArgs> | null
    /**
     * The data needed to update a collectivites_join.
     */
    data: XOR<collectivites_joinUpdateInput, collectivites_joinUncheckedUpdateInput>
    /**
     * Choose, which collectivites_join to update.
     */
    where: collectivites_joinWhereUniqueInput
  }


  /**
   * collectivites_join updateMany
   */
  export type collectivites_joinUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update collectivites_joins.
     */
    data: XOR<collectivites_joinUpdateManyMutationInput, collectivites_joinUncheckedUpdateManyInput>
    /**
     * Filter which collectivites_joins to update
     */
    where?: collectivites_joinWhereInput
  }


  /**
   * collectivites_join upsert
   */
  export type collectivites_joinUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites_join
     */
    select?: collectivites_joinSelect<ExtArgs> | null
    /**
     * The filter to search for the collectivites_join to update in case it exists.
     */
    where: collectivites_joinWhereUniqueInput
    /**
     * In case the collectivites_join found by the `where` argument doesn't exist, create a new collectivites_join with this data.
     */
    create: XOR<collectivites_joinCreateInput, collectivites_joinUncheckedCreateInput>
    /**
     * In case the collectivites_join was found with the provided `where` argument, update it with this data.
     */
    update: XOR<collectivites_joinUpdateInput, collectivites_joinUncheckedUpdateInput>
  }


  /**
   * collectivites_join delete
   */
  export type collectivites_joinDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites_join
     */
    select?: collectivites_joinSelect<ExtArgs> | null
    /**
     * Filter which collectivites_join to delete.
     */
    where: collectivites_joinWhereUniqueInput
  }


  /**
   * collectivites_join deleteMany
   */
  export type collectivites_joinDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which collectivites_joins to delete
     */
    where?: collectivites_joinWhereInput
  }


  /**
   * collectivites_join without action
   */
  export type collectivites_joinDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites_join
     */
    select?: collectivites_joinSelect<ExtArgs> | null
  }



  /**
   * Model collectivites_test
   */

  export type AggregateCollectivites_test = {
    _count: Collectivites_testCountAggregateOutputType | null
    _avg: Collectivites_testAvgAggregateOutputType | null
    _sum: Collectivites_testSumAggregateOutputType | null
    _min: Collectivites_testMinAggregateOutputType | null
    _max: Collectivites_testMaxAggregateOutputType | null
  }

  export type Collectivites_testAvgAggregateOutputType = {
    id: number | null
    longitude: Decimal | null
    latitude: Decimal | null
  }

  export type Collectivites_testSumAggregateOutputType = {
    id: number | null
    longitude: Decimal | null
    latitude: Decimal | null
  }

  export type Collectivites_testMinAggregateOutputType = {
    id: number | null
    nom: string | null
    type_service_local: string | null
    siret: string | null
    siren: string | null
    code_insee_commune: string | null
    code_postal: string | null
    nom_commune: string | null
    pays: string | null
    continent: string | null
    longitude: Decimal | null
    latitude: Decimal | null
    adresse: string | null
    adresse_courriel: string | null
    telephone: string | null
    telecopie: string | null
    site_internet: string | null
    copyright: string | null
    ancien_code_pivot: string | null
    reseau_social: string | null
    texte_reference: string | null
    partenaire: string | null
    itm_identifiant: string | null
    sigle: string | null
    date_modification: Date | null
    date_creation: Date | null
    partenaire_date_modification: Date | null
    mission: string | null
    formulaire_contact: string | null
    version_type: string | null
    version_etat_modification: string | null
    version_source: string | null
    type_organisme: string | null
    type_repertoire: string | null
    categorie: string | null
    sve: string | null
    telephone_accessible: string | null
    application_mobile: string | null
    statut_de_diffusion: string | null
    information_complementaire: string | null
    commentaire_plage_ouverture: string | null
    annuaire: string | null
    tchat: string | null
    createdAt: Date | null
    updatedAt: Date | null
    is_selected: boolean | null
    is_sended: boolean | null
  }

  export type Collectivites_testMaxAggregateOutputType = {
    id: number | null
    nom: string | null
    type_service_local: string | null
    siret: string | null
    siren: string | null
    code_insee_commune: string | null
    code_postal: string | null
    nom_commune: string | null
    pays: string | null
    continent: string | null
    longitude: Decimal | null
    latitude: Decimal | null
    adresse: string | null
    adresse_courriel: string | null
    telephone: string | null
    telecopie: string | null
    site_internet: string | null
    copyright: string | null
    ancien_code_pivot: string | null
    reseau_social: string | null
    texte_reference: string | null
    partenaire: string | null
    itm_identifiant: string | null
    sigle: string | null
    date_modification: Date | null
    date_creation: Date | null
    partenaire_date_modification: Date | null
    mission: string | null
    formulaire_contact: string | null
    version_type: string | null
    version_etat_modification: string | null
    version_source: string | null
    type_organisme: string | null
    type_repertoire: string | null
    categorie: string | null
    sve: string | null
    telephone_accessible: string | null
    application_mobile: string | null
    statut_de_diffusion: string | null
    information_complementaire: string | null
    commentaire_plage_ouverture: string | null
    annuaire: string | null
    tchat: string | null
    createdAt: Date | null
    updatedAt: Date | null
    is_selected: boolean | null
    is_sended: boolean | null
  }

  export type Collectivites_testCountAggregateOutputType = {
    id: number
    nom: number
    type_service_local: number
    siret: number
    siren: number
    code_insee_commune: number
    code_postal: number
    nom_commune: number
    pays: number
    continent: number
    longitude: number
    latitude: number
    adresse: number
    adresse_courriel: number
    telephone: number
    telecopie: number
    site_internet: number
    copyright: number
    ancien_code_pivot: number
    reseau_social: number
    texte_reference: number
    partenaire: number
    itm_identifiant: number
    sigle: number
    date_modification: number
    date_creation: number
    partenaire_date_modification: number
    mission: number
    formulaire_contact: number
    version_type: number
    version_etat_modification: number
    version_source: number
    type_organisme: number
    type_repertoire: number
    plage_ouverture: number
    hierarchie: number
    categorie: number
    sve: number
    telephone_accessible: number
    application_mobile: number
    statut_de_diffusion: number
    information_complementaire: number
    commentaire_plage_ouverture: number
    annuaire: number
    tchat: number
    createdAt: number
    updatedAt: number
    is_selected: number
    is_sended: number
    _all: number
  }


  export type Collectivites_testAvgAggregateInputType = {
    id?: true
    longitude?: true
    latitude?: true
  }

  export type Collectivites_testSumAggregateInputType = {
    id?: true
    longitude?: true
    latitude?: true
  }

  export type Collectivites_testMinAggregateInputType = {
    id?: true
    nom?: true
    type_service_local?: true
    siret?: true
    siren?: true
    code_insee_commune?: true
    code_postal?: true
    nom_commune?: true
    pays?: true
    continent?: true
    longitude?: true
    latitude?: true
    adresse?: true
    adresse_courriel?: true
    telephone?: true
    telecopie?: true
    site_internet?: true
    copyright?: true
    ancien_code_pivot?: true
    reseau_social?: true
    texte_reference?: true
    partenaire?: true
    itm_identifiant?: true
    sigle?: true
    date_modification?: true
    date_creation?: true
    partenaire_date_modification?: true
    mission?: true
    formulaire_contact?: true
    version_type?: true
    version_etat_modification?: true
    version_source?: true
    type_organisme?: true
    type_repertoire?: true
    categorie?: true
    sve?: true
    telephone_accessible?: true
    application_mobile?: true
    statut_de_diffusion?: true
    information_complementaire?: true
    commentaire_plage_ouverture?: true
    annuaire?: true
    tchat?: true
    createdAt?: true
    updatedAt?: true
    is_selected?: true
    is_sended?: true
  }

  export type Collectivites_testMaxAggregateInputType = {
    id?: true
    nom?: true
    type_service_local?: true
    siret?: true
    siren?: true
    code_insee_commune?: true
    code_postal?: true
    nom_commune?: true
    pays?: true
    continent?: true
    longitude?: true
    latitude?: true
    adresse?: true
    adresse_courriel?: true
    telephone?: true
    telecopie?: true
    site_internet?: true
    copyright?: true
    ancien_code_pivot?: true
    reseau_social?: true
    texte_reference?: true
    partenaire?: true
    itm_identifiant?: true
    sigle?: true
    date_modification?: true
    date_creation?: true
    partenaire_date_modification?: true
    mission?: true
    formulaire_contact?: true
    version_type?: true
    version_etat_modification?: true
    version_source?: true
    type_organisme?: true
    type_repertoire?: true
    categorie?: true
    sve?: true
    telephone_accessible?: true
    application_mobile?: true
    statut_de_diffusion?: true
    information_complementaire?: true
    commentaire_plage_ouverture?: true
    annuaire?: true
    tchat?: true
    createdAt?: true
    updatedAt?: true
    is_selected?: true
    is_sended?: true
  }

  export type Collectivites_testCountAggregateInputType = {
    id?: true
    nom?: true
    type_service_local?: true
    siret?: true
    siren?: true
    code_insee_commune?: true
    code_postal?: true
    nom_commune?: true
    pays?: true
    continent?: true
    longitude?: true
    latitude?: true
    adresse?: true
    adresse_courriel?: true
    telephone?: true
    telecopie?: true
    site_internet?: true
    copyright?: true
    ancien_code_pivot?: true
    reseau_social?: true
    texte_reference?: true
    partenaire?: true
    itm_identifiant?: true
    sigle?: true
    date_modification?: true
    date_creation?: true
    partenaire_date_modification?: true
    mission?: true
    formulaire_contact?: true
    version_type?: true
    version_etat_modification?: true
    version_source?: true
    type_organisme?: true
    type_repertoire?: true
    plage_ouverture?: true
    hierarchie?: true
    categorie?: true
    sve?: true
    telephone_accessible?: true
    application_mobile?: true
    statut_de_diffusion?: true
    information_complementaire?: true
    commentaire_plage_ouverture?: true
    annuaire?: true
    tchat?: true
    createdAt?: true
    updatedAt?: true
    is_selected?: true
    is_sended?: true
    _all?: true
  }

  export type Collectivites_testAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which collectivites_test to aggregate.
     */
    where?: collectivites_testWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collectivites_tests to fetch.
     */
    orderBy?: collectivites_testOrderByWithRelationInput | collectivites_testOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: collectivites_testWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collectivites_tests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collectivites_tests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned collectivites_tests
    **/
    _count?: true | Collectivites_testCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Collectivites_testAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Collectivites_testSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Collectivites_testMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Collectivites_testMaxAggregateInputType
  }

  export type GetCollectivites_testAggregateType<T extends Collectivites_testAggregateArgs> = {
        [P in keyof T & keyof AggregateCollectivites_test]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCollectivites_test[P]>
      : GetScalarType<T[P], AggregateCollectivites_test[P]>
  }




  export type collectivites_testGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: collectivites_testWhereInput
    orderBy?: collectivites_testOrderByWithAggregationInput | collectivites_testOrderByWithAggregationInput[]
    by: Collectivites_testScalarFieldEnum[] | Collectivites_testScalarFieldEnum
    having?: collectivites_testScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Collectivites_testCountAggregateInputType | true
    _avg?: Collectivites_testAvgAggregateInputType
    _sum?: Collectivites_testSumAggregateInputType
    _min?: Collectivites_testMinAggregateInputType
    _max?: Collectivites_testMaxAggregateInputType
  }

  export type Collectivites_testGroupByOutputType = {
    id: number
    nom: string | null
    type_service_local: string | null
    siret: string | null
    siren: string | null
    code_insee_commune: string | null
    code_postal: string | null
    nom_commune: string | null
    pays: string | null
    continent: string | null
    longitude: Decimal | null
    latitude: Decimal | null
    adresse: string | null
    adresse_courriel: string | null
    telephone: string | null
    telecopie: string | null
    site_internet: string | null
    copyright: string | null
    ancien_code_pivot: string | null
    reseau_social: string | null
    texte_reference: string | null
    partenaire: string | null
    itm_identifiant: string | null
    sigle: string | null
    date_modification: Date | null
    date_creation: Date | null
    partenaire_date_modification: Date | null
    mission: string | null
    formulaire_contact: string | null
    version_type: string | null
    version_etat_modification: string | null
    version_source: string | null
    type_organisme: string | null
    type_repertoire: string | null
    plage_ouverture: JsonValue | null
    hierarchie: JsonValue | null
    categorie: string | null
    sve: string | null
    telephone_accessible: string | null
    application_mobile: string | null
    statut_de_diffusion: string | null
    information_complementaire: string | null
    commentaire_plage_ouverture: string | null
    annuaire: string | null
    tchat: string | null
    createdAt: Date | null
    updatedAt: Date | null
    is_selected: boolean
    is_sended: boolean
    _count: Collectivites_testCountAggregateOutputType | null
    _avg: Collectivites_testAvgAggregateOutputType | null
    _sum: Collectivites_testSumAggregateOutputType | null
    _min: Collectivites_testMinAggregateOutputType | null
    _max: Collectivites_testMaxAggregateOutputType | null
  }

  type GetCollectivites_testGroupByPayload<T extends collectivites_testGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Collectivites_testGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Collectivites_testGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Collectivites_testGroupByOutputType[P]>
            : GetScalarType<T[P], Collectivites_testGroupByOutputType[P]>
        }
      >
    >


  export type collectivites_testSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nom?: boolean
    type_service_local?: boolean
    siret?: boolean
    siren?: boolean
    code_insee_commune?: boolean
    code_postal?: boolean
    nom_commune?: boolean
    pays?: boolean
    continent?: boolean
    longitude?: boolean
    latitude?: boolean
    adresse?: boolean
    adresse_courriel?: boolean
    telephone?: boolean
    telecopie?: boolean
    site_internet?: boolean
    copyright?: boolean
    ancien_code_pivot?: boolean
    reseau_social?: boolean
    texte_reference?: boolean
    partenaire?: boolean
    itm_identifiant?: boolean
    sigle?: boolean
    date_modification?: boolean
    date_creation?: boolean
    partenaire_date_modification?: boolean
    mission?: boolean
    formulaire_contact?: boolean
    version_type?: boolean
    version_etat_modification?: boolean
    version_source?: boolean
    type_organisme?: boolean
    type_repertoire?: boolean
    plage_ouverture?: boolean
    hierarchie?: boolean
    categorie?: boolean
    sve?: boolean
    telephone_accessible?: boolean
    application_mobile?: boolean
    statut_de_diffusion?: boolean
    information_complementaire?: boolean
    commentaire_plage_ouverture?: boolean
    annuaire?: boolean
    tchat?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    is_selected?: boolean
    is_sended?: boolean
  }, ExtArgs["result"]["collectivites_test"]>

  export type collectivites_testSelectScalar = {
    id?: boolean
    nom?: boolean
    type_service_local?: boolean
    siret?: boolean
    siren?: boolean
    code_insee_commune?: boolean
    code_postal?: boolean
    nom_commune?: boolean
    pays?: boolean
    continent?: boolean
    longitude?: boolean
    latitude?: boolean
    adresse?: boolean
    adresse_courriel?: boolean
    telephone?: boolean
    telecopie?: boolean
    site_internet?: boolean
    copyright?: boolean
    ancien_code_pivot?: boolean
    reseau_social?: boolean
    texte_reference?: boolean
    partenaire?: boolean
    itm_identifiant?: boolean
    sigle?: boolean
    date_modification?: boolean
    date_creation?: boolean
    partenaire_date_modification?: boolean
    mission?: boolean
    formulaire_contact?: boolean
    version_type?: boolean
    version_etat_modification?: boolean
    version_source?: boolean
    type_organisme?: boolean
    type_repertoire?: boolean
    plage_ouverture?: boolean
    hierarchie?: boolean
    categorie?: boolean
    sve?: boolean
    telephone_accessible?: boolean
    application_mobile?: boolean
    statut_de_diffusion?: boolean
    information_complementaire?: boolean
    commentaire_plage_ouverture?: boolean
    annuaire?: boolean
    tchat?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    is_selected?: boolean
    is_sended?: boolean
  }


  export type $collectivites_testPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "collectivites_test"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nom: string | null
      type_service_local: string | null
      siret: string | null
      siren: string | null
      code_insee_commune: string | null
      code_postal: string | null
      nom_commune: string | null
      pays: string | null
      continent: string | null
      longitude: Prisma.Decimal | null
      latitude: Prisma.Decimal | null
      adresse: string | null
      adresse_courriel: string | null
      telephone: string | null
      telecopie: string | null
      site_internet: string | null
      copyright: string | null
      ancien_code_pivot: string | null
      reseau_social: string | null
      texte_reference: string | null
      partenaire: string | null
      itm_identifiant: string | null
      sigle: string | null
      date_modification: Date | null
      date_creation: Date | null
      partenaire_date_modification: Date | null
      mission: string | null
      formulaire_contact: string | null
      version_type: string | null
      version_etat_modification: string | null
      version_source: string | null
      type_organisme: string | null
      type_repertoire: string | null
      plage_ouverture: Prisma.JsonValue | null
      hierarchie: Prisma.JsonValue | null
      categorie: string | null
      sve: string | null
      telephone_accessible: string | null
      application_mobile: string | null
      statut_de_diffusion: string | null
      information_complementaire: string | null
      commentaire_plage_ouverture: string | null
      annuaire: string | null
      tchat: string | null
      createdAt: Date | null
      updatedAt: Date | null
      is_selected: boolean
      is_sended: boolean
    }, ExtArgs["result"]["collectivites_test"]>
    composites: {}
  }


  type collectivites_testGetPayload<S extends boolean | null | undefined | collectivites_testDefaultArgs> = $Result.GetResult<Prisma.$collectivites_testPayload, S>

  type collectivites_testCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<collectivites_testFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Collectivites_testCountAggregateInputType | true
    }

  export interface collectivites_testDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['collectivites_test'], meta: { name: 'collectivites_test' } }
    /**
     * Find zero or one Collectivites_test that matches the filter.
     * @param {collectivites_testFindUniqueArgs} args - Arguments to find a Collectivites_test
     * @example
     * // Get one Collectivites_test
     * const collectivites_test = await prisma.collectivites_test.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends collectivites_testFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, collectivites_testFindUniqueArgs<ExtArgs>>
    ): Prisma__collectivites_testClient<$Result.GetResult<Prisma.$collectivites_testPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Collectivites_test that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {collectivites_testFindUniqueOrThrowArgs} args - Arguments to find a Collectivites_test
     * @example
     * // Get one Collectivites_test
     * const collectivites_test = await prisma.collectivites_test.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends collectivites_testFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, collectivites_testFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__collectivites_testClient<$Result.GetResult<Prisma.$collectivites_testPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Collectivites_test that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectivites_testFindFirstArgs} args - Arguments to find a Collectivites_test
     * @example
     * // Get one Collectivites_test
     * const collectivites_test = await prisma.collectivites_test.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends collectivites_testFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, collectivites_testFindFirstArgs<ExtArgs>>
    ): Prisma__collectivites_testClient<$Result.GetResult<Prisma.$collectivites_testPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Collectivites_test that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectivites_testFindFirstOrThrowArgs} args - Arguments to find a Collectivites_test
     * @example
     * // Get one Collectivites_test
     * const collectivites_test = await prisma.collectivites_test.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends collectivites_testFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, collectivites_testFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__collectivites_testClient<$Result.GetResult<Prisma.$collectivites_testPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Collectivites_tests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectivites_testFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Collectivites_tests
     * const collectivites_tests = await prisma.collectivites_test.findMany()
     * 
     * // Get first 10 Collectivites_tests
     * const collectivites_tests = await prisma.collectivites_test.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const collectivites_testWithIdOnly = await prisma.collectivites_test.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends collectivites_testFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, collectivites_testFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$collectivites_testPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Collectivites_test.
     * @param {collectivites_testCreateArgs} args - Arguments to create a Collectivites_test.
     * @example
     * // Create one Collectivites_test
     * const Collectivites_test = await prisma.collectivites_test.create({
     *   data: {
     *     // ... data to create a Collectivites_test
     *   }
     * })
     * 
    **/
    create<T extends collectivites_testCreateArgs<ExtArgs>>(
      args: SelectSubset<T, collectivites_testCreateArgs<ExtArgs>>
    ): Prisma__collectivites_testClient<$Result.GetResult<Prisma.$collectivites_testPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Collectivites_tests.
     *     @param {collectivites_testCreateManyArgs} args - Arguments to create many Collectivites_tests.
     *     @example
     *     // Create many Collectivites_tests
     *     const collectivites_test = await prisma.collectivites_test.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends collectivites_testCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, collectivites_testCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Collectivites_test.
     * @param {collectivites_testDeleteArgs} args - Arguments to delete one Collectivites_test.
     * @example
     * // Delete one Collectivites_test
     * const Collectivites_test = await prisma.collectivites_test.delete({
     *   where: {
     *     // ... filter to delete one Collectivites_test
     *   }
     * })
     * 
    **/
    delete<T extends collectivites_testDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, collectivites_testDeleteArgs<ExtArgs>>
    ): Prisma__collectivites_testClient<$Result.GetResult<Prisma.$collectivites_testPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Collectivites_test.
     * @param {collectivites_testUpdateArgs} args - Arguments to update one Collectivites_test.
     * @example
     * // Update one Collectivites_test
     * const collectivites_test = await prisma.collectivites_test.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends collectivites_testUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, collectivites_testUpdateArgs<ExtArgs>>
    ): Prisma__collectivites_testClient<$Result.GetResult<Prisma.$collectivites_testPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Collectivites_tests.
     * @param {collectivites_testDeleteManyArgs} args - Arguments to filter Collectivites_tests to delete.
     * @example
     * // Delete a few Collectivites_tests
     * const { count } = await prisma.collectivites_test.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends collectivites_testDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, collectivites_testDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Collectivites_tests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectivites_testUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Collectivites_tests
     * const collectivites_test = await prisma.collectivites_test.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends collectivites_testUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, collectivites_testUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Collectivites_test.
     * @param {collectivites_testUpsertArgs} args - Arguments to update or create a Collectivites_test.
     * @example
     * // Update or create a Collectivites_test
     * const collectivites_test = await prisma.collectivites_test.upsert({
     *   create: {
     *     // ... data to create a Collectivites_test
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Collectivites_test we want to update
     *   }
     * })
    **/
    upsert<T extends collectivites_testUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, collectivites_testUpsertArgs<ExtArgs>>
    ): Prisma__collectivites_testClient<$Result.GetResult<Prisma.$collectivites_testPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Collectivites_tests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectivites_testCountArgs} args - Arguments to filter Collectivites_tests to count.
     * @example
     * // Count the number of Collectivites_tests
     * const count = await prisma.collectivites_test.count({
     *   where: {
     *     // ... the filter for the Collectivites_tests we want to count
     *   }
     * })
    **/
    count<T extends collectivites_testCountArgs>(
      args?: Subset<T, collectivites_testCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Collectivites_testCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Collectivites_test.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Collectivites_testAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Collectivites_testAggregateArgs>(args: Subset<T, Collectivites_testAggregateArgs>): Prisma.PrismaPromise<GetCollectivites_testAggregateType<T>>

    /**
     * Group by Collectivites_test.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectivites_testGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends collectivites_testGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: collectivites_testGroupByArgs['orderBy'] }
        : { orderBy?: collectivites_testGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, collectivites_testGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCollectivites_testGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the collectivites_test model
   */
  readonly fields: collectivites_testFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for collectivites_test.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__collectivites_testClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the collectivites_test model
   */ 
  interface collectivites_testFieldRefs {
    readonly id: FieldRef<"collectivites_test", 'Int'>
    readonly nom: FieldRef<"collectivites_test", 'String'>
    readonly type_service_local: FieldRef<"collectivites_test", 'String'>
    readonly siret: FieldRef<"collectivites_test", 'String'>
    readonly siren: FieldRef<"collectivites_test", 'String'>
    readonly code_insee_commune: FieldRef<"collectivites_test", 'String'>
    readonly code_postal: FieldRef<"collectivites_test", 'String'>
    readonly nom_commune: FieldRef<"collectivites_test", 'String'>
    readonly pays: FieldRef<"collectivites_test", 'String'>
    readonly continent: FieldRef<"collectivites_test", 'String'>
    readonly longitude: FieldRef<"collectivites_test", 'Decimal'>
    readonly latitude: FieldRef<"collectivites_test", 'Decimal'>
    readonly adresse: FieldRef<"collectivites_test", 'String'>
    readonly adresse_courriel: FieldRef<"collectivites_test", 'String'>
    readonly telephone: FieldRef<"collectivites_test", 'String'>
    readonly telecopie: FieldRef<"collectivites_test", 'String'>
    readonly site_internet: FieldRef<"collectivites_test", 'String'>
    readonly copyright: FieldRef<"collectivites_test", 'String'>
    readonly ancien_code_pivot: FieldRef<"collectivites_test", 'String'>
    readonly reseau_social: FieldRef<"collectivites_test", 'String'>
    readonly texte_reference: FieldRef<"collectivites_test", 'String'>
    readonly partenaire: FieldRef<"collectivites_test", 'String'>
    readonly itm_identifiant: FieldRef<"collectivites_test", 'String'>
    readonly sigle: FieldRef<"collectivites_test", 'String'>
    readonly date_modification: FieldRef<"collectivites_test", 'DateTime'>
    readonly date_creation: FieldRef<"collectivites_test", 'DateTime'>
    readonly partenaire_date_modification: FieldRef<"collectivites_test", 'DateTime'>
    readonly mission: FieldRef<"collectivites_test", 'String'>
    readonly formulaire_contact: FieldRef<"collectivites_test", 'String'>
    readonly version_type: FieldRef<"collectivites_test", 'String'>
    readonly version_etat_modification: FieldRef<"collectivites_test", 'String'>
    readonly version_source: FieldRef<"collectivites_test", 'String'>
    readonly type_organisme: FieldRef<"collectivites_test", 'String'>
    readonly type_repertoire: FieldRef<"collectivites_test", 'String'>
    readonly plage_ouverture: FieldRef<"collectivites_test", 'Json'>
    readonly hierarchie: FieldRef<"collectivites_test", 'Json'>
    readonly categorie: FieldRef<"collectivites_test", 'String'>
    readonly sve: FieldRef<"collectivites_test", 'String'>
    readonly telephone_accessible: FieldRef<"collectivites_test", 'String'>
    readonly application_mobile: FieldRef<"collectivites_test", 'String'>
    readonly statut_de_diffusion: FieldRef<"collectivites_test", 'String'>
    readonly information_complementaire: FieldRef<"collectivites_test", 'String'>
    readonly commentaire_plage_ouverture: FieldRef<"collectivites_test", 'String'>
    readonly annuaire: FieldRef<"collectivites_test", 'String'>
    readonly tchat: FieldRef<"collectivites_test", 'String'>
    readonly createdAt: FieldRef<"collectivites_test", 'DateTime'>
    readonly updatedAt: FieldRef<"collectivites_test", 'DateTime'>
    readonly is_selected: FieldRef<"collectivites_test", 'Boolean'>
    readonly is_sended: FieldRef<"collectivites_test", 'Boolean'>
  }
    

  // Custom InputTypes

  /**
   * collectivites_test findUnique
   */
  export type collectivites_testFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites_test
     */
    select?: collectivites_testSelect<ExtArgs> | null
    /**
     * Filter, which collectivites_test to fetch.
     */
    where: collectivites_testWhereUniqueInput
  }


  /**
   * collectivites_test findUniqueOrThrow
   */
  export type collectivites_testFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites_test
     */
    select?: collectivites_testSelect<ExtArgs> | null
    /**
     * Filter, which collectivites_test to fetch.
     */
    where: collectivites_testWhereUniqueInput
  }


  /**
   * collectivites_test findFirst
   */
  export type collectivites_testFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites_test
     */
    select?: collectivites_testSelect<ExtArgs> | null
    /**
     * Filter, which collectivites_test to fetch.
     */
    where?: collectivites_testWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collectivites_tests to fetch.
     */
    orderBy?: collectivites_testOrderByWithRelationInput | collectivites_testOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for collectivites_tests.
     */
    cursor?: collectivites_testWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collectivites_tests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collectivites_tests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of collectivites_tests.
     */
    distinct?: Collectivites_testScalarFieldEnum | Collectivites_testScalarFieldEnum[]
  }


  /**
   * collectivites_test findFirstOrThrow
   */
  export type collectivites_testFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites_test
     */
    select?: collectivites_testSelect<ExtArgs> | null
    /**
     * Filter, which collectivites_test to fetch.
     */
    where?: collectivites_testWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collectivites_tests to fetch.
     */
    orderBy?: collectivites_testOrderByWithRelationInput | collectivites_testOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for collectivites_tests.
     */
    cursor?: collectivites_testWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collectivites_tests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collectivites_tests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of collectivites_tests.
     */
    distinct?: Collectivites_testScalarFieldEnum | Collectivites_testScalarFieldEnum[]
  }


  /**
   * collectivites_test findMany
   */
  export type collectivites_testFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites_test
     */
    select?: collectivites_testSelect<ExtArgs> | null
    /**
     * Filter, which collectivites_tests to fetch.
     */
    where?: collectivites_testWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collectivites_tests to fetch.
     */
    orderBy?: collectivites_testOrderByWithRelationInput | collectivites_testOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing collectivites_tests.
     */
    cursor?: collectivites_testWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collectivites_tests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collectivites_tests.
     */
    skip?: number
    distinct?: Collectivites_testScalarFieldEnum | Collectivites_testScalarFieldEnum[]
  }


  /**
   * collectivites_test create
   */
  export type collectivites_testCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites_test
     */
    select?: collectivites_testSelect<ExtArgs> | null
    /**
     * The data needed to create a collectivites_test.
     */
    data?: XOR<collectivites_testCreateInput, collectivites_testUncheckedCreateInput>
  }


  /**
   * collectivites_test createMany
   */
  export type collectivites_testCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many collectivites_tests.
     */
    data: collectivites_testCreateManyInput | collectivites_testCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * collectivites_test update
   */
  export type collectivites_testUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites_test
     */
    select?: collectivites_testSelect<ExtArgs> | null
    /**
     * The data needed to update a collectivites_test.
     */
    data: XOR<collectivites_testUpdateInput, collectivites_testUncheckedUpdateInput>
    /**
     * Choose, which collectivites_test to update.
     */
    where: collectivites_testWhereUniqueInput
  }


  /**
   * collectivites_test updateMany
   */
  export type collectivites_testUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update collectivites_tests.
     */
    data: XOR<collectivites_testUpdateManyMutationInput, collectivites_testUncheckedUpdateManyInput>
    /**
     * Filter which collectivites_tests to update
     */
    where?: collectivites_testWhereInput
  }


  /**
   * collectivites_test upsert
   */
  export type collectivites_testUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites_test
     */
    select?: collectivites_testSelect<ExtArgs> | null
    /**
     * The filter to search for the collectivites_test to update in case it exists.
     */
    where: collectivites_testWhereUniqueInput
    /**
     * In case the collectivites_test found by the `where` argument doesn't exist, create a new collectivites_test with this data.
     */
    create: XOR<collectivites_testCreateInput, collectivites_testUncheckedCreateInput>
    /**
     * In case the collectivites_test was found with the provided `where` argument, update it with this data.
     */
    update: XOR<collectivites_testUpdateInput, collectivites_testUncheckedUpdateInput>
  }


  /**
   * collectivites_test delete
   */
  export type collectivites_testDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites_test
     */
    select?: collectivites_testSelect<ExtArgs> | null
    /**
     * Filter which collectivites_test to delete.
     */
    where: collectivites_testWhereUniqueInput
  }


  /**
   * collectivites_test deleteMany
   */
  export type collectivites_testDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which collectivites_tests to delete
     */
    where?: collectivites_testWhereInput
  }


  /**
   * collectivites_test without action
   */
  export type collectivites_testDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites_test
     */
    select?: collectivites_testSelect<ExtArgs> | null
  }



  /**
   * Model departement
   */

  export type AggregateDepartement = {
    _count: DepartementCountAggregateOutputType | null
    _avg: DepartementAvgAggregateOutputType | null
    _sum: DepartementSumAggregateOutputType | null
    _min: DepartementMinAggregateOutputType | null
    _max: DepartementMaxAggregateOutputType | null
  }

  export type DepartementAvgAggregateOutputType = {
    departement_id: number | null
  }

  export type DepartementSumAggregateOutputType = {
    departement_id: number | null
  }

  export type DepartementMinAggregateOutputType = {
    departement_id: number | null
    departement_code: string | null
    departement_nom: string | null
    departement_nom_uppercase: string | null
    departement_slug: string | null
    departement_nom_soundex: string | null
  }

  export type DepartementMaxAggregateOutputType = {
    departement_id: number | null
    departement_code: string | null
    departement_nom: string | null
    departement_nom_uppercase: string | null
    departement_slug: string | null
    departement_nom_soundex: string | null
  }

  export type DepartementCountAggregateOutputType = {
    departement_id: number
    departement_code: number
    departement_nom: number
    departement_nom_uppercase: number
    departement_slug: number
    departement_nom_soundex: number
    _all: number
  }


  export type DepartementAvgAggregateInputType = {
    departement_id?: true
  }

  export type DepartementSumAggregateInputType = {
    departement_id?: true
  }

  export type DepartementMinAggregateInputType = {
    departement_id?: true
    departement_code?: true
    departement_nom?: true
    departement_nom_uppercase?: true
    departement_slug?: true
    departement_nom_soundex?: true
  }

  export type DepartementMaxAggregateInputType = {
    departement_id?: true
    departement_code?: true
    departement_nom?: true
    departement_nom_uppercase?: true
    departement_slug?: true
    departement_nom_soundex?: true
  }

  export type DepartementCountAggregateInputType = {
    departement_id?: true
    departement_code?: true
    departement_nom?: true
    departement_nom_uppercase?: true
    departement_slug?: true
    departement_nom_soundex?: true
    _all?: true
  }

  export type DepartementAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which departement to aggregate.
     */
    where?: departementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of departements to fetch.
     */
    orderBy?: departementOrderByWithRelationInput | departementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: departementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` departements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` departements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned departements
    **/
    _count?: true | DepartementCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DepartementAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DepartementSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DepartementMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DepartementMaxAggregateInputType
  }

  export type GetDepartementAggregateType<T extends DepartementAggregateArgs> = {
        [P in keyof T & keyof AggregateDepartement]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDepartement[P]>
      : GetScalarType<T[P], AggregateDepartement[P]>
  }




  export type departementGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: departementWhereInput
    orderBy?: departementOrderByWithAggregationInput | departementOrderByWithAggregationInput[]
    by: DepartementScalarFieldEnum[] | DepartementScalarFieldEnum
    having?: departementScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DepartementCountAggregateInputType | true
    _avg?: DepartementAvgAggregateInputType
    _sum?: DepartementSumAggregateInputType
    _min?: DepartementMinAggregateInputType
    _max?: DepartementMaxAggregateInputType
  }

  export type DepartementGroupByOutputType = {
    departement_id: number
    departement_code: string | null
    departement_nom: string | null
    departement_nom_uppercase: string | null
    departement_slug: string | null
    departement_nom_soundex: string | null
    _count: DepartementCountAggregateOutputType | null
    _avg: DepartementAvgAggregateOutputType | null
    _sum: DepartementSumAggregateOutputType | null
    _min: DepartementMinAggregateOutputType | null
    _max: DepartementMaxAggregateOutputType | null
  }

  type GetDepartementGroupByPayload<T extends departementGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DepartementGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DepartementGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DepartementGroupByOutputType[P]>
            : GetScalarType<T[P], DepartementGroupByOutputType[P]>
        }
      >
    >


  export type departementSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    departement_id?: boolean
    departement_code?: boolean
    departement_nom?: boolean
    departement_nom_uppercase?: boolean
    departement_slug?: boolean
    departement_nom_soundex?: boolean
    collectivites_rel?: boolean | departement$collectivites_relArgs<ExtArgs>
    _count?: boolean | DepartementCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["departement"]>

  export type departementSelectScalar = {
    departement_id?: boolean
    departement_code?: boolean
    departement_nom?: boolean
    departement_nom_uppercase?: boolean
    departement_slug?: boolean
    departement_nom_soundex?: boolean
  }

  export type departementInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collectivites_rel?: boolean | departement$collectivites_relArgs<ExtArgs>
    _count?: boolean | DepartementCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $departementPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "departement"
    objects: {
      collectivites_rel: Prisma.$collectivitesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      departement_id: number
      departement_code: string | null
      departement_nom: string | null
      departement_nom_uppercase: string | null
      departement_slug: string | null
      departement_nom_soundex: string | null
    }, ExtArgs["result"]["departement"]>
    composites: {}
  }


  type departementGetPayload<S extends boolean | null | undefined | departementDefaultArgs> = $Result.GetResult<Prisma.$departementPayload, S>

  type departementCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<departementFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: DepartementCountAggregateInputType | true
    }

  export interface departementDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['departement'], meta: { name: 'departement' } }
    /**
     * Find zero or one Departement that matches the filter.
     * @param {departementFindUniqueArgs} args - Arguments to find a Departement
     * @example
     * // Get one Departement
     * const departement = await prisma.departement.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends departementFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, departementFindUniqueArgs<ExtArgs>>
    ): Prisma__departementClient<$Result.GetResult<Prisma.$departementPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Departement that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {departementFindUniqueOrThrowArgs} args - Arguments to find a Departement
     * @example
     * // Get one Departement
     * const departement = await prisma.departement.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends departementFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, departementFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__departementClient<$Result.GetResult<Prisma.$departementPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Departement that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departementFindFirstArgs} args - Arguments to find a Departement
     * @example
     * // Get one Departement
     * const departement = await prisma.departement.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends departementFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, departementFindFirstArgs<ExtArgs>>
    ): Prisma__departementClient<$Result.GetResult<Prisma.$departementPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Departement that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departementFindFirstOrThrowArgs} args - Arguments to find a Departement
     * @example
     * // Get one Departement
     * const departement = await prisma.departement.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends departementFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, departementFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__departementClient<$Result.GetResult<Prisma.$departementPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Departements that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departementFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Departements
     * const departements = await prisma.departement.findMany()
     * 
     * // Get first 10 Departements
     * const departements = await prisma.departement.findMany({ take: 10 })
     * 
     * // Only select the `departement_id`
     * const departementWithDepartement_idOnly = await prisma.departement.findMany({ select: { departement_id: true } })
     * 
    **/
    findMany<T extends departementFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, departementFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$departementPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Departement.
     * @param {departementCreateArgs} args - Arguments to create a Departement.
     * @example
     * // Create one Departement
     * const Departement = await prisma.departement.create({
     *   data: {
     *     // ... data to create a Departement
     *   }
     * })
     * 
    **/
    create<T extends departementCreateArgs<ExtArgs>>(
      args: SelectSubset<T, departementCreateArgs<ExtArgs>>
    ): Prisma__departementClient<$Result.GetResult<Prisma.$departementPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Departements.
     *     @param {departementCreateManyArgs} args - Arguments to create many Departements.
     *     @example
     *     // Create many Departements
     *     const departement = await prisma.departement.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends departementCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, departementCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Departement.
     * @param {departementDeleteArgs} args - Arguments to delete one Departement.
     * @example
     * // Delete one Departement
     * const Departement = await prisma.departement.delete({
     *   where: {
     *     // ... filter to delete one Departement
     *   }
     * })
     * 
    **/
    delete<T extends departementDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, departementDeleteArgs<ExtArgs>>
    ): Prisma__departementClient<$Result.GetResult<Prisma.$departementPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Departement.
     * @param {departementUpdateArgs} args - Arguments to update one Departement.
     * @example
     * // Update one Departement
     * const departement = await prisma.departement.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends departementUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, departementUpdateArgs<ExtArgs>>
    ): Prisma__departementClient<$Result.GetResult<Prisma.$departementPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Departements.
     * @param {departementDeleteManyArgs} args - Arguments to filter Departements to delete.
     * @example
     * // Delete a few Departements
     * const { count } = await prisma.departement.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends departementDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, departementDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Departements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departementUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Departements
     * const departement = await prisma.departement.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends departementUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, departementUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Departement.
     * @param {departementUpsertArgs} args - Arguments to update or create a Departement.
     * @example
     * // Update or create a Departement
     * const departement = await prisma.departement.upsert({
     *   create: {
     *     // ... data to create a Departement
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Departement we want to update
     *   }
     * })
    **/
    upsert<T extends departementUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, departementUpsertArgs<ExtArgs>>
    ): Prisma__departementClient<$Result.GetResult<Prisma.$departementPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Departements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departementCountArgs} args - Arguments to filter Departements to count.
     * @example
     * // Count the number of Departements
     * const count = await prisma.departement.count({
     *   where: {
     *     // ... the filter for the Departements we want to count
     *   }
     * })
    **/
    count<T extends departementCountArgs>(
      args?: Subset<T, departementCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DepartementCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Departement.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartementAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DepartementAggregateArgs>(args: Subset<T, DepartementAggregateArgs>): Prisma.PrismaPromise<GetDepartementAggregateType<T>>

    /**
     * Group by Departement.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departementGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends departementGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: departementGroupByArgs['orderBy'] }
        : { orderBy?: departementGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, departementGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDepartementGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the departement model
   */
  readonly fields: departementFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for departement.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__departementClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    collectivites_rel<T extends departement$collectivites_relArgs<ExtArgs> = {}>(args?: Subset<T, departement$collectivites_relArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$collectivitesPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the departement model
   */ 
  interface departementFieldRefs {
    readonly departement_id: FieldRef<"departement", 'Int'>
    readonly departement_code: FieldRef<"departement", 'String'>
    readonly departement_nom: FieldRef<"departement", 'String'>
    readonly departement_nom_uppercase: FieldRef<"departement", 'String'>
    readonly departement_slug: FieldRef<"departement", 'String'>
    readonly departement_nom_soundex: FieldRef<"departement", 'String'>
  }
    

  // Custom InputTypes

  /**
   * departement findUnique
   */
  export type departementFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departement
     */
    select?: departementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: departementInclude<ExtArgs> | null
    /**
     * Filter, which departement to fetch.
     */
    where: departementWhereUniqueInput
  }


  /**
   * departement findUniqueOrThrow
   */
  export type departementFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departement
     */
    select?: departementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: departementInclude<ExtArgs> | null
    /**
     * Filter, which departement to fetch.
     */
    where: departementWhereUniqueInput
  }


  /**
   * departement findFirst
   */
  export type departementFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departement
     */
    select?: departementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: departementInclude<ExtArgs> | null
    /**
     * Filter, which departement to fetch.
     */
    where?: departementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of departements to fetch.
     */
    orderBy?: departementOrderByWithRelationInput | departementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for departements.
     */
    cursor?: departementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` departements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` departements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of departements.
     */
    distinct?: DepartementScalarFieldEnum | DepartementScalarFieldEnum[]
  }


  /**
   * departement findFirstOrThrow
   */
  export type departementFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departement
     */
    select?: departementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: departementInclude<ExtArgs> | null
    /**
     * Filter, which departement to fetch.
     */
    where?: departementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of departements to fetch.
     */
    orderBy?: departementOrderByWithRelationInput | departementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for departements.
     */
    cursor?: departementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` departements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` departements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of departements.
     */
    distinct?: DepartementScalarFieldEnum | DepartementScalarFieldEnum[]
  }


  /**
   * departement findMany
   */
  export type departementFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departement
     */
    select?: departementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: departementInclude<ExtArgs> | null
    /**
     * Filter, which departements to fetch.
     */
    where?: departementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of departements to fetch.
     */
    orderBy?: departementOrderByWithRelationInput | departementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing departements.
     */
    cursor?: departementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` departements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` departements.
     */
    skip?: number
    distinct?: DepartementScalarFieldEnum | DepartementScalarFieldEnum[]
  }


  /**
   * departement create
   */
  export type departementCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departement
     */
    select?: departementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: departementInclude<ExtArgs> | null
    /**
     * The data needed to create a departement.
     */
    data?: XOR<departementCreateInput, departementUncheckedCreateInput>
  }


  /**
   * departement createMany
   */
  export type departementCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many departements.
     */
    data: departementCreateManyInput | departementCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * departement update
   */
  export type departementUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departement
     */
    select?: departementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: departementInclude<ExtArgs> | null
    /**
     * The data needed to update a departement.
     */
    data: XOR<departementUpdateInput, departementUncheckedUpdateInput>
    /**
     * Choose, which departement to update.
     */
    where: departementWhereUniqueInput
  }


  /**
   * departement updateMany
   */
  export type departementUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update departements.
     */
    data: XOR<departementUpdateManyMutationInput, departementUncheckedUpdateManyInput>
    /**
     * Filter which departements to update
     */
    where?: departementWhereInput
  }


  /**
   * departement upsert
   */
  export type departementUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departement
     */
    select?: departementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: departementInclude<ExtArgs> | null
    /**
     * The filter to search for the departement to update in case it exists.
     */
    where: departementWhereUniqueInput
    /**
     * In case the departement found by the `where` argument doesn't exist, create a new departement with this data.
     */
    create: XOR<departementCreateInput, departementUncheckedCreateInput>
    /**
     * In case the departement was found with the provided `where` argument, update it with this data.
     */
    update: XOR<departementUpdateInput, departementUncheckedUpdateInput>
  }


  /**
   * departement delete
   */
  export type departementDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departement
     */
    select?: departementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: departementInclude<ExtArgs> | null
    /**
     * Filter which departement to delete.
     */
    where: departementWhereUniqueInput
  }


  /**
   * departement deleteMany
   */
  export type departementDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which departements to delete
     */
    where?: departementWhereInput
  }


  /**
   * departement.collectivites_rel
   */
  export type departement$collectivites_relArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collectivites
     */
    select?: collectivitesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectivitesInclude<ExtArgs> | null
    where?: collectivitesWhereInput
    orderBy?: collectivitesOrderByWithRelationInput | collectivitesOrderByWithRelationInput[]
    cursor?: collectivitesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CollectivitesScalarFieldEnum | CollectivitesScalarFieldEnum[]
  }


  /**
   * departement without action
   */
  export type departementDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departement
     */
    select?: departementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: departementInclude<ExtArgs> | null
  }



  /**
   * Model service
   */

  export type AggregateService = {
    _count: ServiceCountAggregateOutputType | null
    _avg: ServiceAvgAggregateOutputType | null
    _sum: ServiceSumAggregateOutputType | null
    _min: ServiceMinAggregateOutputType | null
    _max: ServiceMaxAggregateOutputType | null
  }

  export type ServiceAvgAggregateOutputType = {
    id: number | null
    longitude: Decimal | null
    latitude: Decimal | null
  }

  export type ServiceSumAggregateOutputType = {
    id: number | null
    longitude: Decimal | null
    latitude: Decimal | null
  }

  export type ServiceMinAggregateOutputType = {
    id: number | null
    nom: string | null
    type_service_local: string | null
    siret: string | null
    siren: string | null
    code_insee_commune: string | null
    code_postal: string | null
    nom_commune: string | null
    pays: string | null
    continent: string | null
    longitude: Decimal | null
    latitude: Decimal | null
    adresse: string | null
    adresse_courriel: string | null
    telephone: string | null
    telecopie: string | null
    site_internet: string | null
    copyright: string | null
    ancien_code_pivot: string | null
    reseau_social: string | null
    texte_reference: string | null
    partenaire: string | null
    itm_identifiant: string | null
    sigle: string | null
    date_modification: Date | null
    date_creation: Date | null
    partenaire_date_modification: Date | null
    mission: string | null
    formulaire_contact: string | null
    version_type: string | null
    version_etat_modification: string | null
    version_source: string | null
    type_organisme: string | null
    type_repertoire: string | null
    categorie: string | null
    sve: string | null
    telephone_accessible: string | null
    application_mobile: string | null
    statut_de_diffusion: string | null
    information_complementaire: string | null
    commentaire_plage_ouverture: string | null
    annuaire: string | null
    tchat: string | null
  }

  export type ServiceMaxAggregateOutputType = {
    id: number | null
    nom: string | null
    type_service_local: string | null
    siret: string | null
    siren: string | null
    code_insee_commune: string | null
    code_postal: string | null
    nom_commune: string | null
    pays: string | null
    continent: string | null
    longitude: Decimal | null
    latitude: Decimal | null
    adresse: string | null
    adresse_courriel: string | null
    telephone: string | null
    telecopie: string | null
    site_internet: string | null
    copyright: string | null
    ancien_code_pivot: string | null
    reseau_social: string | null
    texte_reference: string | null
    partenaire: string | null
    itm_identifiant: string | null
    sigle: string | null
    date_modification: Date | null
    date_creation: Date | null
    partenaire_date_modification: Date | null
    mission: string | null
    formulaire_contact: string | null
    version_type: string | null
    version_etat_modification: string | null
    version_source: string | null
    type_organisme: string | null
    type_repertoire: string | null
    categorie: string | null
    sve: string | null
    telephone_accessible: string | null
    application_mobile: string | null
    statut_de_diffusion: string | null
    information_complementaire: string | null
    commentaire_plage_ouverture: string | null
    annuaire: string | null
    tchat: string | null
  }

  export type ServiceCountAggregateOutputType = {
    id: number
    nom: number
    type_service_local: number
    siret: number
    siren: number
    code_insee_commune: number
    code_postal: number
    nom_commune: number
    pays: number
    continent: number
    longitude: number
    latitude: number
    adresse: number
    adresse_courriel: number
    telephone: number
    telecopie: number
    site_internet: number
    copyright: number
    ancien_code_pivot: number
    reseau_social: number
    texte_reference: number
    partenaire: number
    itm_identifiant: number
    sigle: number
    date_modification: number
    date_creation: number
    partenaire_date_modification: number
    mission: number
    formulaire_contact: number
    version_type: number
    version_etat_modification: number
    version_source: number
    type_organisme: number
    type_repertoire: number
    plage_ouverture: number
    hierarchie: number
    categorie: number
    sve: number
    telephone_accessible: number
    application_mobile: number
    statut_de_diffusion: number
    information_complementaire: number
    commentaire_plage_ouverture: number
    annuaire: number
    tchat: number
    _all: number
  }


  export type ServiceAvgAggregateInputType = {
    id?: true
    longitude?: true
    latitude?: true
  }

  export type ServiceSumAggregateInputType = {
    id?: true
    longitude?: true
    latitude?: true
  }

  export type ServiceMinAggregateInputType = {
    id?: true
    nom?: true
    type_service_local?: true
    siret?: true
    siren?: true
    code_insee_commune?: true
    code_postal?: true
    nom_commune?: true
    pays?: true
    continent?: true
    longitude?: true
    latitude?: true
    adresse?: true
    adresse_courriel?: true
    telephone?: true
    telecopie?: true
    site_internet?: true
    copyright?: true
    ancien_code_pivot?: true
    reseau_social?: true
    texte_reference?: true
    partenaire?: true
    itm_identifiant?: true
    sigle?: true
    date_modification?: true
    date_creation?: true
    partenaire_date_modification?: true
    mission?: true
    formulaire_contact?: true
    version_type?: true
    version_etat_modification?: true
    version_source?: true
    type_organisme?: true
    type_repertoire?: true
    categorie?: true
    sve?: true
    telephone_accessible?: true
    application_mobile?: true
    statut_de_diffusion?: true
    information_complementaire?: true
    commentaire_plage_ouverture?: true
    annuaire?: true
    tchat?: true
  }

  export type ServiceMaxAggregateInputType = {
    id?: true
    nom?: true
    type_service_local?: true
    siret?: true
    siren?: true
    code_insee_commune?: true
    code_postal?: true
    nom_commune?: true
    pays?: true
    continent?: true
    longitude?: true
    latitude?: true
    adresse?: true
    adresse_courriel?: true
    telephone?: true
    telecopie?: true
    site_internet?: true
    copyright?: true
    ancien_code_pivot?: true
    reseau_social?: true
    texte_reference?: true
    partenaire?: true
    itm_identifiant?: true
    sigle?: true
    date_modification?: true
    date_creation?: true
    partenaire_date_modification?: true
    mission?: true
    formulaire_contact?: true
    version_type?: true
    version_etat_modification?: true
    version_source?: true
    type_organisme?: true
    type_repertoire?: true
    categorie?: true
    sve?: true
    telephone_accessible?: true
    application_mobile?: true
    statut_de_diffusion?: true
    information_complementaire?: true
    commentaire_plage_ouverture?: true
    annuaire?: true
    tchat?: true
  }

  export type ServiceCountAggregateInputType = {
    id?: true
    nom?: true
    type_service_local?: true
    siret?: true
    siren?: true
    code_insee_commune?: true
    code_postal?: true
    nom_commune?: true
    pays?: true
    continent?: true
    longitude?: true
    latitude?: true
    adresse?: true
    adresse_courriel?: true
    telephone?: true
    telecopie?: true
    site_internet?: true
    copyright?: true
    ancien_code_pivot?: true
    reseau_social?: true
    texte_reference?: true
    partenaire?: true
    itm_identifiant?: true
    sigle?: true
    date_modification?: true
    date_creation?: true
    partenaire_date_modification?: true
    mission?: true
    formulaire_contact?: true
    version_type?: true
    version_etat_modification?: true
    version_source?: true
    type_organisme?: true
    type_repertoire?: true
    plage_ouverture?: true
    hierarchie?: true
    categorie?: true
    sve?: true
    telephone_accessible?: true
    application_mobile?: true
    statut_de_diffusion?: true
    information_complementaire?: true
    commentaire_plage_ouverture?: true
    annuaire?: true
    tchat?: true
    _all?: true
  }

  export type ServiceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which service to aggregate.
     */
    where?: serviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of services to fetch.
     */
    orderBy?: serviceOrderByWithRelationInput | serviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: serviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` services.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned services
    **/
    _count?: true | ServiceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ServiceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ServiceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ServiceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ServiceMaxAggregateInputType
  }

  export type GetServiceAggregateType<T extends ServiceAggregateArgs> = {
        [P in keyof T & keyof AggregateService]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateService[P]>
      : GetScalarType<T[P], AggregateService[P]>
  }




  export type serviceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: serviceWhereInput
    orderBy?: serviceOrderByWithAggregationInput | serviceOrderByWithAggregationInput[]
    by: ServiceScalarFieldEnum[] | ServiceScalarFieldEnum
    having?: serviceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ServiceCountAggregateInputType | true
    _avg?: ServiceAvgAggregateInputType
    _sum?: ServiceSumAggregateInputType
    _min?: ServiceMinAggregateInputType
    _max?: ServiceMaxAggregateInputType
  }

  export type ServiceGroupByOutputType = {
    id: number
    nom: string | null
    type_service_local: string | null
    siret: string | null
    siren: string | null
    code_insee_commune: string | null
    code_postal: string | null
    nom_commune: string | null
    pays: string | null
    continent: string | null
    longitude: Decimal | null
    latitude: Decimal | null
    adresse: string | null
    adresse_courriel: string | null
    telephone: string | null
    telecopie: string | null
    site_internet: string | null
    copyright: string | null
    ancien_code_pivot: string | null
    reseau_social: string | null
    texte_reference: string | null
    partenaire: string | null
    itm_identifiant: string | null
    sigle: string | null
    date_modification: Date | null
    date_creation: Date | null
    partenaire_date_modification: Date | null
    mission: string | null
    formulaire_contact: string | null
    version_type: string | null
    version_etat_modification: string | null
    version_source: string | null
    type_organisme: string | null
    type_repertoire: string | null
    plage_ouverture: JsonValue | null
    hierarchie: JsonValue | null
    categorie: string | null
    sve: string | null
    telephone_accessible: string | null
    application_mobile: string | null
    statut_de_diffusion: string | null
    information_complementaire: string | null
    commentaire_plage_ouverture: string | null
    annuaire: string | null
    tchat: string | null
    _count: ServiceCountAggregateOutputType | null
    _avg: ServiceAvgAggregateOutputType | null
    _sum: ServiceSumAggregateOutputType | null
    _min: ServiceMinAggregateOutputType | null
    _max: ServiceMaxAggregateOutputType | null
  }

  type GetServiceGroupByPayload<T extends serviceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ServiceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ServiceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ServiceGroupByOutputType[P]>
            : GetScalarType<T[P], ServiceGroupByOutputType[P]>
        }
      >
    >


  export type serviceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nom?: boolean
    type_service_local?: boolean
    siret?: boolean
    siren?: boolean
    code_insee_commune?: boolean
    code_postal?: boolean
    nom_commune?: boolean
    pays?: boolean
    continent?: boolean
    longitude?: boolean
    latitude?: boolean
    adresse?: boolean
    adresse_courriel?: boolean
    telephone?: boolean
    telecopie?: boolean
    site_internet?: boolean
    copyright?: boolean
    ancien_code_pivot?: boolean
    reseau_social?: boolean
    texte_reference?: boolean
    partenaire?: boolean
    itm_identifiant?: boolean
    sigle?: boolean
    date_modification?: boolean
    date_creation?: boolean
    partenaire_date_modification?: boolean
    mission?: boolean
    formulaire_contact?: boolean
    version_type?: boolean
    version_etat_modification?: boolean
    version_source?: boolean
    type_organisme?: boolean
    type_repertoire?: boolean
    plage_ouverture?: boolean
    hierarchie?: boolean
    categorie?: boolean
    sve?: boolean
    telephone_accessible?: boolean
    application_mobile?: boolean
    statut_de_diffusion?: boolean
    information_complementaire?: boolean
    commentaire_plage_ouverture?: boolean
    annuaire?: boolean
    tchat?: boolean
  }, ExtArgs["result"]["service"]>

  export type serviceSelectScalar = {
    id?: boolean
    nom?: boolean
    type_service_local?: boolean
    siret?: boolean
    siren?: boolean
    code_insee_commune?: boolean
    code_postal?: boolean
    nom_commune?: boolean
    pays?: boolean
    continent?: boolean
    longitude?: boolean
    latitude?: boolean
    adresse?: boolean
    adresse_courriel?: boolean
    telephone?: boolean
    telecopie?: boolean
    site_internet?: boolean
    copyright?: boolean
    ancien_code_pivot?: boolean
    reseau_social?: boolean
    texte_reference?: boolean
    partenaire?: boolean
    itm_identifiant?: boolean
    sigle?: boolean
    date_modification?: boolean
    date_creation?: boolean
    partenaire_date_modification?: boolean
    mission?: boolean
    formulaire_contact?: boolean
    version_type?: boolean
    version_etat_modification?: boolean
    version_source?: boolean
    type_organisme?: boolean
    type_repertoire?: boolean
    plage_ouverture?: boolean
    hierarchie?: boolean
    categorie?: boolean
    sve?: boolean
    telephone_accessible?: boolean
    application_mobile?: boolean
    statut_de_diffusion?: boolean
    information_complementaire?: boolean
    commentaire_plage_ouverture?: boolean
    annuaire?: boolean
    tchat?: boolean
  }


  export type $servicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "service"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nom: string | null
      type_service_local: string | null
      siret: string | null
      siren: string | null
      code_insee_commune: string | null
      code_postal: string | null
      nom_commune: string | null
      pays: string | null
      continent: string | null
      longitude: Prisma.Decimal | null
      latitude: Prisma.Decimal | null
      adresse: string | null
      adresse_courriel: string | null
      telephone: string | null
      telecopie: string | null
      site_internet: string | null
      copyright: string | null
      ancien_code_pivot: string | null
      reseau_social: string | null
      texte_reference: string | null
      partenaire: string | null
      itm_identifiant: string | null
      sigle: string | null
      date_modification: Date | null
      date_creation: Date | null
      partenaire_date_modification: Date | null
      mission: string | null
      formulaire_contact: string | null
      version_type: string | null
      version_etat_modification: string | null
      version_source: string | null
      type_organisme: string | null
      type_repertoire: string | null
      plage_ouverture: Prisma.JsonValue | null
      hierarchie: Prisma.JsonValue | null
      categorie: string | null
      sve: string | null
      telephone_accessible: string | null
      application_mobile: string | null
      statut_de_diffusion: string | null
      information_complementaire: string | null
      commentaire_plage_ouverture: string | null
      annuaire: string | null
      tchat: string | null
    }, ExtArgs["result"]["service"]>
    composites: {}
  }


  type serviceGetPayload<S extends boolean | null | undefined | serviceDefaultArgs> = $Result.GetResult<Prisma.$servicePayload, S>

  type serviceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<serviceFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: ServiceCountAggregateInputType | true
    }

  export interface serviceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['service'], meta: { name: 'service' } }
    /**
     * Find zero or one Service that matches the filter.
     * @param {serviceFindUniqueArgs} args - Arguments to find a Service
     * @example
     * // Get one Service
     * const service = await prisma.service.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends serviceFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, serviceFindUniqueArgs<ExtArgs>>
    ): Prisma__serviceClient<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Service that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {serviceFindUniqueOrThrowArgs} args - Arguments to find a Service
     * @example
     * // Get one Service
     * const service = await prisma.service.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends serviceFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, serviceFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__serviceClient<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Service that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviceFindFirstArgs} args - Arguments to find a Service
     * @example
     * // Get one Service
     * const service = await prisma.service.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends serviceFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, serviceFindFirstArgs<ExtArgs>>
    ): Prisma__serviceClient<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Service that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviceFindFirstOrThrowArgs} args - Arguments to find a Service
     * @example
     * // Get one Service
     * const service = await prisma.service.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends serviceFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, serviceFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__serviceClient<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Services that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviceFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Services
     * const services = await prisma.service.findMany()
     * 
     * // Get first 10 Services
     * const services = await prisma.service.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const serviceWithIdOnly = await prisma.service.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends serviceFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, serviceFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Service.
     * @param {serviceCreateArgs} args - Arguments to create a Service.
     * @example
     * // Create one Service
     * const Service = await prisma.service.create({
     *   data: {
     *     // ... data to create a Service
     *   }
     * })
     * 
    **/
    create<T extends serviceCreateArgs<ExtArgs>>(
      args: SelectSubset<T, serviceCreateArgs<ExtArgs>>
    ): Prisma__serviceClient<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Services.
     *     @param {serviceCreateManyArgs} args - Arguments to create many Services.
     *     @example
     *     // Create many Services
     *     const service = await prisma.service.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends serviceCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, serviceCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Service.
     * @param {serviceDeleteArgs} args - Arguments to delete one Service.
     * @example
     * // Delete one Service
     * const Service = await prisma.service.delete({
     *   where: {
     *     // ... filter to delete one Service
     *   }
     * })
     * 
    **/
    delete<T extends serviceDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, serviceDeleteArgs<ExtArgs>>
    ): Prisma__serviceClient<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Service.
     * @param {serviceUpdateArgs} args - Arguments to update one Service.
     * @example
     * // Update one Service
     * const service = await prisma.service.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends serviceUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, serviceUpdateArgs<ExtArgs>>
    ): Prisma__serviceClient<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Services.
     * @param {serviceDeleteManyArgs} args - Arguments to filter Services to delete.
     * @example
     * // Delete a few Services
     * const { count } = await prisma.service.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends serviceDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, serviceDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Services.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Services
     * const service = await prisma.service.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends serviceUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, serviceUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Service.
     * @param {serviceUpsertArgs} args - Arguments to update or create a Service.
     * @example
     * // Update or create a Service
     * const service = await prisma.service.upsert({
     *   create: {
     *     // ... data to create a Service
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Service we want to update
     *   }
     * })
    **/
    upsert<T extends serviceUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, serviceUpsertArgs<ExtArgs>>
    ): Prisma__serviceClient<$Result.GetResult<Prisma.$servicePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Services.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviceCountArgs} args - Arguments to filter Services to count.
     * @example
     * // Count the number of Services
     * const count = await prisma.service.count({
     *   where: {
     *     // ... the filter for the Services we want to count
     *   }
     * })
    **/
    count<T extends serviceCountArgs>(
      args?: Subset<T, serviceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ServiceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Service.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ServiceAggregateArgs>(args: Subset<T, ServiceAggregateArgs>): Prisma.PrismaPromise<GetServiceAggregateType<T>>

    /**
     * Group by Service.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends serviceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: serviceGroupByArgs['orderBy'] }
        : { orderBy?: serviceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, serviceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServiceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the service model
   */
  readonly fields: serviceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for service.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__serviceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the service model
   */ 
  interface serviceFieldRefs {
    readonly id: FieldRef<"service", 'Int'>
    readonly nom: FieldRef<"service", 'String'>
    readonly type_service_local: FieldRef<"service", 'String'>
    readonly siret: FieldRef<"service", 'String'>
    readonly siren: FieldRef<"service", 'String'>
    readonly code_insee_commune: FieldRef<"service", 'String'>
    readonly code_postal: FieldRef<"service", 'String'>
    readonly nom_commune: FieldRef<"service", 'String'>
    readonly pays: FieldRef<"service", 'String'>
    readonly continent: FieldRef<"service", 'String'>
    readonly longitude: FieldRef<"service", 'Decimal'>
    readonly latitude: FieldRef<"service", 'Decimal'>
    readonly adresse: FieldRef<"service", 'String'>
    readonly adresse_courriel: FieldRef<"service", 'String'>
    readonly telephone: FieldRef<"service", 'String'>
    readonly telecopie: FieldRef<"service", 'String'>
    readonly site_internet: FieldRef<"service", 'String'>
    readonly copyright: FieldRef<"service", 'String'>
    readonly ancien_code_pivot: FieldRef<"service", 'String'>
    readonly reseau_social: FieldRef<"service", 'String'>
    readonly texte_reference: FieldRef<"service", 'String'>
    readonly partenaire: FieldRef<"service", 'String'>
    readonly itm_identifiant: FieldRef<"service", 'String'>
    readonly sigle: FieldRef<"service", 'String'>
    readonly date_modification: FieldRef<"service", 'DateTime'>
    readonly date_creation: FieldRef<"service", 'DateTime'>
    readonly partenaire_date_modification: FieldRef<"service", 'DateTime'>
    readonly mission: FieldRef<"service", 'String'>
    readonly formulaire_contact: FieldRef<"service", 'String'>
    readonly version_type: FieldRef<"service", 'String'>
    readonly version_etat_modification: FieldRef<"service", 'String'>
    readonly version_source: FieldRef<"service", 'String'>
    readonly type_organisme: FieldRef<"service", 'String'>
    readonly type_repertoire: FieldRef<"service", 'String'>
    readonly plage_ouverture: FieldRef<"service", 'Json'>
    readonly hierarchie: FieldRef<"service", 'Json'>
    readonly categorie: FieldRef<"service", 'String'>
    readonly sve: FieldRef<"service", 'String'>
    readonly telephone_accessible: FieldRef<"service", 'String'>
    readonly application_mobile: FieldRef<"service", 'String'>
    readonly statut_de_diffusion: FieldRef<"service", 'String'>
    readonly information_complementaire: FieldRef<"service", 'String'>
    readonly commentaire_plage_ouverture: FieldRef<"service", 'String'>
    readonly annuaire: FieldRef<"service", 'String'>
    readonly tchat: FieldRef<"service", 'String'>
  }
    

  // Custom InputTypes

  /**
   * service findUnique
   */
  export type serviceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * Filter, which service to fetch.
     */
    where: serviceWhereUniqueInput
  }


  /**
   * service findUniqueOrThrow
   */
  export type serviceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * Filter, which service to fetch.
     */
    where: serviceWhereUniqueInput
  }


  /**
   * service findFirst
   */
  export type serviceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * Filter, which service to fetch.
     */
    where?: serviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of services to fetch.
     */
    orderBy?: serviceOrderByWithRelationInput | serviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for services.
     */
    cursor?: serviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` services.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of services.
     */
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }


  /**
   * service findFirstOrThrow
   */
  export type serviceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * Filter, which service to fetch.
     */
    where?: serviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of services to fetch.
     */
    orderBy?: serviceOrderByWithRelationInput | serviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for services.
     */
    cursor?: serviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` services.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of services.
     */
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }


  /**
   * service findMany
   */
  export type serviceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * Filter, which services to fetch.
     */
    where?: serviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of services to fetch.
     */
    orderBy?: serviceOrderByWithRelationInput | serviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing services.
     */
    cursor?: serviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` services.
     */
    skip?: number
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }


  /**
   * service create
   */
  export type serviceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * The data needed to create a service.
     */
    data?: XOR<serviceCreateInput, serviceUncheckedCreateInput>
  }


  /**
   * service createMany
   */
  export type serviceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many services.
     */
    data: serviceCreateManyInput | serviceCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * service update
   */
  export type serviceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * The data needed to update a service.
     */
    data: XOR<serviceUpdateInput, serviceUncheckedUpdateInput>
    /**
     * Choose, which service to update.
     */
    where: serviceWhereUniqueInput
  }


  /**
   * service updateMany
   */
  export type serviceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update services.
     */
    data: XOR<serviceUpdateManyMutationInput, serviceUncheckedUpdateManyInput>
    /**
     * Filter which services to update
     */
    where?: serviceWhereInput
  }


  /**
   * service upsert
   */
  export type serviceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * The filter to search for the service to update in case it exists.
     */
    where: serviceWhereUniqueInput
    /**
     * In case the service found by the `where` argument doesn't exist, create a new service with this data.
     */
    create: XOR<serviceCreateInput, serviceUncheckedCreateInput>
    /**
     * In case the service was found with the provided `where` argument, update it with this data.
     */
    update: XOR<serviceUpdateInput, serviceUncheckedUpdateInput>
  }


  /**
   * service delete
   */
  export type serviceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
    /**
     * Filter which service to delete.
     */
    where: serviceWhereUniqueInput
  }


  /**
   * service deleteMany
   */
  export type serviceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which services to delete
     */
    where?: serviceWhereInput
  }


  /**
   * service without action
   */
  export type serviceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service
     */
    select?: serviceSelect<ExtArgs> | null
  }



  /**
   * Model service2
   */

  export type AggregateService2 = {
    _count: Service2CountAggregateOutputType | null
    _avg: Service2AvgAggregateOutputType | null
    _sum: Service2SumAggregateOutputType | null
    _min: Service2MinAggregateOutputType | null
    _max: Service2MaxAggregateOutputType | null
  }

  export type Service2AvgAggregateOutputType = {
    id: number | null
    longitude: Decimal | null
    latitude: Decimal | null
  }

  export type Service2SumAggregateOutputType = {
    id: number | null
    longitude: Decimal | null
    latitude: Decimal | null
  }

  export type Service2MinAggregateOutputType = {
    id: number | null
    nom: string | null
    type_service_local: string | null
    siret: string | null
    siren: string | null
    code_insee_commune: string | null
    code_postal: string | null
    nom_commune: string | null
    pays: string | null
    continent: string | null
    longitude: Decimal | null
    latitude: Decimal | null
    adresse: string | null
    adresse_courriel: string | null
    telephone: string | null
    telecopie: string | null
    site_internet: string | null
    copyright: string | null
    ancien_code_pivot: string | null
    reseau_social: string | null
    texte_reference: string | null
    partenaire: string | null
    itm_identifiant: string | null
    sigle: string | null
    date_modification: Date | null
    date_creation: Date | null
    partenaire_date_modification: Date | null
    mission: string | null
    formulaire_contact: string | null
    version_type: string | null
    version_etat_modification: string | null
    version_source: string | null
    type_organisme: string | null
    type_repertoire: string | null
    categorie: string | null
    sve: string | null
    telephone_accessible: string | null
    application_mobile: string | null
    statut_de_diffusion: string | null
    information_complementaire: string | null
    commentaire_plage_ouverture: string | null
    annuaire: string | null
    tchat: string | null
  }

  export type Service2MaxAggregateOutputType = {
    id: number | null
    nom: string | null
    type_service_local: string | null
    siret: string | null
    siren: string | null
    code_insee_commune: string | null
    code_postal: string | null
    nom_commune: string | null
    pays: string | null
    continent: string | null
    longitude: Decimal | null
    latitude: Decimal | null
    adresse: string | null
    adresse_courriel: string | null
    telephone: string | null
    telecopie: string | null
    site_internet: string | null
    copyright: string | null
    ancien_code_pivot: string | null
    reseau_social: string | null
    texte_reference: string | null
    partenaire: string | null
    itm_identifiant: string | null
    sigle: string | null
    date_modification: Date | null
    date_creation: Date | null
    partenaire_date_modification: Date | null
    mission: string | null
    formulaire_contact: string | null
    version_type: string | null
    version_etat_modification: string | null
    version_source: string | null
    type_organisme: string | null
    type_repertoire: string | null
    categorie: string | null
    sve: string | null
    telephone_accessible: string | null
    application_mobile: string | null
    statut_de_diffusion: string | null
    information_complementaire: string | null
    commentaire_plage_ouverture: string | null
    annuaire: string | null
    tchat: string | null
  }

  export type Service2CountAggregateOutputType = {
    id: number
    nom: number
    type_service_local: number
    siret: number
    siren: number
    code_insee_commune: number
    code_postal: number
    nom_commune: number
    pays: number
    continent: number
    longitude: number
    latitude: number
    adresse: number
    adresse_courriel: number
    telephone: number
    telecopie: number
    site_internet: number
    copyright: number
    ancien_code_pivot: number
    reseau_social: number
    texte_reference: number
    partenaire: number
    itm_identifiant: number
    sigle: number
    date_modification: number
    date_creation: number
    partenaire_date_modification: number
    mission: number
    formulaire_contact: number
    version_type: number
    version_etat_modification: number
    version_source: number
    type_organisme: number
    type_repertoire: number
    plage_ouverture: number
    hierarchie: number
    categorie: number
    sve: number
    telephone_accessible: number
    application_mobile: number
    statut_de_diffusion: number
    information_complementaire: number
    commentaire_plage_ouverture: number
    annuaire: number
    tchat: number
    _all: number
  }


  export type Service2AvgAggregateInputType = {
    id?: true
    longitude?: true
    latitude?: true
  }

  export type Service2SumAggregateInputType = {
    id?: true
    longitude?: true
    latitude?: true
  }

  export type Service2MinAggregateInputType = {
    id?: true
    nom?: true
    type_service_local?: true
    siret?: true
    siren?: true
    code_insee_commune?: true
    code_postal?: true
    nom_commune?: true
    pays?: true
    continent?: true
    longitude?: true
    latitude?: true
    adresse?: true
    adresse_courriel?: true
    telephone?: true
    telecopie?: true
    site_internet?: true
    copyright?: true
    ancien_code_pivot?: true
    reseau_social?: true
    texte_reference?: true
    partenaire?: true
    itm_identifiant?: true
    sigle?: true
    date_modification?: true
    date_creation?: true
    partenaire_date_modification?: true
    mission?: true
    formulaire_contact?: true
    version_type?: true
    version_etat_modification?: true
    version_source?: true
    type_organisme?: true
    type_repertoire?: true
    categorie?: true
    sve?: true
    telephone_accessible?: true
    application_mobile?: true
    statut_de_diffusion?: true
    information_complementaire?: true
    commentaire_plage_ouverture?: true
    annuaire?: true
    tchat?: true
  }

  export type Service2MaxAggregateInputType = {
    id?: true
    nom?: true
    type_service_local?: true
    siret?: true
    siren?: true
    code_insee_commune?: true
    code_postal?: true
    nom_commune?: true
    pays?: true
    continent?: true
    longitude?: true
    latitude?: true
    adresse?: true
    adresse_courriel?: true
    telephone?: true
    telecopie?: true
    site_internet?: true
    copyright?: true
    ancien_code_pivot?: true
    reseau_social?: true
    texte_reference?: true
    partenaire?: true
    itm_identifiant?: true
    sigle?: true
    date_modification?: true
    date_creation?: true
    partenaire_date_modification?: true
    mission?: true
    formulaire_contact?: true
    version_type?: true
    version_etat_modification?: true
    version_source?: true
    type_organisme?: true
    type_repertoire?: true
    categorie?: true
    sve?: true
    telephone_accessible?: true
    application_mobile?: true
    statut_de_diffusion?: true
    information_complementaire?: true
    commentaire_plage_ouverture?: true
    annuaire?: true
    tchat?: true
  }

  export type Service2CountAggregateInputType = {
    id?: true
    nom?: true
    type_service_local?: true
    siret?: true
    siren?: true
    code_insee_commune?: true
    code_postal?: true
    nom_commune?: true
    pays?: true
    continent?: true
    longitude?: true
    latitude?: true
    adresse?: true
    adresse_courriel?: true
    telephone?: true
    telecopie?: true
    site_internet?: true
    copyright?: true
    ancien_code_pivot?: true
    reseau_social?: true
    texte_reference?: true
    partenaire?: true
    itm_identifiant?: true
    sigle?: true
    date_modification?: true
    date_creation?: true
    partenaire_date_modification?: true
    mission?: true
    formulaire_contact?: true
    version_type?: true
    version_etat_modification?: true
    version_source?: true
    type_organisme?: true
    type_repertoire?: true
    plage_ouverture?: true
    hierarchie?: true
    categorie?: true
    sve?: true
    telephone_accessible?: true
    application_mobile?: true
    statut_de_diffusion?: true
    information_complementaire?: true
    commentaire_plage_ouverture?: true
    annuaire?: true
    tchat?: true
    _all?: true
  }

  export type Service2AggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which service2 to aggregate.
     */
    where?: service2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of service2s to fetch.
     */
    orderBy?: service2OrderByWithRelationInput | service2OrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: service2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` service2s from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` service2s.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned service2s
    **/
    _count?: true | Service2CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Service2AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Service2SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Service2MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Service2MaxAggregateInputType
  }

  export type GetService2AggregateType<T extends Service2AggregateArgs> = {
        [P in keyof T & keyof AggregateService2]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateService2[P]>
      : GetScalarType<T[P], AggregateService2[P]>
  }




  export type service2GroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: service2WhereInput
    orderBy?: service2OrderByWithAggregationInput | service2OrderByWithAggregationInput[]
    by: Service2ScalarFieldEnum[] | Service2ScalarFieldEnum
    having?: service2ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Service2CountAggregateInputType | true
    _avg?: Service2AvgAggregateInputType
    _sum?: Service2SumAggregateInputType
    _min?: Service2MinAggregateInputType
    _max?: Service2MaxAggregateInputType
  }

  export type Service2GroupByOutputType = {
    id: number
    nom: string | null
    type_service_local: string | null
    siret: string | null
    siren: string | null
    code_insee_commune: string | null
    code_postal: string | null
    nom_commune: string | null
    pays: string | null
    continent: string | null
    longitude: Decimal | null
    latitude: Decimal | null
    adresse: string | null
    adresse_courriel: string | null
    telephone: string | null
    telecopie: string | null
    site_internet: string | null
    copyright: string | null
    ancien_code_pivot: string | null
    reseau_social: string | null
    texte_reference: string | null
    partenaire: string | null
    itm_identifiant: string | null
    sigle: string | null
    date_modification: Date | null
    date_creation: Date | null
    partenaire_date_modification: Date | null
    mission: string | null
    formulaire_contact: string | null
    version_type: string | null
    version_etat_modification: string | null
    version_source: string | null
    type_organisme: string | null
    type_repertoire: string | null
    plage_ouverture: JsonValue | null
    hierarchie: JsonValue | null
    categorie: string | null
    sve: string | null
    telephone_accessible: string | null
    application_mobile: string | null
    statut_de_diffusion: string | null
    information_complementaire: string | null
    commentaire_plage_ouverture: string | null
    annuaire: string | null
    tchat: string | null
    _count: Service2CountAggregateOutputType | null
    _avg: Service2AvgAggregateOutputType | null
    _sum: Service2SumAggregateOutputType | null
    _min: Service2MinAggregateOutputType | null
    _max: Service2MaxAggregateOutputType | null
  }

  type GetService2GroupByPayload<T extends service2GroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Service2GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Service2GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Service2GroupByOutputType[P]>
            : GetScalarType<T[P], Service2GroupByOutputType[P]>
        }
      >
    >


  export type service2Select<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nom?: boolean
    type_service_local?: boolean
    siret?: boolean
    siren?: boolean
    code_insee_commune?: boolean
    code_postal?: boolean
    nom_commune?: boolean
    pays?: boolean
    continent?: boolean
    longitude?: boolean
    latitude?: boolean
    adresse?: boolean
    adresse_courriel?: boolean
    telephone?: boolean
    telecopie?: boolean
    site_internet?: boolean
    copyright?: boolean
    ancien_code_pivot?: boolean
    reseau_social?: boolean
    texte_reference?: boolean
    partenaire?: boolean
    itm_identifiant?: boolean
    sigle?: boolean
    date_modification?: boolean
    date_creation?: boolean
    partenaire_date_modification?: boolean
    mission?: boolean
    formulaire_contact?: boolean
    version_type?: boolean
    version_etat_modification?: boolean
    version_source?: boolean
    type_organisme?: boolean
    type_repertoire?: boolean
    plage_ouverture?: boolean
    hierarchie?: boolean
    categorie?: boolean
    sve?: boolean
    telephone_accessible?: boolean
    application_mobile?: boolean
    statut_de_diffusion?: boolean
    information_complementaire?: boolean
    commentaire_plage_ouverture?: boolean
    annuaire?: boolean
    tchat?: boolean
  }, ExtArgs["result"]["service2"]>

  export type service2SelectScalar = {
    id?: boolean
    nom?: boolean
    type_service_local?: boolean
    siret?: boolean
    siren?: boolean
    code_insee_commune?: boolean
    code_postal?: boolean
    nom_commune?: boolean
    pays?: boolean
    continent?: boolean
    longitude?: boolean
    latitude?: boolean
    adresse?: boolean
    adresse_courriel?: boolean
    telephone?: boolean
    telecopie?: boolean
    site_internet?: boolean
    copyright?: boolean
    ancien_code_pivot?: boolean
    reseau_social?: boolean
    texte_reference?: boolean
    partenaire?: boolean
    itm_identifiant?: boolean
    sigle?: boolean
    date_modification?: boolean
    date_creation?: boolean
    partenaire_date_modification?: boolean
    mission?: boolean
    formulaire_contact?: boolean
    version_type?: boolean
    version_etat_modification?: boolean
    version_source?: boolean
    type_organisme?: boolean
    type_repertoire?: boolean
    plage_ouverture?: boolean
    hierarchie?: boolean
    categorie?: boolean
    sve?: boolean
    telephone_accessible?: boolean
    application_mobile?: boolean
    statut_de_diffusion?: boolean
    information_complementaire?: boolean
    commentaire_plage_ouverture?: boolean
    annuaire?: boolean
    tchat?: boolean
  }


  export type $service2Payload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "service2"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nom: string | null
      type_service_local: string | null
      siret: string | null
      siren: string | null
      code_insee_commune: string | null
      code_postal: string | null
      nom_commune: string | null
      pays: string | null
      continent: string | null
      longitude: Prisma.Decimal | null
      latitude: Prisma.Decimal | null
      adresse: string | null
      adresse_courriel: string | null
      telephone: string | null
      telecopie: string | null
      site_internet: string | null
      copyright: string | null
      ancien_code_pivot: string | null
      reseau_social: string | null
      texte_reference: string | null
      partenaire: string | null
      itm_identifiant: string | null
      sigle: string | null
      date_modification: Date | null
      date_creation: Date | null
      partenaire_date_modification: Date | null
      mission: string | null
      formulaire_contact: string | null
      version_type: string | null
      version_etat_modification: string | null
      version_source: string | null
      type_organisme: string | null
      type_repertoire: string | null
      plage_ouverture: Prisma.JsonValue | null
      hierarchie: Prisma.JsonValue | null
      categorie: string | null
      sve: string | null
      telephone_accessible: string | null
      application_mobile: string | null
      statut_de_diffusion: string | null
      information_complementaire: string | null
      commentaire_plage_ouverture: string | null
      annuaire: string | null
      tchat: string | null
    }, ExtArgs["result"]["service2"]>
    composites: {}
  }


  type service2GetPayload<S extends boolean | null | undefined | service2DefaultArgs> = $Result.GetResult<Prisma.$service2Payload, S>

  type service2CountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<service2FindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Service2CountAggregateInputType | true
    }

  export interface service2Delegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['service2'], meta: { name: 'service2' } }
    /**
     * Find zero or one Service2 that matches the filter.
     * @param {service2FindUniqueArgs} args - Arguments to find a Service2
     * @example
     * // Get one Service2
     * const service2 = await prisma.service2.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends service2FindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, service2FindUniqueArgs<ExtArgs>>
    ): Prisma__service2Client<$Result.GetResult<Prisma.$service2Payload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Service2 that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {service2FindUniqueOrThrowArgs} args - Arguments to find a Service2
     * @example
     * // Get one Service2
     * const service2 = await prisma.service2.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends service2FindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, service2FindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__service2Client<$Result.GetResult<Prisma.$service2Payload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Service2 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {service2FindFirstArgs} args - Arguments to find a Service2
     * @example
     * // Get one Service2
     * const service2 = await prisma.service2.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends service2FindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, service2FindFirstArgs<ExtArgs>>
    ): Prisma__service2Client<$Result.GetResult<Prisma.$service2Payload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Service2 that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {service2FindFirstOrThrowArgs} args - Arguments to find a Service2
     * @example
     * // Get one Service2
     * const service2 = await prisma.service2.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends service2FindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, service2FindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__service2Client<$Result.GetResult<Prisma.$service2Payload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Service2s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {service2FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Service2s
     * const service2s = await prisma.service2.findMany()
     * 
     * // Get first 10 Service2s
     * const service2s = await prisma.service2.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const service2WithIdOnly = await prisma.service2.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends service2FindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, service2FindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$service2Payload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Service2.
     * @param {service2CreateArgs} args - Arguments to create a Service2.
     * @example
     * // Create one Service2
     * const Service2 = await prisma.service2.create({
     *   data: {
     *     // ... data to create a Service2
     *   }
     * })
     * 
    **/
    create<T extends service2CreateArgs<ExtArgs>>(
      args: SelectSubset<T, service2CreateArgs<ExtArgs>>
    ): Prisma__service2Client<$Result.GetResult<Prisma.$service2Payload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Service2s.
     *     @param {service2CreateManyArgs} args - Arguments to create many Service2s.
     *     @example
     *     // Create many Service2s
     *     const service2 = await prisma.service2.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends service2CreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, service2CreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Service2.
     * @param {service2DeleteArgs} args - Arguments to delete one Service2.
     * @example
     * // Delete one Service2
     * const Service2 = await prisma.service2.delete({
     *   where: {
     *     // ... filter to delete one Service2
     *   }
     * })
     * 
    **/
    delete<T extends service2DeleteArgs<ExtArgs>>(
      args: SelectSubset<T, service2DeleteArgs<ExtArgs>>
    ): Prisma__service2Client<$Result.GetResult<Prisma.$service2Payload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Service2.
     * @param {service2UpdateArgs} args - Arguments to update one Service2.
     * @example
     * // Update one Service2
     * const service2 = await prisma.service2.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends service2UpdateArgs<ExtArgs>>(
      args: SelectSubset<T, service2UpdateArgs<ExtArgs>>
    ): Prisma__service2Client<$Result.GetResult<Prisma.$service2Payload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Service2s.
     * @param {service2DeleteManyArgs} args - Arguments to filter Service2s to delete.
     * @example
     * // Delete a few Service2s
     * const { count } = await prisma.service2.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends service2DeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, service2DeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Service2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {service2UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Service2s
     * const service2 = await prisma.service2.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends service2UpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, service2UpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Service2.
     * @param {service2UpsertArgs} args - Arguments to update or create a Service2.
     * @example
     * // Update or create a Service2
     * const service2 = await prisma.service2.upsert({
     *   create: {
     *     // ... data to create a Service2
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Service2 we want to update
     *   }
     * })
    **/
    upsert<T extends service2UpsertArgs<ExtArgs>>(
      args: SelectSubset<T, service2UpsertArgs<ExtArgs>>
    ): Prisma__service2Client<$Result.GetResult<Prisma.$service2Payload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Service2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {service2CountArgs} args - Arguments to filter Service2s to count.
     * @example
     * // Count the number of Service2s
     * const count = await prisma.service2.count({
     *   where: {
     *     // ... the filter for the Service2s we want to count
     *   }
     * })
    **/
    count<T extends service2CountArgs>(
      args?: Subset<T, service2CountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Service2CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Service2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Service2AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Service2AggregateArgs>(args: Subset<T, Service2AggregateArgs>): Prisma.PrismaPromise<GetService2AggregateType<T>>

    /**
     * Group by Service2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {service2GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends service2GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: service2GroupByArgs['orderBy'] }
        : { orderBy?: service2GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, service2GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetService2GroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the service2 model
   */
  readonly fields: service2FieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for service2.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__service2Client<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the service2 model
   */ 
  interface service2FieldRefs {
    readonly id: FieldRef<"service2", 'Int'>
    readonly nom: FieldRef<"service2", 'String'>
    readonly type_service_local: FieldRef<"service2", 'String'>
    readonly siret: FieldRef<"service2", 'String'>
    readonly siren: FieldRef<"service2", 'String'>
    readonly code_insee_commune: FieldRef<"service2", 'String'>
    readonly code_postal: FieldRef<"service2", 'String'>
    readonly nom_commune: FieldRef<"service2", 'String'>
    readonly pays: FieldRef<"service2", 'String'>
    readonly continent: FieldRef<"service2", 'String'>
    readonly longitude: FieldRef<"service2", 'Decimal'>
    readonly latitude: FieldRef<"service2", 'Decimal'>
    readonly adresse: FieldRef<"service2", 'String'>
    readonly adresse_courriel: FieldRef<"service2", 'String'>
    readonly telephone: FieldRef<"service2", 'String'>
    readonly telecopie: FieldRef<"service2", 'String'>
    readonly site_internet: FieldRef<"service2", 'String'>
    readonly copyright: FieldRef<"service2", 'String'>
    readonly ancien_code_pivot: FieldRef<"service2", 'String'>
    readonly reseau_social: FieldRef<"service2", 'String'>
    readonly texte_reference: FieldRef<"service2", 'String'>
    readonly partenaire: FieldRef<"service2", 'String'>
    readonly itm_identifiant: FieldRef<"service2", 'String'>
    readonly sigle: FieldRef<"service2", 'String'>
    readonly date_modification: FieldRef<"service2", 'DateTime'>
    readonly date_creation: FieldRef<"service2", 'DateTime'>
    readonly partenaire_date_modification: FieldRef<"service2", 'DateTime'>
    readonly mission: FieldRef<"service2", 'String'>
    readonly formulaire_contact: FieldRef<"service2", 'String'>
    readonly version_type: FieldRef<"service2", 'String'>
    readonly version_etat_modification: FieldRef<"service2", 'String'>
    readonly version_source: FieldRef<"service2", 'String'>
    readonly type_organisme: FieldRef<"service2", 'String'>
    readonly type_repertoire: FieldRef<"service2", 'String'>
    readonly plage_ouverture: FieldRef<"service2", 'Json'>
    readonly hierarchie: FieldRef<"service2", 'Json'>
    readonly categorie: FieldRef<"service2", 'String'>
    readonly sve: FieldRef<"service2", 'String'>
    readonly telephone_accessible: FieldRef<"service2", 'String'>
    readonly application_mobile: FieldRef<"service2", 'String'>
    readonly statut_de_diffusion: FieldRef<"service2", 'String'>
    readonly information_complementaire: FieldRef<"service2", 'String'>
    readonly commentaire_plage_ouverture: FieldRef<"service2", 'String'>
    readonly annuaire: FieldRef<"service2", 'String'>
    readonly tchat: FieldRef<"service2", 'String'>
  }
    

  // Custom InputTypes

  /**
   * service2 findUnique
   */
  export type service2FindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service2
     */
    select?: service2Select<ExtArgs> | null
    /**
     * Filter, which service2 to fetch.
     */
    where: service2WhereUniqueInput
  }


  /**
   * service2 findUniqueOrThrow
   */
  export type service2FindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service2
     */
    select?: service2Select<ExtArgs> | null
    /**
     * Filter, which service2 to fetch.
     */
    where: service2WhereUniqueInput
  }


  /**
   * service2 findFirst
   */
  export type service2FindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service2
     */
    select?: service2Select<ExtArgs> | null
    /**
     * Filter, which service2 to fetch.
     */
    where?: service2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of service2s to fetch.
     */
    orderBy?: service2OrderByWithRelationInput | service2OrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for service2s.
     */
    cursor?: service2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` service2s from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` service2s.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of service2s.
     */
    distinct?: Service2ScalarFieldEnum | Service2ScalarFieldEnum[]
  }


  /**
   * service2 findFirstOrThrow
   */
  export type service2FindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service2
     */
    select?: service2Select<ExtArgs> | null
    /**
     * Filter, which service2 to fetch.
     */
    where?: service2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of service2s to fetch.
     */
    orderBy?: service2OrderByWithRelationInput | service2OrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for service2s.
     */
    cursor?: service2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` service2s from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` service2s.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of service2s.
     */
    distinct?: Service2ScalarFieldEnum | Service2ScalarFieldEnum[]
  }


  /**
   * service2 findMany
   */
  export type service2FindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service2
     */
    select?: service2Select<ExtArgs> | null
    /**
     * Filter, which service2s to fetch.
     */
    where?: service2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of service2s to fetch.
     */
    orderBy?: service2OrderByWithRelationInput | service2OrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing service2s.
     */
    cursor?: service2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` service2s from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` service2s.
     */
    skip?: number
    distinct?: Service2ScalarFieldEnum | Service2ScalarFieldEnum[]
  }


  /**
   * service2 create
   */
  export type service2CreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service2
     */
    select?: service2Select<ExtArgs> | null
    /**
     * The data needed to create a service2.
     */
    data?: XOR<service2CreateInput, service2UncheckedCreateInput>
  }


  /**
   * service2 createMany
   */
  export type service2CreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many service2s.
     */
    data: service2CreateManyInput | service2CreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * service2 update
   */
  export type service2UpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service2
     */
    select?: service2Select<ExtArgs> | null
    /**
     * The data needed to update a service2.
     */
    data: XOR<service2UpdateInput, service2UncheckedUpdateInput>
    /**
     * Choose, which service2 to update.
     */
    where: service2WhereUniqueInput
  }


  /**
   * service2 updateMany
   */
  export type service2UpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update service2s.
     */
    data: XOR<service2UpdateManyMutationInput, service2UncheckedUpdateManyInput>
    /**
     * Filter which service2s to update
     */
    where?: service2WhereInput
  }


  /**
   * service2 upsert
   */
  export type service2UpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service2
     */
    select?: service2Select<ExtArgs> | null
    /**
     * The filter to search for the service2 to update in case it exists.
     */
    where: service2WhereUniqueInput
    /**
     * In case the service2 found by the `where` argument doesn't exist, create a new service2 with this data.
     */
    create: XOR<service2CreateInput, service2UncheckedCreateInput>
    /**
     * In case the service2 was found with the provided `where` argument, update it with this data.
     */
    update: XOR<service2UpdateInput, service2UncheckedUpdateInput>
  }


  /**
   * service2 delete
   */
  export type service2DeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service2
     */
    select?: service2Select<ExtArgs> | null
    /**
     * Filter which service2 to delete.
     */
    where: service2WhereUniqueInput
  }


  /**
   * service2 deleteMany
   */
  export type service2DeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which service2s to delete
     */
    where?: service2WhereInput
  }


  /**
   * service2 without action
   */
  export type service2DefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service2
     */
    select?: service2Select<ExtArgs> | null
  }



  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    id: number | null
  }

  export type UsersSumAggregateOutputType = {
    id: number | null
  }

  export type UsersMinAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UsersMaxAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    name: number
    email: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    id?: true
  }

  export type UsersSumAggregateInputType = {
    id?: true
  }

  export type UsersMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: number
    name: string | null
    email: string | null
    createdAt: Date
    updatedAt: Date
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }


  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string | null
      email: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["users"]>
    composites: {}
  }


  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends usersFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Users that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends usersFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends usersFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
    **/
    create<T extends usersCreateArgs<ExtArgs>>(
      args: SelectSubset<T, usersCreateArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Users.
     *     @param {usersCreateManyArgs} args - Arguments to create many Users.
     *     @example
     *     // Create many Users
     *     const users = await prisma.users.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends usersCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
    **/
    delete<T extends usersDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, usersDeleteArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends usersUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, usersUpdateArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends usersDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends usersUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
    **/
    upsert<T extends usersUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, usersUpsertArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the users model
   */ 
  interface usersFieldRefs {
    readonly id: FieldRef<"users", 'Int'>
    readonly name: FieldRef<"users", 'String'>
    readonly email: FieldRef<"users", 'String'>
    readonly createdAt: FieldRef<"users", 'DateTime'>
    readonly updatedAt: FieldRef<"users", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }


  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
  }


  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }


  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
  }


  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
  }



  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CollectivitesScalarFieldEnum: {
    id: 'id',
    nom: 'nom',
    type_service_local: 'type_service_local',
    siret: 'siret',
    siren: 'siren',
    code_insee_commune: 'code_insee_commune',
    code_postal: 'code_postal',
    code_departement: 'code_departement',
    nom_departement: 'nom_departement',
    nom_commune: 'nom_commune',
    pays: 'pays',
    continent: 'continent',
    longitude: 'longitude',
    latitude: 'latitude',
    adresse: 'adresse',
    adresse_courriel: 'adresse_courriel',
    telephone: 'telephone',
    telecopie: 'telecopie',
    site_internet: 'site_internet',
    copyright: 'copyright',
    ancien_code_pivot: 'ancien_code_pivot',
    reseau_social: 'reseau_social',
    texte_reference: 'texte_reference',
    partenaire: 'partenaire',
    itm_identifiant: 'itm_identifiant',
    sigle: 'sigle',
    date_modification: 'date_modification',
    date_creation: 'date_creation',
    partenaire_date_modification: 'partenaire_date_modification',
    mission: 'mission',
    formulaire_contact: 'formulaire_contact',
    version_type: 'version_type',
    version_etat_modification: 'version_etat_modification',
    version_source: 'version_source',
    type_organisme: 'type_organisme',
    type_repertoire: 'type_repertoire',
    plage_ouverture: 'plage_ouverture',
    hierarchie: 'hierarchie',
    categorie: 'categorie',
    sve: 'sve',
    telephone_accessible: 'telephone_accessible',
    application_mobile: 'application_mobile',
    statut_de_diffusion: 'statut_de_diffusion',
    information_complementaire: 'information_complementaire',
    commentaire_plage_ouverture: 'commentaire_plage_ouverture',
    annuaire: 'annuaire',
    tchat: 'tchat',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    is_selected: 'is_selected',
    is_sended: 'is_sended'
  };

  export type CollectivitesScalarFieldEnum = (typeof CollectivitesScalarFieldEnum)[keyof typeof CollectivitesScalarFieldEnum]


  export const Collectivites_joinScalarFieldEnum: {
    code_postal: 'code_postal',
    code_departement: 'code_departement'
  };

  export type Collectivites_joinScalarFieldEnum = (typeof Collectivites_joinScalarFieldEnum)[keyof typeof Collectivites_joinScalarFieldEnum]


  export const Collectivites_testScalarFieldEnum: {
    id: 'id',
    nom: 'nom',
    type_service_local: 'type_service_local',
    siret: 'siret',
    siren: 'siren',
    code_insee_commune: 'code_insee_commune',
    code_postal: 'code_postal',
    nom_commune: 'nom_commune',
    pays: 'pays',
    continent: 'continent',
    longitude: 'longitude',
    latitude: 'latitude',
    adresse: 'adresse',
    adresse_courriel: 'adresse_courriel',
    telephone: 'telephone',
    telecopie: 'telecopie',
    site_internet: 'site_internet',
    copyright: 'copyright',
    ancien_code_pivot: 'ancien_code_pivot',
    reseau_social: 'reseau_social',
    texte_reference: 'texte_reference',
    partenaire: 'partenaire',
    itm_identifiant: 'itm_identifiant',
    sigle: 'sigle',
    date_modification: 'date_modification',
    date_creation: 'date_creation',
    partenaire_date_modification: 'partenaire_date_modification',
    mission: 'mission',
    formulaire_contact: 'formulaire_contact',
    version_type: 'version_type',
    version_etat_modification: 'version_etat_modification',
    version_source: 'version_source',
    type_organisme: 'type_organisme',
    type_repertoire: 'type_repertoire',
    plage_ouverture: 'plage_ouverture',
    hierarchie: 'hierarchie',
    categorie: 'categorie',
    sve: 'sve',
    telephone_accessible: 'telephone_accessible',
    application_mobile: 'application_mobile',
    statut_de_diffusion: 'statut_de_diffusion',
    information_complementaire: 'information_complementaire',
    commentaire_plage_ouverture: 'commentaire_plage_ouverture',
    annuaire: 'annuaire',
    tchat: 'tchat',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    is_selected: 'is_selected',
    is_sended: 'is_sended'
  };

  export type Collectivites_testScalarFieldEnum = (typeof Collectivites_testScalarFieldEnum)[keyof typeof Collectivites_testScalarFieldEnum]


  export const DepartementScalarFieldEnum: {
    departement_id: 'departement_id',
    departement_code: 'departement_code',
    departement_nom: 'departement_nom',
    departement_nom_uppercase: 'departement_nom_uppercase',
    departement_slug: 'departement_slug',
    departement_nom_soundex: 'departement_nom_soundex'
  };

  export type DepartementScalarFieldEnum = (typeof DepartementScalarFieldEnum)[keyof typeof DepartementScalarFieldEnum]


  export const ServiceScalarFieldEnum: {
    id: 'id',
    nom: 'nom',
    type_service_local: 'type_service_local',
    siret: 'siret',
    siren: 'siren',
    code_insee_commune: 'code_insee_commune',
    code_postal: 'code_postal',
    nom_commune: 'nom_commune',
    pays: 'pays',
    continent: 'continent',
    longitude: 'longitude',
    latitude: 'latitude',
    adresse: 'adresse',
    adresse_courriel: 'adresse_courriel',
    telephone: 'telephone',
    telecopie: 'telecopie',
    site_internet: 'site_internet',
    copyright: 'copyright',
    ancien_code_pivot: 'ancien_code_pivot',
    reseau_social: 'reseau_social',
    texte_reference: 'texte_reference',
    partenaire: 'partenaire',
    itm_identifiant: 'itm_identifiant',
    sigle: 'sigle',
    date_modification: 'date_modification',
    date_creation: 'date_creation',
    partenaire_date_modification: 'partenaire_date_modification',
    mission: 'mission',
    formulaire_contact: 'formulaire_contact',
    version_type: 'version_type',
    version_etat_modification: 'version_etat_modification',
    version_source: 'version_source',
    type_organisme: 'type_organisme',
    type_repertoire: 'type_repertoire',
    plage_ouverture: 'plage_ouverture',
    hierarchie: 'hierarchie',
    categorie: 'categorie',
    sve: 'sve',
    telephone_accessible: 'telephone_accessible',
    application_mobile: 'application_mobile',
    statut_de_diffusion: 'statut_de_diffusion',
    information_complementaire: 'information_complementaire',
    commentaire_plage_ouverture: 'commentaire_plage_ouverture',
    annuaire: 'annuaire',
    tchat: 'tchat'
  };

  export type ServiceScalarFieldEnum = (typeof ServiceScalarFieldEnum)[keyof typeof ServiceScalarFieldEnum]


  export const Service2ScalarFieldEnum: {
    id: 'id',
    nom: 'nom',
    type_service_local: 'type_service_local',
    siret: 'siret',
    siren: 'siren',
    code_insee_commune: 'code_insee_commune',
    code_postal: 'code_postal',
    nom_commune: 'nom_commune',
    pays: 'pays',
    continent: 'continent',
    longitude: 'longitude',
    latitude: 'latitude',
    adresse: 'adresse',
    adresse_courriel: 'adresse_courriel',
    telephone: 'telephone',
    telecopie: 'telecopie',
    site_internet: 'site_internet',
    copyright: 'copyright',
    ancien_code_pivot: 'ancien_code_pivot',
    reseau_social: 'reseau_social',
    texte_reference: 'texte_reference',
    partenaire: 'partenaire',
    itm_identifiant: 'itm_identifiant',
    sigle: 'sigle',
    date_modification: 'date_modification',
    date_creation: 'date_creation',
    partenaire_date_modification: 'partenaire_date_modification',
    mission: 'mission',
    formulaire_contact: 'formulaire_contact',
    version_type: 'version_type',
    version_etat_modification: 'version_etat_modification',
    version_source: 'version_source',
    type_organisme: 'type_organisme',
    type_repertoire: 'type_repertoire',
    plage_ouverture: 'plage_ouverture',
    hierarchie: 'hierarchie',
    categorie: 'categorie',
    sve: 'sve',
    telephone_accessible: 'telephone_accessible',
    application_mobile: 'application_mobile',
    statut_de_diffusion: 'statut_de_diffusion',
    information_complementaire: 'information_complementaire',
    commentaire_plage_ouverture: 'commentaire_plage_ouverture',
    annuaire: 'annuaire',
    tchat: 'tchat'
  };

  export type Service2ScalarFieldEnum = (typeof Service2ScalarFieldEnum)[keyof typeof Service2ScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type collectivitesWhereInput = {
    AND?: collectivitesWhereInput | collectivitesWhereInput[]
    OR?: collectivitesWhereInput[]
    NOT?: collectivitesWhereInput | collectivitesWhereInput[]
    id?: IntFilter<"collectivites"> | number
    nom?: StringNullableFilter<"collectivites"> | string | null
    type_service_local?: StringNullableFilter<"collectivites"> | string | null
    siret?: StringNullableFilter<"collectivites"> | string | null
    siren?: StringNullableFilter<"collectivites"> | string | null
    code_insee_commune?: StringNullableFilter<"collectivites"> | string | null
    code_postal?: StringNullableFilter<"collectivites"> | string | null
    code_departement?: StringNullableFilter<"collectivites"> | string | null
    nom_departement?: StringNullableFilter<"collectivites"> | string | null
    nom_commune?: StringNullableFilter<"collectivites"> | string | null
    pays?: StringNullableFilter<"collectivites"> | string | null
    continent?: StringNullableFilter<"collectivites"> | string | null
    longitude?: DecimalNullableFilter<"collectivites"> | Decimal | DecimalJsLike | number | string | null
    latitude?: DecimalNullableFilter<"collectivites"> | Decimal | DecimalJsLike | number | string | null
    adresse?: StringNullableFilter<"collectivites"> | string | null
    adresse_courriel?: StringNullableFilter<"collectivites"> | string | null
    telephone?: StringNullableFilter<"collectivites"> | string | null
    telecopie?: StringNullableFilter<"collectivites"> | string | null
    site_internet?: StringNullableFilter<"collectivites"> | string | null
    copyright?: StringNullableFilter<"collectivites"> | string | null
    ancien_code_pivot?: StringNullableFilter<"collectivites"> | string | null
    reseau_social?: StringNullableFilter<"collectivites"> | string | null
    texte_reference?: StringNullableFilter<"collectivites"> | string | null
    partenaire?: StringNullableFilter<"collectivites"> | string | null
    itm_identifiant?: StringNullableFilter<"collectivites"> | string | null
    sigle?: StringNullableFilter<"collectivites"> | string | null
    date_modification?: DateTimeNullableFilter<"collectivites"> | Date | string | null
    date_creation?: DateTimeNullableFilter<"collectivites"> | Date | string | null
    partenaire_date_modification?: DateTimeNullableFilter<"collectivites"> | Date | string | null
    mission?: StringNullableFilter<"collectivites"> | string | null
    formulaire_contact?: StringNullableFilter<"collectivites"> | string | null
    version_type?: StringNullableFilter<"collectivites"> | string | null
    version_etat_modification?: StringNullableFilter<"collectivites"> | string | null
    version_source?: StringNullableFilter<"collectivites"> | string | null
    type_organisme?: StringNullableFilter<"collectivites"> | string | null
    type_repertoire?: StringNullableFilter<"collectivites"> | string | null
    plage_ouverture?: JsonNullableFilter<"collectivites">
    hierarchie?: JsonNullableFilter<"collectivites">
    categorie?: StringNullableFilter<"collectivites"> | string | null
    sve?: StringNullableFilter<"collectivites"> | string | null
    telephone_accessible?: StringNullableFilter<"collectivites"> | string | null
    application_mobile?: StringNullableFilter<"collectivites"> | string | null
    statut_de_diffusion?: StringNullableFilter<"collectivites"> | string | null
    information_complementaire?: StringNullableFilter<"collectivites"> | string | null
    commentaire_plage_ouverture?: StringNullableFilter<"collectivites"> | string | null
    annuaire?: StringNullableFilter<"collectivites"> | string | null
    tchat?: StringNullableFilter<"collectivites"> | string | null
    createdAt?: DateTimeNullableFilter<"collectivites"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"collectivites"> | Date | string | null
    is_selected?: BoolFilter<"collectivites"> | boolean
    is_sended?: BoolFilter<"collectivites"> | boolean
    departement_id?: XOR<DepartementNullableRelationFilter, departementWhereInput> | null
  }

  export type collectivitesOrderByWithRelationInput = {
    id?: SortOrder
    nom?: SortOrderInput | SortOrder
    type_service_local?: SortOrderInput | SortOrder
    siret?: SortOrderInput | SortOrder
    siren?: SortOrderInput | SortOrder
    code_insee_commune?: SortOrderInput | SortOrder
    code_postal?: SortOrderInput | SortOrder
    code_departement?: SortOrderInput | SortOrder
    nom_departement?: SortOrderInput | SortOrder
    nom_commune?: SortOrderInput | SortOrder
    pays?: SortOrderInput | SortOrder
    continent?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    adresse?: SortOrderInput | SortOrder
    adresse_courriel?: SortOrderInput | SortOrder
    telephone?: SortOrderInput | SortOrder
    telecopie?: SortOrderInput | SortOrder
    site_internet?: SortOrderInput | SortOrder
    copyright?: SortOrderInput | SortOrder
    ancien_code_pivot?: SortOrderInput | SortOrder
    reseau_social?: SortOrderInput | SortOrder
    texte_reference?: SortOrderInput | SortOrder
    partenaire?: SortOrderInput | SortOrder
    itm_identifiant?: SortOrderInput | SortOrder
    sigle?: SortOrderInput | SortOrder
    date_modification?: SortOrderInput | SortOrder
    date_creation?: SortOrderInput | SortOrder
    partenaire_date_modification?: SortOrderInput | SortOrder
    mission?: SortOrderInput | SortOrder
    formulaire_contact?: SortOrderInput | SortOrder
    version_type?: SortOrderInput | SortOrder
    version_etat_modification?: SortOrderInput | SortOrder
    version_source?: SortOrderInput | SortOrder
    type_organisme?: SortOrderInput | SortOrder
    type_repertoire?: SortOrderInput | SortOrder
    plage_ouverture?: SortOrderInput | SortOrder
    hierarchie?: SortOrderInput | SortOrder
    categorie?: SortOrderInput | SortOrder
    sve?: SortOrderInput | SortOrder
    telephone_accessible?: SortOrderInput | SortOrder
    application_mobile?: SortOrderInput | SortOrder
    statut_de_diffusion?: SortOrderInput | SortOrder
    information_complementaire?: SortOrderInput | SortOrder
    commentaire_plage_ouverture?: SortOrderInput | SortOrder
    annuaire?: SortOrderInput | SortOrder
    tchat?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    is_selected?: SortOrder
    is_sended?: SortOrder
    departement_id?: departementOrderByWithRelationInput
  }

  export type collectivitesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: collectivitesWhereInput | collectivitesWhereInput[]
    OR?: collectivitesWhereInput[]
    NOT?: collectivitesWhereInput | collectivitesWhereInput[]
    nom?: StringNullableFilter<"collectivites"> | string | null
    type_service_local?: StringNullableFilter<"collectivites"> | string | null
    siret?: StringNullableFilter<"collectivites"> | string | null
    siren?: StringNullableFilter<"collectivites"> | string | null
    code_insee_commune?: StringNullableFilter<"collectivites"> | string | null
    code_postal?: StringNullableFilter<"collectivites"> | string | null
    code_departement?: StringNullableFilter<"collectivites"> | string | null
    nom_departement?: StringNullableFilter<"collectivites"> | string | null
    nom_commune?: StringNullableFilter<"collectivites"> | string | null
    pays?: StringNullableFilter<"collectivites"> | string | null
    continent?: StringNullableFilter<"collectivites"> | string | null
    longitude?: DecimalNullableFilter<"collectivites"> | Decimal | DecimalJsLike | number | string | null
    latitude?: DecimalNullableFilter<"collectivites"> | Decimal | DecimalJsLike | number | string | null
    adresse?: StringNullableFilter<"collectivites"> | string | null
    adresse_courriel?: StringNullableFilter<"collectivites"> | string | null
    telephone?: StringNullableFilter<"collectivites"> | string | null
    telecopie?: StringNullableFilter<"collectivites"> | string | null
    site_internet?: StringNullableFilter<"collectivites"> | string | null
    copyright?: StringNullableFilter<"collectivites"> | string | null
    ancien_code_pivot?: StringNullableFilter<"collectivites"> | string | null
    reseau_social?: StringNullableFilter<"collectivites"> | string | null
    texte_reference?: StringNullableFilter<"collectivites"> | string | null
    partenaire?: StringNullableFilter<"collectivites"> | string | null
    itm_identifiant?: StringNullableFilter<"collectivites"> | string | null
    sigle?: StringNullableFilter<"collectivites"> | string | null
    date_modification?: DateTimeNullableFilter<"collectivites"> | Date | string | null
    date_creation?: DateTimeNullableFilter<"collectivites"> | Date | string | null
    partenaire_date_modification?: DateTimeNullableFilter<"collectivites"> | Date | string | null
    mission?: StringNullableFilter<"collectivites"> | string | null
    formulaire_contact?: StringNullableFilter<"collectivites"> | string | null
    version_type?: StringNullableFilter<"collectivites"> | string | null
    version_etat_modification?: StringNullableFilter<"collectivites"> | string | null
    version_source?: StringNullableFilter<"collectivites"> | string | null
    type_organisme?: StringNullableFilter<"collectivites"> | string | null
    type_repertoire?: StringNullableFilter<"collectivites"> | string | null
    plage_ouverture?: JsonNullableFilter<"collectivites">
    hierarchie?: JsonNullableFilter<"collectivites">
    categorie?: StringNullableFilter<"collectivites"> | string | null
    sve?: StringNullableFilter<"collectivites"> | string | null
    telephone_accessible?: StringNullableFilter<"collectivites"> | string | null
    application_mobile?: StringNullableFilter<"collectivites"> | string | null
    statut_de_diffusion?: StringNullableFilter<"collectivites"> | string | null
    information_complementaire?: StringNullableFilter<"collectivites"> | string | null
    commentaire_plage_ouverture?: StringNullableFilter<"collectivites"> | string | null
    annuaire?: StringNullableFilter<"collectivites"> | string | null
    tchat?: StringNullableFilter<"collectivites"> | string | null
    createdAt?: DateTimeNullableFilter<"collectivites"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"collectivites"> | Date | string | null
    is_selected?: BoolFilter<"collectivites"> | boolean
    is_sended?: BoolFilter<"collectivites"> | boolean
    departement_id?: XOR<DepartementNullableRelationFilter, departementWhereInput> | null
  }, "id">

  export type collectivitesOrderByWithAggregationInput = {
    id?: SortOrder
    nom?: SortOrderInput | SortOrder
    type_service_local?: SortOrderInput | SortOrder
    siret?: SortOrderInput | SortOrder
    siren?: SortOrderInput | SortOrder
    code_insee_commune?: SortOrderInput | SortOrder
    code_postal?: SortOrderInput | SortOrder
    code_departement?: SortOrderInput | SortOrder
    nom_departement?: SortOrderInput | SortOrder
    nom_commune?: SortOrderInput | SortOrder
    pays?: SortOrderInput | SortOrder
    continent?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    adresse?: SortOrderInput | SortOrder
    adresse_courriel?: SortOrderInput | SortOrder
    telephone?: SortOrderInput | SortOrder
    telecopie?: SortOrderInput | SortOrder
    site_internet?: SortOrderInput | SortOrder
    copyright?: SortOrderInput | SortOrder
    ancien_code_pivot?: SortOrderInput | SortOrder
    reseau_social?: SortOrderInput | SortOrder
    texte_reference?: SortOrderInput | SortOrder
    partenaire?: SortOrderInput | SortOrder
    itm_identifiant?: SortOrderInput | SortOrder
    sigle?: SortOrderInput | SortOrder
    date_modification?: SortOrderInput | SortOrder
    date_creation?: SortOrderInput | SortOrder
    partenaire_date_modification?: SortOrderInput | SortOrder
    mission?: SortOrderInput | SortOrder
    formulaire_contact?: SortOrderInput | SortOrder
    version_type?: SortOrderInput | SortOrder
    version_etat_modification?: SortOrderInput | SortOrder
    version_source?: SortOrderInput | SortOrder
    type_organisme?: SortOrderInput | SortOrder
    type_repertoire?: SortOrderInput | SortOrder
    plage_ouverture?: SortOrderInput | SortOrder
    hierarchie?: SortOrderInput | SortOrder
    categorie?: SortOrderInput | SortOrder
    sve?: SortOrderInput | SortOrder
    telephone_accessible?: SortOrderInput | SortOrder
    application_mobile?: SortOrderInput | SortOrder
    statut_de_diffusion?: SortOrderInput | SortOrder
    information_complementaire?: SortOrderInput | SortOrder
    commentaire_plage_ouverture?: SortOrderInput | SortOrder
    annuaire?: SortOrderInput | SortOrder
    tchat?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    is_selected?: SortOrder
    is_sended?: SortOrder
    _count?: collectivitesCountOrderByAggregateInput
    _avg?: collectivitesAvgOrderByAggregateInput
    _max?: collectivitesMaxOrderByAggregateInput
    _min?: collectivitesMinOrderByAggregateInput
    _sum?: collectivitesSumOrderByAggregateInput
  }

  export type collectivitesScalarWhereWithAggregatesInput = {
    AND?: collectivitesScalarWhereWithAggregatesInput | collectivitesScalarWhereWithAggregatesInput[]
    OR?: collectivitesScalarWhereWithAggregatesInput[]
    NOT?: collectivitesScalarWhereWithAggregatesInput | collectivitesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"collectivites"> | number
    nom?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    type_service_local?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    siret?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    siren?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    code_insee_commune?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    code_postal?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    code_departement?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    nom_departement?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    nom_commune?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    pays?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    continent?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    longitude?: DecimalNullableWithAggregatesFilter<"collectivites"> | Decimal | DecimalJsLike | number | string | null
    latitude?: DecimalNullableWithAggregatesFilter<"collectivites"> | Decimal | DecimalJsLike | number | string | null
    adresse?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    adresse_courriel?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    telephone?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    telecopie?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    site_internet?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    copyright?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    ancien_code_pivot?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    reseau_social?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    texte_reference?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    partenaire?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    itm_identifiant?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    sigle?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    date_modification?: DateTimeNullableWithAggregatesFilter<"collectivites"> | Date | string | null
    date_creation?: DateTimeNullableWithAggregatesFilter<"collectivites"> | Date | string | null
    partenaire_date_modification?: DateTimeNullableWithAggregatesFilter<"collectivites"> | Date | string | null
    mission?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    formulaire_contact?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    version_type?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    version_etat_modification?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    version_source?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    type_organisme?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    type_repertoire?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    plage_ouverture?: JsonNullableWithAggregatesFilter<"collectivites">
    hierarchie?: JsonNullableWithAggregatesFilter<"collectivites">
    categorie?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    sve?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    telephone_accessible?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    application_mobile?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    statut_de_diffusion?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    information_complementaire?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    commentaire_plage_ouverture?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    annuaire?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    tchat?: StringNullableWithAggregatesFilter<"collectivites"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"collectivites"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"collectivites"> | Date | string | null
    is_selected?: BoolWithAggregatesFilter<"collectivites"> | boolean
    is_sended?: BoolWithAggregatesFilter<"collectivites"> | boolean
  }

  export type collectivites_joinWhereInput = {
    AND?: collectivites_joinWhereInput | collectivites_joinWhereInput[]
    OR?: collectivites_joinWhereInput[]
    NOT?: collectivites_joinWhereInput | collectivites_joinWhereInput[]
    code_postal?: StringFilter<"collectivites_join"> | string
    code_departement?: StringNullableFilter<"collectivites_join"> | string | null
  }

  export type collectivites_joinOrderByWithRelationInput = {
    code_postal?: SortOrder
    code_departement?: SortOrderInput | SortOrder
  }

  export type collectivites_joinWhereUniqueInput = Prisma.AtLeast<{
    code_postal?: string
    AND?: collectivites_joinWhereInput | collectivites_joinWhereInput[]
    OR?: collectivites_joinWhereInput[]
    NOT?: collectivites_joinWhereInput | collectivites_joinWhereInput[]
    code_departement?: StringNullableFilter<"collectivites_join"> | string | null
  }, "code_postal">

  export type collectivites_joinOrderByWithAggregationInput = {
    code_postal?: SortOrder
    code_departement?: SortOrderInput | SortOrder
    _count?: collectivites_joinCountOrderByAggregateInput
    _max?: collectivites_joinMaxOrderByAggregateInput
    _min?: collectivites_joinMinOrderByAggregateInput
  }

  export type collectivites_joinScalarWhereWithAggregatesInput = {
    AND?: collectivites_joinScalarWhereWithAggregatesInput | collectivites_joinScalarWhereWithAggregatesInput[]
    OR?: collectivites_joinScalarWhereWithAggregatesInput[]
    NOT?: collectivites_joinScalarWhereWithAggregatesInput | collectivites_joinScalarWhereWithAggregatesInput[]
    code_postal?: StringWithAggregatesFilter<"collectivites_join"> | string
    code_departement?: StringNullableWithAggregatesFilter<"collectivites_join"> | string | null
  }

  export type collectivites_testWhereInput = {
    AND?: collectivites_testWhereInput | collectivites_testWhereInput[]
    OR?: collectivites_testWhereInput[]
    NOT?: collectivites_testWhereInput | collectivites_testWhereInput[]
    id?: IntFilter<"collectivites_test"> | number
    nom?: StringNullableFilter<"collectivites_test"> | string | null
    type_service_local?: StringNullableFilter<"collectivites_test"> | string | null
    siret?: StringNullableFilter<"collectivites_test"> | string | null
    siren?: StringNullableFilter<"collectivites_test"> | string | null
    code_insee_commune?: StringNullableFilter<"collectivites_test"> | string | null
    code_postal?: StringNullableFilter<"collectivites_test"> | string | null
    nom_commune?: StringNullableFilter<"collectivites_test"> | string | null
    pays?: StringNullableFilter<"collectivites_test"> | string | null
    continent?: StringNullableFilter<"collectivites_test"> | string | null
    longitude?: DecimalNullableFilter<"collectivites_test"> | Decimal | DecimalJsLike | number | string | null
    latitude?: DecimalNullableFilter<"collectivites_test"> | Decimal | DecimalJsLike | number | string | null
    adresse?: StringNullableFilter<"collectivites_test"> | string | null
    adresse_courriel?: StringNullableFilter<"collectivites_test"> | string | null
    telephone?: StringNullableFilter<"collectivites_test"> | string | null
    telecopie?: StringNullableFilter<"collectivites_test"> | string | null
    site_internet?: StringNullableFilter<"collectivites_test"> | string | null
    copyright?: StringNullableFilter<"collectivites_test"> | string | null
    ancien_code_pivot?: StringNullableFilter<"collectivites_test"> | string | null
    reseau_social?: StringNullableFilter<"collectivites_test"> | string | null
    texte_reference?: StringNullableFilter<"collectivites_test"> | string | null
    partenaire?: StringNullableFilter<"collectivites_test"> | string | null
    itm_identifiant?: StringNullableFilter<"collectivites_test"> | string | null
    sigle?: StringNullableFilter<"collectivites_test"> | string | null
    date_modification?: DateTimeNullableFilter<"collectivites_test"> | Date | string | null
    date_creation?: DateTimeNullableFilter<"collectivites_test"> | Date | string | null
    partenaire_date_modification?: DateTimeNullableFilter<"collectivites_test"> | Date | string | null
    mission?: StringNullableFilter<"collectivites_test"> | string | null
    formulaire_contact?: StringNullableFilter<"collectivites_test"> | string | null
    version_type?: StringNullableFilter<"collectivites_test"> | string | null
    version_etat_modification?: StringNullableFilter<"collectivites_test"> | string | null
    version_source?: StringNullableFilter<"collectivites_test"> | string | null
    type_organisme?: StringNullableFilter<"collectivites_test"> | string | null
    type_repertoire?: StringNullableFilter<"collectivites_test"> | string | null
    plage_ouverture?: JsonNullableFilter<"collectivites_test">
    hierarchie?: JsonNullableFilter<"collectivites_test">
    categorie?: StringNullableFilter<"collectivites_test"> | string | null
    sve?: StringNullableFilter<"collectivites_test"> | string | null
    telephone_accessible?: StringNullableFilter<"collectivites_test"> | string | null
    application_mobile?: StringNullableFilter<"collectivites_test"> | string | null
    statut_de_diffusion?: StringNullableFilter<"collectivites_test"> | string | null
    information_complementaire?: StringNullableFilter<"collectivites_test"> | string | null
    commentaire_plage_ouverture?: StringNullableFilter<"collectivites_test"> | string | null
    annuaire?: StringNullableFilter<"collectivites_test"> | string | null
    tchat?: StringNullableFilter<"collectivites_test"> | string | null
    createdAt?: DateTimeNullableFilter<"collectivites_test"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"collectivites_test"> | Date | string | null
    is_selected?: BoolFilter<"collectivites_test"> | boolean
    is_sended?: BoolFilter<"collectivites_test"> | boolean
  }

  export type collectivites_testOrderByWithRelationInput = {
    id?: SortOrder
    nom?: SortOrderInput | SortOrder
    type_service_local?: SortOrderInput | SortOrder
    siret?: SortOrderInput | SortOrder
    siren?: SortOrderInput | SortOrder
    code_insee_commune?: SortOrderInput | SortOrder
    code_postal?: SortOrderInput | SortOrder
    nom_commune?: SortOrderInput | SortOrder
    pays?: SortOrderInput | SortOrder
    continent?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    adresse?: SortOrderInput | SortOrder
    adresse_courriel?: SortOrderInput | SortOrder
    telephone?: SortOrderInput | SortOrder
    telecopie?: SortOrderInput | SortOrder
    site_internet?: SortOrderInput | SortOrder
    copyright?: SortOrderInput | SortOrder
    ancien_code_pivot?: SortOrderInput | SortOrder
    reseau_social?: SortOrderInput | SortOrder
    texte_reference?: SortOrderInput | SortOrder
    partenaire?: SortOrderInput | SortOrder
    itm_identifiant?: SortOrderInput | SortOrder
    sigle?: SortOrderInput | SortOrder
    date_modification?: SortOrderInput | SortOrder
    date_creation?: SortOrderInput | SortOrder
    partenaire_date_modification?: SortOrderInput | SortOrder
    mission?: SortOrderInput | SortOrder
    formulaire_contact?: SortOrderInput | SortOrder
    version_type?: SortOrderInput | SortOrder
    version_etat_modification?: SortOrderInput | SortOrder
    version_source?: SortOrderInput | SortOrder
    type_organisme?: SortOrderInput | SortOrder
    type_repertoire?: SortOrderInput | SortOrder
    plage_ouverture?: SortOrderInput | SortOrder
    hierarchie?: SortOrderInput | SortOrder
    categorie?: SortOrderInput | SortOrder
    sve?: SortOrderInput | SortOrder
    telephone_accessible?: SortOrderInput | SortOrder
    application_mobile?: SortOrderInput | SortOrder
    statut_de_diffusion?: SortOrderInput | SortOrder
    information_complementaire?: SortOrderInput | SortOrder
    commentaire_plage_ouverture?: SortOrderInput | SortOrder
    annuaire?: SortOrderInput | SortOrder
    tchat?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    is_selected?: SortOrder
    is_sended?: SortOrder
  }

  export type collectivites_testWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: collectivites_testWhereInput | collectivites_testWhereInput[]
    OR?: collectivites_testWhereInput[]
    NOT?: collectivites_testWhereInput | collectivites_testWhereInput[]
    nom?: StringNullableFilter<"collectivites_test"> | string | null
    type_service_local?: StringNullableFilter<"collectivites_test"> | string | null
    siret?: StringNullableFilter<"collectivites_test"> | string | null
    siren?: StringNullableFilter<"collectivites_test"> | string | null
    code_insee_commune?: StringNullableFilter<"collectivites_test"> | string | null
    code_postal?: StringNullableFilter<"collectivites_test"> | string | null
    nom_commune?: StringNullableFilter<"collectivites_test"> | string | null
    pays?: StringNullableFilter<"collectivites_test"> | string | null
    continent?: StringNullableFilter<"collectivites_test"> | string | null
    longitude?: DecimalNullableFilter<"collectivites_test"> | Decimal | DecimalJsLike | number | string | null
    latitude?: DecimalNullableFilter<"collectivites_test"> | Decimal | DecimalJsLike | number | string | null
    adresse?: StringNullableFilter<"collectivites_test"> | string | null
    adresse_courriel?: StringNullableFilter<"collectivites_test"> | string | null
    telephone?: StringNullableFilter<"collectivites_test"> | string | null
    telecopie?: StringNullableFilter<"collectivites_test"> | string | null
    site_internet?: StringNullableFilter<"collectivites_test"> | string | null
    copyright?: StringNullableFilter<"collectivites_test"> | string | null
    ancien_code_pivot?: StringNullableFilter<"collectivites_test"> | string | null
    reseau_social?: StringNullableFilter<"collectivites_test"> | string | null
    texte_reference?: StringNullableFilter<"collectivites_test"> | string | null
    partenaire?: StringNullableFilter<"collectivites_test"> | string | null
    itm_identifiant?: StringNullableFilter<"collectivites_test"> | string | null
    sigle?: StringNullableFilter<"collectivites_test"> | string | null
    date_modification?: DateTimeNullableFilter<"collectivites_test"> | Date | string | null
    date_creation?: DateTimeNullableFilter<"collectivites_test"> | Date | string | null
    partenaire_date_modification?: DateTimeNullableFilter<"collectivites_test"> | Date | string | null
    mission?: StringNullableFilter<"collectivites_test"> | string | null
    formulaire_contact?: StringNullableFilter<"collectivites_test"> | string | null
    version_type?: StringNullableFilter<"collectivites_test"> | string | null
    version_etat_modification?: StringNullableFilter<"collectivites_test"> | string | null
    version_source?: StringNullableFilter<"collectivites_test"> | string | null
    type_organisme?: StringNullableFilter<"collectivites_test"> | string | null
    type_repertoire?: StringNullableFilter<"collectivites_test"> | string | null
    plage_ouverture?: JsonNullableFilter<"collectivites_test">
    hierarchie?: JsonNullableFilter<"collectivites_test">
    categorie?: StringNullableFilter<"collectivites_test"> | string | null
    sve?: StringNullableFilter<"collectivites_test"> | string | null
    telephone_accessible?: StringNullableFilter<"collectivites_test"> | string | null
    application_mobile?: StringNullableFilter<"collectivites_test"> | string | null
    statut_de_diffusion?: StringNullableFilter<"collectivites_test"> | string | null
    information_complementaire?: StringNullableFilter<"collectivites_test"> | string | null
    commentaire_plage_ouverture?: StringNullableFilter<"collectivites_test"> | string | null
    annuaire?: StringNullableFilter<"collectivites_test"> | string | null
    tchat?: StringNullableFilter<"collectivites_test"> | string | null
    createdAt?: DateTimeNullableFilter<"collectivites_test"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"collectivites_test"> | Date | string | null
    is_selected?: BoolFilter<"collectivites_test"> | boolean
    is_sended?: BoolFilter<"collectivites_test"> | boolean
  }, "id">

  export type collectivites_testOrderByWithAggregationInput = {
    id?: SortOrder
    nom?: SortOrderInput | SortOrder
    type_service_local?: SortOrderInput | SortOrder
    siret?: SortOrderInput | SortOrder
    siren?: SortOrderInput | SortOrder
    code_insee_commune?: SortOrderInput | SortOrder
    code_postal?: SortOrderInput | SortOrder
    nom_commune?: SortOrderInput | SortOrder
    pays?: SortOrderInput | SortOrder
    continent?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    adresse?: SortOrderInput | SortOrder
    adresse_courriel?: SortOrderInput | SortOrder
    telephone?: SortOrderInput | SortOrder
    telecopie?: SortOrderInput | SortOrder
    site_internet?: SortOrderInput | SortOrder
    copyright?: SortOrderInput | SortOrder
    ancien_code_pivot?: SortOrderInput | SortOrder
    reseau_social?: SortOrderInput | SortOrder
    texte_reference?: SortOrderInput | SortOrder
    partenaire?: SortOrderInput | SortOrder
    itm_identifiant?: SortOrderInput | SortOrder
    sigle?: SortOrderInput | SortOrder
    date_modification?: SortOrderInput | SortOrder
    date_creation?: SortOrderInput | SortOrder
    partenaire_date_modification?: SortOrderInput | SortOrder
    mission?: SortOrderInput | SortOrder
    formulaire_contact?: SortOrderInput | SortOrder
    version_type?: SortOrderInput | SortOrder
    version_etat_modification?: SortOrderInput | SortOrder
    version_source?: SortOrderInput | SortOrder
    type_organisme?: SortOrderInput | SortOrder
    type_repertoire?: SortOrderInput | SortOrder
    plage_ouverture?: SortOrderInput | SortOrder
    hierarchie?: SortOrderInput | SortOrder
    categorie?: SortOrderInput | SortOrder
    sve?: SortOrderInput | SortOrder
    telephone_accessible?: SortOrderInput | SortOrder
    application_mobile?: SortOrderInput | SortOrder
    statut_de_diffusion?: SortOrderInput | SortOrder
    information_complementaire?: SortOrderInput | SortOrder
    commentaire_plage_ouverture?: SortOrderInput | SortOrder
    annuaire?: SortOrderInput | SortOrder
    tchat?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    is_selected?: SortOrder
    is_sended?: SortOrder
    _count?: collectivites_testCountOrderByAggregateInput
    _avg?: collectivites_testAvgOrderByAggregateInput
    _max?: collectivites_testMaxOrderByAggregateInput
    _min?: collectivites_testMinOrderByAggregateInput
    _sum?: collectivites_testSumOrderByAggregateInput
  }

  export type collectivites_testScalarWhereWithAggregatesInput = {
    AND?: collectivites_testScalarWhereWithAggregatesInput | collectivites_testScalarWhereWithAggregatesInput[]
    OR?: collectivites_testScalarWhereWithAggregatesInput[]
    NOT?: collectivites_testScalarWhereWithAggregatesInput | collectivites_testScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"collectivites_test"> | number
    nom?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    type_service_local?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    siret?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    siren?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    code_insee_commune?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    code_postal?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    nom_commune?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    pays?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    continent?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    longitude?: DecimalNullableWithAggregatesFilter<"collectivites_test"> | Decimal | DecimalJsLike | number | string | null
    latitude?: DecimalNullableWithAggregatesFilter<"collectivites_test"> | Decimal | DecimalJsLike | number | string | null
    adresse?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    adresse_courriel?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    telephone?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    telecopie?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    site_internet?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    copyright?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    ancien_code_pivot?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    reseau_social?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    texte_reference?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    partenaire?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    itm_identifiant?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    sigle?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    date_modification?: DateTimeNullableWithAggregatesFilter<"collectivites_test"> | Date | string | null
    date_creation?: DateTimeNullableWithAggregatesFilter<"collectivites_test"> | Date | string | null
    partenaire_date_modification?: DateTimeNullableWithAggregatesFilter<"collectivites_test"> | Date | string | null
    mission?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    formulaire_contact?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    version_type?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    version_etat_modification?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    version_source?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    type_organisme?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    type_repertoire?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    plage_ouverture?: JsonNullableWithAggregatesFilter<"collectivites_test">
    hierarchie?: JsonNullableWithAggregatesFilter<"collectivites_test">
    categorie?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    sve?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    telephone_accessible?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    application_mobile?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    statut_de_diffusion?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    information_complementaire?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    commentaire_plage_ouverture?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    annuaire?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    tchat?: StringNullableWithAggregatesFilter<"collectivites_test"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"collectivites_test"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"collectivites_test"> | Date | string | null
    is_selected?: BoolWithAggregatesFilter<"collectivites_test"> | boolean
    is_sended?: BoolWithAggregatesFilter<"collectivites_test"> | boolean
  }

  export type departementWhereInput = {
    AND?: departementWhereInput | departementWhereInput[]
    OR?: departementWhereInput[]
    NOT?: departementWhereInput | departementWhereInput[]
    departement_id?: IntFilter<"departement"> | number
    departement_code?: StringNullableFilter<"departement"> | string | null
    departement_nom?: StringNullableFilter<"departement"> | string | null
    departement_nom_uppercase?: StringNullableFilter<"departement"> | string | null
    departement_slug?: StringNullableFilter<"departement"> | string | null
    departement_nom_soundex?: StringNullableFilter<"departement"> | string | null
    collectivites_rel?: CollectivitesListRelationFilter
  }

  export type departementOrderByWithRelationInput = {
    departement_id?: SortOrder
    departement_code?: SortOrderInput | SortOrder
    departement_nom?: SortOrderInput | SortOrder
    departement_nom_uppercase?: SortOrderInput | SortOrder
    departement_slug?: SortOrderInput | SortOrder
    departement_nom_soundex?: SortOrderInput | SortOrder
    collectivites_rel?: collectivitesOrderByRelationAggregateInput
  }

  export type departementWhereUniqueInput = Prisma.AtLeast<{
    departement_id?: number
    departement_code?: string
    AND?: departementWhereInput | departementWhereInput[]
    OR?: departementWhereInput[]
    NOT?: departementWhereInput | departementWhereInput[]
    departement_nom?: StringNullableFilter<"departement"> | string | null
    departement_nom_uppercase?: StringNullableFilter<"departement"> | string | null
    departement_slug?: StringNullableFilter<"departement"> | string | null
    departement_nom_soundex?: StringNullableFilter<"departement"> | string | null
    collectivites_rel?: CollectivitesListRelationFilter
  }, "departement_id" | "departement_code">

  export type departementOrderByWithAggregationInput = {
    departement_id?: SortOrder
    departement_code?: SortOrderInput | SortOrder
    departement_nom?: SortOrderInput | SortOrder
    departement_nom_uppercase?: SortOrderInput | SortOrder
    departement_slug?: SortOrderInput | SortOrder
    departement_nom_soundex?: SortOrderInput | SortOrder
    _count?: departementCountOrderByAggregateInput
    _avg?: departementAvgOrderByAggregateInput
    _max?: departementMaxOrderByAggregateInput
    _min?: departementMinOrderByAggregateInput
    _sum?: departementSumOrderByAggregateInput
  }

  export type departementScalarWhereWithAggregatesInput = {
    AND?: departementScalarWhereWithAggregatesInput | departementScalarWhereWithAggregatesInput[]
    OR?: departementScalarWhereWithAggregatesInput[]
    NOT?: departementScalarWhereWithAggregatesInput | departementScalarWhereWithAggregatesInput[]
    departement_id?: IntWithAggregatesFilter<"departement"> | number
    departement_code?: StringNullableWithAggregatesFilter<"departement"> | string | null
    departement_nom?: StringNullableWithAggregatesFilter<"departement"> | string | null
    departement_nom_uppercase?: StringNullableWithAggregatesFilter<"departement"> | string | null
    departement_slug?: StringNullableWithAggregatesFilter<"departement"> | string | null
    departement_nom_soundex?: StringNullableWithAggregatesFilter<"departement"> | string | null
  }

  export type serviceWhereInput = {
    AND?: serviceWhereInput | serviceWhereInput[]
    OR?: serviceWhereInput[]
    NOT?: serviceWhereInput | serviceWhereInput[]
    id?: IntFilter<"service"> | number
    nom?: StringNullableFilter<"service"> | string | null
    type_service_local?: StringNullableFilter<"service"> | string | null
    siret?: StringNullableFilter<"service"> | string | null
    siren?: StringNullableFilter<"service"> | string | null
    code_insee_commune?: StringNullableFilter<"service"> | string | null
    code_postal?: StringNullableFilter<"service"> | string | null
    nom_commune?: StringNullableFilter<"service"> | string | null
    pays?: StringNullableFilter<"service"> | string | null
    continent?: StringNullableFilter<"service"> | string | null
    longitude?: DecimalNullableFilter<"service"> | Decimal | DecimalJsLike | number | string | null
    latitude?: DecimalNullableFilter<"service"> | Decimal | DecimalJsLike | number | string | null
    adresse?: StringNullableFilter<"service"> | string | null
    adresse_courriel?: StringNullableFilter<"service"> | string | null
    telephone?: StringNullableFilter<"service"> | string | null
    telecopie?: StringNullableFilter<"service"> | string | null
    site_internet?: StringNullableFilter<"service"> | string | null
    copyright?: StringNullableFilter<"service"> | string | null
    ancien_code_pivot?: StringNullableFilter<"service"> | string | null
    reseau_social?: StringNullableFilter<"service"> | string | null
    texte_reference?: StringNullableFilter<"service"> | string | null
    partenaire?: StringNullableFilter<"service"> | string | null
    itm_identifiant?: StringNullableFilter<"service"> | string | null
    sigle?: StringNullableFilter<"service"> | string | null
    date_modification?: DateTimeNullableFilter<"service"> | Date | string | null
    date_creation?: DateTimeNullableFilter<"service"> | Date | string | null
    partenaire_date_modification?: DateTimeNullableFilter<"service"> | Date | string | null
    mission?: StringNullableFilter<"service"> | string | null
    formulaire_contact?: StringNullableFilter<"service"> | string | null
    version_type?: StringNullableFilter<"service"> | string | null
    version_etat_modification?: StringNullableFilter<"service"> | string | null
    version_source?: StringNullableFilter<"service"> | string | null
    type_organisme?: StringNullableFilter<"service"> | string | null
    type_repertoire?: StringNullableFilter<"service"> | string | null
    plage_ouverture?: JsonNullableFilter<"service">
    hierarchie?: JsonNullableFilter<"service">
    categorie?: StringNullableFilter<"service"> | string | null
    sve?: StringNullableFilter<"service"> | string | null
    telephone_accessible?: StringNullableFilter<"service"> | string | null
    application_mobile?: StringNullableFilter<"service"> | string | null
    statut_de_diffusion?: StringNullableFilter<"service"> | string | null
    information_complementaire?: StringNullableFilter<"service"> | string | null
    commentaire_plage_ouverture?: StringNullableFilter<"service"> | string | null
    annuaire?: StringNullableFilter<"service"> | string | null
    tchat?: StringNullableFilter<"service"> | string | null
  }

  export type serviceOrderByWithRelationInput = {
    id?: SortOrder
    nom?: SortOrderInput | SortOrder
    type_service_local?: SortOrderInput | SortOrder
    siret?: SortOrderInput | SortOrder
    siren?: SortOrderInput | SortOrder
    code_insee_commune?: SortOrderInput | SortOrder
    code_postal?: SortOrderInput | SortOrder
    nom_commune?: SortOrderInput | SortOrder
    pays?: SortOrderInput | SortOrder
    continent?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    adresse?: SortOrderInput | SortOrder
    adresse_courriel?: SortOrderInput | SortOrder
    telephone?: SortOrderInput | SortOrder
    telecopie?: SortOrderInput | SortOrder
    site_internet?: SortOrderInput | SortOrder
    copyright?: SortOrderInput | SortOrder
    ancien_code_pivot?: SortOrderInput | SortOrder
    reseau_social?: SortOrderInput | SortOrder
    texte_reference?: SortOrderInput | SortOrder
    partenaire?: SortOrderInput | SortOrder
    itm_identifiant?: SortOrderInput | SortOrder
    sigle?: SortOrderInput | SortOrder
    date_modification?: SortOrderInput | SortOrder
    date_creation?: SortOrderInput | SortOrder
    partenaire_date_modification?: SortOrderInput | SortOrder
    mission?: SortOrderInput | SortOrder
    formulaire_contact?: SortOrderInput | SortOrder
    version_type?: SortOrderInput | SortOrder
    version_etat_modification?: SortOrderInput | SortOrder
    version_source?: SortOrderInput | SortOrder
    type_organisme?: SortOrderInput | SortOrder
    type_repertoire?: SortOrderInput | SortOrder
    plage_ouverture?: SortOrderInput | SortOrder
    hierarchie?: SortOrderInput | SortOrder
    categorie?: SortOrderInput | SortOrder
    sve?: SortOrderInput | SortOrder
    telephone_accessible?: SortOrderInput | SortOrder
    application_mobile?: SortOrderInput | SortOrder
    statut_de_diffusion?: SortOrderInput | SortOrder
    information_complementaire?: SortOrderInput | SortOrder
    commentaire_plage_ouverture?: SortOrderInput | SortOrder
    annuaire?: SortOrderInput | SortOrder
    tchat?: SortOrderInput | SortOrder
  }

  export type serviceWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: serviceWhereInput | serviceWhereInput[]
    OR?: serviceWhereInput[]
    NOT?: serviceWhereInput | serviceWhereInput[]
    nom?: StringNullableFilter<"service"> | string | null
    type_service_local?: StringNullableFilter<"service"> | string | null
    siret?: StringNullableFilter<"service"> | string | null
    siren?: StringNullableFilter<"service"> | string | null
    code_insee_commune?: StringNullableFilter<"service"> | string | null
    code_postal?: StringNullableFilter<"service"> | string | null
    nom_commune?: StringNullableFilter<"service"> | string | null
    pays?: StringNullableFilter<"service"> | string | null
    continent?: StringNullableFilter<"service"> | string | null
    longitude?: DecimalNullableFilter<"service"> | Decimal | DecimalJsLike | number | string | null
    latitude?: DecimalNullableFilter<"service"> | Decimal | DecimalJsLike | number | string | null
    adresse?: StringNullableFilter<"service"> | string | null
    adresse_courriel?: StringNullableFilter<"service"> | string | null
    telephone?: StringNullableFilter<"service"> | string | null
    telecopie?: StringNullableFilter<"service"> | string | null
    site_internet?: StringNullableFilter<"service"> | string | null
    copyright?: StringNullableFilter<"service"> | string | null
    ancien_code_pivot?: StringNullableFilter<"service"> | string | null
    reseau_social?: StringNullableFilter<"service"> | string | null
    texte_reference?: StringNullableFilter<"service"> | string | null
    partenaire?: StringNullableFilter<"service"> | string | null
    itm_identifiant?: StringNullableFilter<"service"> | string | null
    sigle?: StringNullableFilter<"service"> | string | null
    date_modification?: DateTimeNullableFilter<"service"> | Date | string | null
    date_creation?: DateTimeNullableFilter<"service"> | Date | string | null
    partenaire_date_modification?: DateTimeNullableFilter<"service"> | Date | string | null
    mission?: StringNullableFilter<"service"> | string | null
    formulaire_contact?: StringNullableFilter<"service"> | string | null
    version_type?: StringNullableFilter<"service"> | string | null
    version_etat_modification?: StringNullableFilter<"service"> | string | null
    version_source?: StringNullableFilter<"service"> | string | null
    type_organisme?: StringNullableFilter<"service"> | string | null
    type_repertoire?: StringNullableFilter<"service"> | string | null
    plage_ouverture?: JsonNullableFilter<"service">
    hierarchie?: JsonNullableFilter<"service">
    categorie?: StringNullableFilter<"service"> | string | null
    sve?: StringNullableFilter<"service"> | string | null
    telephone_accessible?: StringNullableFilter<"service"> | string | null
    application_mobile?: StringNullableFilter<"service"> | string | null
    statut_de_diffusion?: StringNullableFilter<"service"> | string | null
    information_complementaire?: StringNullableFilter<"service"> | string | null
    commentaire_plage_ouverture?: StringNullableFilter<"service"> | string | null
    annuaire?: StringNullableFilter<"service"> | string | null
    tchat?: StringNullableFilter<"service"> | string | null
  }, "id">

  export type serviceOrderByWithAggregationInput = {
    id?: SortOrder
    nom?: SortOrderInput | SortOrder
    type_service_local?: SortOrderInput | SortOrder
    siret?: SortOrderInput | SortOrder
    siren?: SortOrderInput | SortOrder
    code_insee_commune?: SortOrderInput | SortOrder
    code_postal?: SortOrderInput | SortOrder
    nom_commune?: SortOrderInput | SortOrder
    pays?: SortOrderInput | SortOrder
    continent?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    adresse?: SortOrderInput | SortOrder
    adresse_courriel?: SortOrderInput | SortOrder
    telephone?: SortOrderInput | SortOrder
    telecopie?: SortOrderInput | SortOrder
    site_internet?: SortOrderInput | SortOrder
    copyright?: SortOrderInput | SortOrder
    ancien_code_pivot?: SortOrderInput | SortOrder
    reseau_social?: SortOrderInput | SortOrder
    texte_reference?: SortOrderInput | SortOrder
    partenaire?: SortOrderInput | SortOrder
    itm_identifiant?: SortOrderInput | SortOrder
    sigle?: SortOrderInput | SortOrder
    date_modification?: SortOrderInput | SortOrder
    date_creation?: SortOrderInput | SortOrder
    partenaire_date_modification?: SortOrderInput | SortOrder
    mission?: SortOrderInput | SortOrder
    formulaire_contact?: SortOrderInput | SortOrder
    version_type?: SortOrderInput | SortOrder
    version_etat_modification?: SortOrderInput | SortOrder
    version_source?: SortOrderInput | SortOrder
    type_organisme?: SortOrderInput | SortOrder
    type_repertoire?: SortOrderInput | SortOrder
    plage_ouverture?: SortOrderInput | SortOrder
    hierarchie?: SortOrderInput | SortOrder
    categorie?: SortOrderInput | SortOrder
    sve?: SortOrderInput | SortOrder
    telephone_accessible?: SortOrderInput | SortOrder
    application_mobile?: SortOrderInput | SortOrder
    statut_de_diffusion?: SortOrderInput | SortOrder
    information_complementaire?: SortOrderInput | SortOrder
    commentaire_plage_ouverture?: SortOrderInput | SortOrder
    annuaire?: SortOrderInput | SortOrder
    tchat?: SortOrderInput | SortOrder
    _count?: serviceCountOrderByAggregateInput
    _avg?: serviceAvgOrderByAggregateInput
    _max?: serviceMaxOrderByAggregateInput
    _min?: serviceMinOrderByAggregateInput
    _sum?: serviceSumOrderByAggregateInput
  }

  export type serviceScalarWhereWithAggregatesInput = {
    AND?: serviceScalarWhereWithAggregatesInput | serviceScalarWhereWithAggregatesInput[]
    OR?: serviceScalarWhereWithAggregatesInput[]
    NOT?: serviceScalarWhereWithAggregatesInput | serviceScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"service"> | number
    nom?: StringNullableWithAggregatesFilter<"service"> | string | null
    type_service_local?: StringNullableWithAggregatesFilter<"service"> | string | null
    siret?: StringNullableWithAggregatesFilter<"service"> | string | null
    siren?: StringNullableWithAggregatesFilter<"service"> | string | null
    code_insee_commune?: StringNullableWithAggregatesFilter<"service"> | string | null
    code_postal?: StringNullableWithAggregatesFilter<"service"> | string | null
    nom_commune?: StringNullableWithAggregatesFilter<"service"> | string | null
    pays?: StringNullableWithAggregatesFilter<"service"> | string | null
    continent?: StringNullableWithAggregatesFilter<"service"> | string | null
    longitude?: DecimalNullableWithAggregatesFilter<"service"> | Decimal | DecimalJsLike | number | string | null
    latitude?: DecimalNullableWithAggregatesFilter<"service"> | Decimal | DecimalJsLike | number | string | null
    adresse?: StringNullableWithAggregatesFilter<"service"> | string | null
    adresse_courriel?: StringNullableWithAggregatesFilter<"service"> | string | null
    telephone?: StringNullableWithAggregatesFilter<"service"> | string | null
    telecopie?: StringNullableWithAggregatesFilter<"service"> | string | null
    site_internet?: StringNullableWithAggregatesFilter<"service"> | string | null
    copyright?: StringNullableWithAggregatesFilter<"service"> | string | null
    ancien_code_pivot?: StringNullableWithAggregatesFilter<"service"> | string | null
    reseau_social?: StringNullableWithAggregatesFilter<"service"> | string | null
    texte_reference?: StringNullableWithAggregatesFilter<"service"> | string | null
    partenaire?: StringNullableWithAggregatesFilter<"service"> | string | null
    itm_identifiant?: StringNullableWithAggregatesFilter<"service"> | string | null
    sigle?: StringNullableWithAggregatesFilter<"service"> | string | null
    date_modification?: DateTimeNullableWithAggregatesFilter<"service"> | Date | string | null
    date_creation?: DateTimeNullableWithAggregatesFilter<"service"> | Date | string | null
    partenaire_date_modification?: DateTimeNullableWithAggregatesFilter<"service"> | Date | string | null
    mission?: StringNullableWithAggregatesFilter<"service"> | string | null
    formulaire_contact?: StringNullableWithAggregatesFilter<"service"> | string | null
    version_type?: StringNullableWithAggregatesFilter<"service"> | string | null
    version_etat_modification?: StringNullableWithAggregatesFilter<"service"> | string | null
    version_source?: StringNullableWithAggregatesFilter<"service"> | string | null
    type_organisme?: StringNullableWithAggregatesFilter<"service"> | string | null
    type_repertoire?: StringNullableWithAggregatesFilter<"service"> | string | null
    plage_ouverture?: JsonNullableWithAggregatesFilter<"service">
    hierarchie?: JsonNullableWithAggregatesFilter<"service">
    categorie?: StringNullableWithAggregatesFilter<"service"> | string | null
    sve?: StringNullableWithAggregatesFilter<"service"> | string | null
    telephone_accessible?: StringNullableWithAggregatesFilter<"service"> | string | null
    application_mobile?: StringNullableWithAggregatesFilter<"service"> | string | null
    statut_de_diffusion?: StringNullableWithAggregatesFilter<"service"> | string | null
    information_complementaire?: StringNullableWithAggregatesFilter<"service"> | string | null
    commentaire_plage_ouverture?: StringNullableWithAggregatesFilter<"service"> | string | null
    annuaire?: StringNullableWithAggregatesFilter<"service"> | string | null
    tchat?: StringNullableWithAggregatesFilter<"service"> | string | null
  }

  export type service2WhereInput = {
    AND?: service2WhereInput | service2WhereInput[]
    OR?: service2WhereInput[]
    NOT?: service2WhereInput | service2WhereInput[]
    id?: IntFilter<"service2"> | number
    nom?: StringNullableFilter<"service2"> | string | null
    type_service_local?: StringNullableFilter<"service2"> | string | null
    siret?: StringNullableFilter<"service2"> | string | null
    siren?: StringNullableFilter<"service2"> | string | null
    code_insee_commune?: StringNullableFilter<"service2"> | string | null
    code_postal?: StringNullableFilter<"service2"> | string | null
    nom_commune?: StringNullableFilter<"service2"> | string | null
    pays?: StringNullableFilter<"service2"> | string | null
    continent?: StringNullableFilter<"service2"> | string | null
    longitude?: DecimalNullableFilter<"service2"> | Decimal | DecimalJsLike | number | string | null
    latitude?: DecimalNullableFilter<"service2"> | Decimal | DecimalJsLike | number | string | null
    adresse?: StringNullableFilter<"service2"> | string | null
    adresse_courriel?: StringNullableFilter<"service2"> | string | null
    telephone?: StringNullableFilter<"service2"> | string | null
    telecopie?: StringNullableFilter<"service2"> | string | null
    site_internet?: StringNullableFilter<"service2"> | string | null
    copyright?: StringNullableFilter<"service2"> | string | null
    ancien_code_pivot?: StringNullableFilter<"service2"> | string | null
    reseau_social?: StringNullableFilter<"service2"> | string | null
    texte_reference?: StringNullableFilter<"service2"> | string | null
    partenaire?: StringNullableFilter<"service2"> | string | null
    itm_identifiant?: StringNullableFilter<"service2"> | string | null
    sigle?: StringNullableFilter<"service2"> | string | null
    date_modification?: DateTimeNullableFilter<"service2"> | Date | string | null
    date_creation?: DateTimeNullableFilter<"service2"> | Date | string | null
    partenaire_date_modification?: DateTimeNullableFilter<"service2"> | Date | string | null
    mission?: StringNullableFilter<"service2"> | string | null
    formulaire_contact?: StringNullableFilter<"service2"> | string | null
    version_type?: StringNullableFilter<"service2"> | string | null
    version_etat_modification?: StringNullableFilter<"service2"> | string | null
    version_source?: StringNullableFilter<"service2"> | string | null
    type_organisme?: StringNullableFilter<"service2"> | string | null
    type_repertoire?: StringNullableFilter<"service2"> | string | null
    plage_ouverture?: JsonNullableFilter<"service2">
    hierarchie?: JsonNullableFilter<"service2">
    categorie?: StringNullableFilter<"service2"> | string | null
    sve?: StringNullableFilter<"service2"> | string | null
    telephone_accessible?: StringNullableFilter<"service2"> | string | null
    application_mobile?: StringNullableFilter<"service2"> | string | null
    statut_de_diffusion?: StringNullableFilter<"service2"> | string | null
    information_complementaire?: StringNullableFilter<"service2"> | string | null
    commentaire_plage_ouverture?: StringNullableFilter<"service2"> | string | null
    annuaire?: StringNullableFilter<"service2"> | string | null
    tchat?: StringNullableFilter<"service2"> | string | null
  }

  export type service2OrderByWithRelationInput = {
    id?: SortOrder
    nom?: SortOrderInput | SortOrder
    type_service_local?: SortOrderInput | SortOrder
    siret?: SortOrderInput | SortOrder
    siren?: SortOrderInput | SortOrder
    code_insee_commune?: SortOrderInput | SortOrder
    code_postal?: SortOrderInput | SortOrder
    nom_commune?: SortOrderInput | SortOrder
    pays?: SortOrderInput | SortOrder
    continent?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    adresse?: SortOrderInput | SortOrder
    adresse_courriel?: SortOrderInput | SortOrder
    telephone?: SortOrderInput | SortOrder
    telecopie?: SortOrderInput | SortOrder
    site_internet?: SortOrderInput | SortOrder
    copyright?: SortOrderInput | SortOrder
    ancien_code_pivot?: SortOrderInput | SortOrder
    reseau_social?: SortOrderInput | SortOrder
    texte_reference?: SortOrderInput | SortOrder
    partenaire?: SortOrderInput | SortOrder
    itm_identifiant?: SortOrderInput | SortOrder
    sigle?: SortOrderInput | SortOrder
    date_modification?: SortOrderInput | SortOrder
    date_creation?: SortOrderInput | SortOrder
    partenaire_date_modification?: SortOrderInput | SortOrder
    mission?: SortOrderInput | SortOrder
    formulaire_contact?: SortOrderInput | SortOrder
    version_type?: SortOrderInput | SortOrder
    version_etat_modification?: SortOrderInput | SortOrder
    version_source?: SortOrderInput | SortOrder
    type_organisme?: SortOrderInput | SortOrder
    type_repertoire?: SortOrderInput | SortOrder
    plage_ouverture?: SortOrderInput | SortOrder
    hierarchie?: SortOrderInput | SortOrder
    categorie?: SortOrderInput | SortOrder
    sve?: SortOrderInput | SortOrder
    telephone_accessible?: SortOrderInput | SortOrder
    application_mobile?: SortOrderInput | SortOrder
    statut_de_diffusion?: SortOrderInput | SortOrder
    information_complementaire?: SortOrderInput | SortOrder
    commentaire_plage_ouverture?: SortOrderInput | SortOrder
    annuaire?: SortOrderInput | SortOrder
    tchat?: SortOrderInput | SortOrder
  }

  export type service2WhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: service2WhereInput | service2WhereInput[]
    OR?: service2WhereInput[]
    NOT?: service2WhereInput | service2WhereInput[]
    nom?: StringNullableFilter<"service2"> | string | null
    type_service_local?: StringNullableFilter<"service2"> | string | null
    siret?: StringNullableFilter<"service2"> | string | null
    siren?: StringNullableFilter<"service2"> | string | null
    code_insee_commune?: StringNullableFilter<"service2"> | string | null
    code_postal?: StringNullableFilter<"service2"> | string | null
    nom_commune?: StringNullableFilter<"service2"> | string | null
    pays?: StringNullableFilter<"service2"> | string | null
    continent?: StringNullableFilter<"service2"> | string | null
    longitude?: DecimalNullableFilter<"service2"> | Decimal | DecimalJsLike | number | string | null
    latitude?: DecimalNullableFilter<"service2"> | Decimal | DecimalJsLike | number | string | null
    adresse?: StringNullableFilter<"service2"> | string | null
    adresse_courriel?: StringNullableFilter<"service2"> | string | null
    telephone?: StringNullableFilter<"service2"> | string | null
    telecopie?: StringNullableFilter<"service2"> | string | null
    site_internet?: StringNullableFilter<"service2"> | string | null
    copyright?: StringNullableFilter<"service2"> | string | null
    ancien_code_pivot?: StringNullableFilter<"service2"> | string | null
    reseau_social?: StringNullableFilter<"service2"> | string | null
    texte_reference?: StringNullableFilter<"service2"> | string | null
    partenaire?: StringNullableFilter<"service2"> | string | null
    itm_identifiant?: StringNullableFilter<"service2"> | string | null
    sigle?: StringNullableFilter<"service2"> | string | null
    date_modification?: DateTimeNullableFilter<"service2"> | Date | string | null
    date_creation?: DateTimeNullableFilter<"service2"> | Date | string | null
    partenaire_date_modification?: DateTimeNullableFilter<"service2"> | Date | string | null
    mission?: StringNullableFilter<"service2"> | string | null
    formulaire_contact?: StringNullableFilter<"service2"> | string | null
    version_type?: StringNullableFilter<"service2"> | string | null
    version_etat_modification?: StringNullableFilter<"service2"> | string | null
    version_source?: StringNullableFilter<"service2"> | string | null
    type_organisme?: StringNullableFilter<"service2"> | string | null
    type_repertoire?: StringNullableFilter<"service2"> | string | null
    plage_ouverture?: JsonNullableFilter<"service2">
    hierarchie?: JsonNullableFilter<"service2">
    categorie?: StringNullableFilter<"service2"> | string | null
    sve?: StringNullableFilter<"service2"> | string | null
    telephone_accessible?: StringNullableFilter<"service2"> | string | null
    application_mobile?: StringNullableFilter<"service2"> | string | null
    statut_de_diffusion?: StringNullableFilter<"service2"> | string | null
    information_complementaire?: StringNullableFilter<"service2"> | string | null
    commentaire_plage_ouverture?: StringNullableFilter<"service2"> | string | null
    annuaire?: StringNullableFilter<"service2"> | string | null
    tchat?: StringNullableFilter<"service2"> | string | null
  }, "id">

  export type service2OrderByWithAggregationInput = {
    id?: SortOrder
    nom?: SortOrderInput | SortOrder
    type_service_local?: SortOrderInput | SortOrder
    siret?: SortOrderInput | SortOrder
    siren?: SortOrderInput | SortOrder
    code_insee_commune?: SortOrderInput | SortOrder
    code_postal?: SortOrderInput | SortOrder
    nom_commune?: SortOrderInput | SortOrder
    pays?: SortOrderInput | SortOrder
    continent?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    adresse?: SortOrderInput | SortOrder
    adresse_courriel?: SortOrderInput | SortOrder
    telephone?: SortOrderInput | SortOrder
    telecopie?: SortOrderInput | SortOrder
    site_internet?: SortOrderInput | SortOrder
    copyright?: SortOrderInput | SortOrder
    ancien_code_pivot?: SortOrderInput | SortOrder
    reseau_social?: SortOrderInput | SortOrder
    texte_reference?: SortOrderInput | SortOrder
    partenaire?: SortOrderInput | SortOrder
    itm_identifiant?: SortOrderInput | SortOrder
    sigle?: SortOrderInput | SortOrder
    date_modification?: SortOrderInput | SortOrder
    date_creation?: SortOrderInput | SortOrder
    partenaire_date_modification?: SortOrderInput | SortOrder
    mission?: SortOrderInput | SortOrder
    formulaire_contact?: SortOrderInput | SortOrder
    version_type?: SortOrderInput | SortOrder
    version_etat_modification?: SortOrderInput | SortOrder
    version_source?: SortOrderInput | SortOrder
    type_organisme?: SortOrderInput | SortOrder
    type_repertoire?: SortOrderInput | SortOrder
    plage_ouverture?: SortOrderInput | SortOrder
    hierarchie?: SortOrderInput | SortOrder
    categorie?: SortOrderInput | SortOrder
    sve?: SortOrderInput | SortOrder
    telephone_accessible?: SortOrderInput | SortOrder
    application_mobile?: SortOrderInput | SortOrder
    statut_de_diffusion?: SortOrderInput | SortOrder
    information_complementaire?: SortOrderInput | SortOrder
    commentaire_plage_ouverture?: SortOrderInput | SortOrder
    annuaire?: SortOrderInput | SortOrder
    tchat?: SortOrderInput | SortOrder
    _count?: service2CountOrderByAggregateInput
    _avg?: service2AvgOrderByAggregateInput
    _max?: service2MaxOrderByAggregateInput
    _min?: service2MinOrderByAggregateInput
    _sum?: service2SumOrderByAggregateInput
  }

  export type service2ScalarWhereWithAggregatesInput = {
    AND?: service2ScalarWhereWithAggregatesInput | service2ScalarWhereWithAggregatesInput[]
    OR?: service2ScalarWhereWithAggregatesInput[]
    NOT?: service2ScalarWhereWithAggregatesInput | service2ScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"service2"> | number
    nom?: StringNullableWithAggregatesFilter<"service2"> | string | null
    type_service_local?: StringNullableWithAggregatesFilter<"service2"> | string | null
    siret?: StringNullableWithAggregatesFilter<"service2"> | string | null
    siren?: StringNullableWithAggregatesFilter<"service2"> | string | null
    code_insee_commune?: StringNullableWithAggregatesFilter<"service2"> | string | null
    code_postal?: StringNullableWithAggregatesFilter<"service2"> | string | null
    nom_commune?: StringNullableWithAggregatesFilter<"service2"> | string | null
    pays?: StringNullableWithAggregatesFilter<"service2"> | string | null
    continent?: StringNullableWithAggregatesFilter<"service2"> | string | null
    longitude?: DecimalNullableWithAggregatesFilter<"service2"> | Decimal | DecimalJsLike | number | string | null
    latitude?: DecimalNullableWithAggregatesFilter<"service2"> | Decimal | DecimalJsLike | number | string | null
    adresse?: StringNullableWithAggregatesFilter<"service2"> | string | null
    adresse_courriel?: StringNullableWithAggregatesFilter<"service2"> | string | null
    telephone?: StringNullableWithAggregatesFilter<"service2"> | string | null
    telecopie?: StringNullableWithAggregatesFilter<"service2"> | string | null
    site_internet?: StringNullableWithAggregatesFilter<"service2"> | string | null
    copyright?: StringNullableWithAggregatesFilter<"service2"> | string | null
    ancien_code_pivot?: StringNullableWithAggregatesFilter<"service2"> | string | null
    reseau_social?: StringNullableWithAggregatesFilter<"service2"> | string | null
    texte_reference?: StringNullableWithAggregatesFilter<"service2"> | string | null
    partenaire?: StringNullableWithAggregatesFilter<"service2"> | string | null
    itm_identifiant?: StringNullableWithAggregatesFilter<"service2"> | string | null
    sigle?: StringNullableWithAggregatesFilter<"service2"> | string | null
    date_modification?: DateTimeNullableWithAggregatesFilter<"service2"> | Date | string | null
    date_creation?: DateTimeNullableWithAggregatesFilter<"service2"> | Date | string | null
    partenaire_date_modification?: DateTimeNullableWithAggregatesFilter<"service2"> | Date | string | null
    mission?: StringNullableWithAggregatesFilter<"service2"> | string | null
    formulaire_contact?: StringNullableWithAggregatesFilter<"service2"> | string | null
    version_type?: StringNullableWithAggregatesFilter<"service2"> | string | null
    version_etat_modification?: StringNullableWithAggregatesFilter<"service2"> | string | null
    version_source?: StringNullableWithAggregatesFilter<"service2"> | string | null
    type_organisme?: StringNullableWithAggregatesFilter<"service2"> | string | null
    type_repertoire?: StringNullableWithAggregatesFilter<"service2"> | string | null
    plage_ouverture?: JsonNullableWithAggregatesFilter<"service2">
    hierarchie?: JsonNullableWithAggregatesFilter<"service2">
    categorie?: StringNullableWithAggregatesFilter<"service2"> | string | null
    sve?: StringNullableWithAggregatesFilter<"service2"> | string | null
    telephone_accessible?: StringNullableWithAggregatesFilter<"service2"> | string | null
    application_mobile?: StringNullableWithAggregatesFilter<"service2"> | string | null
    statut_de_diffusion?: StringNullableWithAggregatesFilter<"service2"> | string | null
    information_complementaire?: StringNullableWithAggregatesFilter<"service2"> | string | null
    commentaire_plage_ouverture?: StringNullableWithAggregatesFilter<"service2"> | string | null
    annuaire?: StringNullableWithAggregatesFilter<"service2"> | string | null
    tchat?: StringNullableWithAggregatesFilter<"service2"> | string | null
  }

  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    id?: IntFilter<"users"> | number
    name?: StringNullableFilter<"users"> | string | null
    email?: StringNullableFilter<"users"> | string | null
    createdAt?: DateTimeFilter<"users"> | Date | string
    updatedAt?: DateTimeFilter<"users"> | Date | string
  }

  export type usersOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    name?: StringNullableFilter<"users"> | string | null
    email?: StringNullableFilter<"users"> | string | null
    createdAt?: DateTimeFilter<"users"> | Date | string
    updatedAt?: DateTimeFilter<"users"> | Date | string
  }, "id">

  export type usersOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: usersCountOrderByAggregateInput
    _avg?: usersAvgOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
    _sum?: usersSumOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"users"> | number
    name?: StringNullableWithAggregatesFilter<"users"> | string | null
    email?: StringNullableWithAggregatesFilter<"users"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"users"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"users"> | Date | string
  }

  export type collectivitesCreateInput = {
    nom?: string | null
    type_service_local?: string | null
    siret?: string | null
    siren?: string | null
    code_insee_commune?: string | null
    code_postal?: string | null
    nom_departement?: string | null
    nom_commune?: string | null
    pays?: string | null
    continent?: string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    adresse?: string | null
    adresse_courriel?: string | null
    telephone?: string | null
    telecopie?: string | null
    site_internet?: string | null
    copyright?: string | null
    ancien_code_pivot?: string | null
    reseau_social?: string | null
    texte_reference?: string | null
    partenaire?: string | null
    itm_identifiant?: string | null
    sigle?: string | null
    date_modification?: Date | string | null
    date_creation?: Date | string | null
    partenaire_date_modification?: Date | string | null
    mission?: string | null
    formulaire_contact?: string | null
    version_type?: string | null
    version_etat_modification?: string | null
    version_source?: string | null
    type_organisme?: string | null
    type_repertoire?: string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: string | null
    sve?: string | null
    telephone_accessible?: string | null
    application_mobile?: string | null
    statut_de_diffusion?: string | null
    information_complementaire?: string | null
    commentaire_plage_ouverture?: string | null
    annuaire?: string | null
    tchat?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    is_selected?: boolean
    is_sended?: boolean
    departement_id?: departementCreateNestedOneWithoutCollectivites_relInput
  }

  export type collectivitesUncheckedCreateInput = {
    id?: number
    nom?: string | null
    type_service_local?: string | null
    siret?: string | null
    siren?: string | null
    code_insee_commune?: string | null
    code_postal?: string | null
    code_departement?: string | null
    nom_departement?: string | null
    nom_commune?: string | null
    pays?: string | null
    continent?: string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    adresse?: string | null
    adresse_courriel?: string | null
    telephone?: string | null
    telecopie?: string | null
    site_internet?: string | null
    copyright?: string | null
    ancien_code_pivot?: string | null
    reseau_social?: string | null
    texte_reference?: string | null
    partenaire?: string | null
    itm_identifiant?: string | null
    sigle?: string | null
    date_modification?: Date | string | null
    date_creation?: Date | string | null
    partenaire_date_modification?: Date | string | null
    mission?: string | null
    formulaire_contact?: string | null
    version_type?: string | null
    version_etat_modification?: string | null
    version_source?: string | null
    type_organisme?: string | null
    type_repertoire?: string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: string | null
    sve?: string | null
    telephone_accessible?: string | null
    application_mobile?: string | null
    statut_de_diffusion?: string | null
    information_complementaire?: string | null
    commentaire_plage_ouverture?: string | null
    annuaire?: string | null
    tchat?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    is_selected?: boolean
    is_sended?: boolean
  }

  export type collectivitesUpdateInput = {
    nom?: NullableStringFieldUpdateOperationsInput | string | null
    type_service_local?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    siren?: NullableStringFieldUpdateOperationsInput | string | null
    code_insee_commune?: NullableStringFieldUpdateOperationsInput | string | null
    code_postal?: NullableStringFieldUpdateOperationsInput | string | null
    nom_departement?: NullableStringFieldUpdateOperationsInput | string | null
    nom_commune?: NullableStringFieldUpdateOperationsInput | string | null
    pays?: NullableStringFieldUpdateOperationsInput | string | null
    continent?: NullableStringFieldUpdateOperationsInput | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    adresse_courriel?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    telecopie?: NullableStringFieldUpdateOperationsInput | string | null
    site_internet?: NullableStringFieldUpdateOperationsInput | string | null
    copyright?: NullableStringFieldUpdateOperationsInput | string | null
    ancien_code_pivot?: NullableStringFieldUpdateOperationsInput | string | null
    reseau_social?: NullableStringFieldUpdateOperationsInput | string | null
    texte_reference?: NullableStringFieldUpdateOperationsInput | string | null
    partenaire?: NullableStringFieldUpdateOperationsInput | string | null
    itm_identifiant?: NullableStringFieldUpdateOperationsInput | string | null
    sigle?: NullableStringFieldUpdateOperationsInput | string | null
    date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_creation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    partenaire_date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    formulaire_contact?: NullableStringFieldUpdateOperationsInput | string | null
    version_type?: NullableStringFieldUpdateOperationsInput | string | null
    version_etat_modification?: NullableStringFieldUpdateOperationsInput | string | null
    version_source?: NullableStringFieldUpdateOperationsInput | string | null
    type_organisme?: NullableStringFieldUpdateOperationsInput | string | null
    type_repertoire?: NullableStringFieldUpdateOperationsInput | string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: NullableStringFieldUpdateOperationsInput | string | null
    sve?: NullableStringFieldUpdateOperationsInput | string | null
    telephone_accessible?: NullableStringFieldUpdateOperationsInput | string | null
    application_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    statut_de_diffusion?: NullableStringFieldUpdateOperationsInput | string | null
    information_complementaire?: NullableStringFieldUpdateOperationsInput | string | null
    commentaire_plage_ouverture?: NullableStringFieldUpdateOperationsInput | string | null
    annuaire?: NullableStringFieldUpdateOperationsInput | string | null
    tchat?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_selected?: BoolFieldUpdateOperationsInput | boolean
    is_sended?: BoolFieldUpdateOperationsInput | boolean
    departement_id?: departementUpdateOneWithoutCollectivites_relNestedInput
  }

  export type collectivitesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nom?: NullableStringFieldUpdateOperationsInput | string | null
    type_service_local?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    siren?: NullableStringFieldUpdateOperationsInput | string | null
    code_insee_commune?: NullableStringFieldUpdateOperationsInput | string | null
    code_postal?: NullableStringFieldUpdateOperationsInput | string | null
    code_departement?: NullableStringFieldUpdateOperationsInput | string | null
    nom_departement?: NullableStringFieldUpdateOperationsInput | string | null
    nom_commune?: NullableStringFieldUpdateOperationsInput | string | null
    pays?: NullableStringFieldUpdateOperationsInput | string | null
    continent?: NullableStringFieldUpdateOperationsInput | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    adresse_courriel?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    telecopie?: NullableStringFieldUpdateOperationsInput | string | null
    site_internet?: NullableStringFieldUpdateOperationsInput | string | null
    copyright?: NullableStringFieldUpdateOperationsInput | string | null
    ancien_code_pivot?: NullableStringFieldUpdateOperationsInput | string | null
    reseau_social?: NullableStringFieldUpdateOperationsInput | string | null
    texte_reference?: NullableStringFieldUpdateOperationsInput | string | null
    partenaire?: NullableStringFieldUpdateOperationsInput | string | null
    itm_identifiant?: NullableStringFieldUpdateOperationsInput | string | null
    sigle?: NullableStringFieldUpdateOperationsInput | string | null
    date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_creation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    partenaire_date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    formulaire_contact?: NullableStringFieldUpdateOperationsInput | string | null
    version_type?: NullableStringFieldUpdateOperationsInput | string | null
    version_etat_modification?: NullableStringFieldUpdateOperationsInput | string | null
    version_source?: NullableStringFieldUpdateOperationsInput | string | null
    type_organisme?: NullableStringFieldUpdateOperationsInput | string | null
    type_repertoire?: NullableStringFieldUpdateOperationsInput | string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: NullableStringFieldUpdateOperationsInput | string | null
    sve?: NullableStringFieldUpdateOperationsInput | string | null
    telephone_accessible?: NullableStringFieldUpdateOperationsInput | string | null
    application_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    statut_de_diffusion?: NullableStringFieldUpdateOperationsInput | string | null
    information_complementaire?: NullableStringFieldUpdateOperationsInput | string | null
    commentaire_plage_ouverture?: NullableStringFieldUpdateOperationsInput | string | null
    annuaire?: NullableStringFieldUpdateOperationsInput | string | null
    tchat?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_selected?: BoolFieldUpdateOperationsInput | boolean
    is_sended?: BoolFieldUpdateOperationsInput | boolean
  }

  export type collectivitesCreateManyInput = {
    id?: number
    nom?: string | null
    type_service_local?: string | null
    siret?: string | null
    siren?: string | null
    code_insee_commune?: string | null
    code_postal?: string | null
    code_departement?: string | null
    nom_departement?: string | null
    nom_commune?: string | null
    pays?: string | null
    continent?: string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    adresse?: string | null
    adresse_courriel?: string | null
    telephone?: string | null
    telecopie?: string | null
    site_internet?: string | null
    copyright?: string | null
    ancien_code_pivot?: string | null
    reseau_social?: string | null
    texte_reference?: string | null
    partenaire?: string | null
    itm_identifiant?: string | null
    sigle?: string | null
    date_modification?: Date | string | null
    date_creation?: Date | string | null
    partenaire_date_modification?: Date | string | null
    mission?: string | null
    formulaire_contact?: string | null
    version_type?: string | null
    version_etat_modification?: string | null
    version_source?: string | null
    type_organisme?: string | null
    type_repertoire?: string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: string | null
    sve?: string | null
    telephone_accessible?: string | null
    application_mobile?: string | null
    statut_de_diffusion?: string | null
    information_complementaire?: string | null
    commentaire_plage_ouverture?: string | null
    annuaire?: string | null
    tchat?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    is_selected?: boolean
    is_sended?: boolean
  }

  export type collectivitesUpdateManyMutationInput = {
    nom?: NullableStringFieldUpdateOperationsInput | string | null
    type_service_local?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    siren?: NullableStringFieldUpdateOperationsInput | string | null
    code_insee_commune?: NullableStringFieldUpdateOperationsInput | string | null
    code_postal?: NullableStringFieldUpdateOperationsInput | string | null
    nom_departement?: NullableStringFieldUpdateOperationsInput | string | null
    nom_commune?: NullableStringFieldUpdateOperationsInput | string | null
    pays?: NullableStringFieldUpdateOperationsInput | string | null
    continent?: NullableStringFieldUpdateOperationsInput | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    adresse_courriel?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    telecopie?: NullableStringFieldUpdateOperationsInput | string | null
    site_internet?: NullableStringFieldUpdateOperationsInput | string | null
    copyright?: NullableStringFieldUpdateOperationsInput | string | null
    ancien_code_pivot?: NullableStringFieldUpdateOperationsInput | string | null
    reseau_social?: NullableStringFieldUpdateOperationsInput | string | null
    texte_reference?: NullableStringFieldUpdateOperationsInput | string | null
    partenaire?: NullableStringFieldUpdateOperationsInput | string | null
    itm_identifiant?: NullableStringFieldUpdateOperationsInput | string | null
    sigle?: NullableStringFieldUpdateOperationsInput | string | null
    date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_creation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    partenaire_date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    formulaire_contact?: NullableStringFieldUpdateOperationsInput | string | null
    version_type?: NullableStringFieldUpdateOperationsInput | string | null
    version_etat_modification?: NullableStringFieldUpdateOperationsInput | string | null
    version_source?: NullableStringFieldUpdateOperationsInput | string | null
    type_organisme?: NullableStringFieldUpdateOperationsInput | string | null
    type_repertoire?: NullableStringFieldUpdateOperationsInput | string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: NullableStringFieldUpdateOperationsInput | string | null
    sve?: NullableStringFieldUpdateOperationsInput | string | null
    telephone_accessible?: NullableStringFieldUpdateOperationsInput | string | null
    application_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    statut_de_diffusion?: NullableStringFieldUpdateOperationsInput | string | null
    information_complementaire?: NullableStringFieldUpdateOperationsInput | string | null
    commentaire_plage_ouverture?: NullableStringFieldUpdateOperationsInput | string | null
    annuaire?: NullableStringFieldUpdateOperationsInput | string | null
    tchat?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_selected?: BoolFieldUpdateOperationsInput | boolean
    is_sended?: BoolFieldUpdateOperationsInput | boolean
  }

  export type collectivitesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nom?: NullableStringFieldUpdateOperationsInput | string | null
    type_service_local?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    siren?: NullableStringFieldUpdateOperationsInput | string | null
    code_insee_commune?: NullableStringFieldUpdateOperationsInput | string | null
    code_postal?: NullableStringFieldUpdateOperationsInput | string | null
    code_departement?: NullableStringFieldUpdateOperationsInput | string | null
    nom_departement?: NullableStringFieldUpdateOperationsInput | string | null
    nom_commune?: NullableStringFieldUpdateOperationsInput | string | null
    pays?: NullableStringFieldUpdateOperationsInput | string | null
    continent?: NullableStringFieldUpdateOperationsInput | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    adresse_courriel?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    telecopie?: NullableStringFieldUpdateOperationsInput | string | null
    site_internet?: NullableStringFieldUpdateOperationsInput | string | null
    copyright?: NullableStringFieldUpdateOperationsInput | string | null
    ancien_code_pivot?: NullableStringFieldUpdateOperationsInput | string | null
    reseau_social?: NullableStringFieldUpdateOperationsInput | string | null
    texte_reference?: NullableStringFieldUpdateOperationsInput | string | null
    partenaire?: NullableStringFieldUpdateOperationsInput | string | null
    itm_identifiant?: NullableStringFieldUpdateOperationsInput | string | null
    sigle?: NullableStringFieldUpdateOperationsInput | string | null
    date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_creation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    partenaire_date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    formulaire_contact?: NullableStringFieldUpdateOperationsInput | string | null
    version_type?: NullableStringFieldUpdateOperationsInput | string | null
    version_etat_modification?: NullableStringFieldUpdateOperationsInput | string | null
    version_source?: NullableStringFieldUpdateOperationsInput | string | null
    type_organisme?: NullableStringFieldUpdateOperationsInput | string | null
    type_repertoire?: NullableStringFieldUpdateOperationsInput | string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: NullableStringFieldUpdateOperationsInput | string | null
    sve?: NullableStringFieldUpdateOperationsInput | string | null
    telephone_accessible?: NullableStringFieldUpdateOperationsInput | string | null
    application_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    statut_de_diffusion?: NullableStringFieldUpdateOperationsInput | string | null
    information_complementaire?: NullableStringFieldUpdateOperationsInput | string | null
    commentaire_plage_ouverture?: NullableStringFieldUpdateOperationsInput | string | null
    annuaire?: NullableStringFieldUpdateOperationsInput | string | null
    tchat?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_selected?: BoolFieldUpdateOperationsInput | boolean
    is_sended?: BoolFieldUpdateOperationsInput | boolean
  }

  export type collectivites_joinCreateInput = {
    code_postal: string
    code_departement?: string | null
  }

  export type collectivites_joinUncheckedCreateInput = {
    code_postal: string
    code_departement?: string | null
  }

  export type collectivites_joinUpdateInput = {
    code_postal?: StringFieldUpdateOperationsInput | string
    code_departement?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type collectivites_joinUncheckedUpdateInput = {
    code_postal?: StringFieldUpdateOperationsInput | string
    code_departement?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type collectivites_joinCreateManyInput = {
    code_postal: string
    code_departement?: string | null
  }

  export type collectivites_joinUpdateManyMutationInput = {
    code_postal?: StringFieldUpdateOperationsInput | string
    code_departement?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type collectivites_joinUncheckedUpdateManyInput = {
    code_postal?: StringFieldUpdateOperationsInput | string
    code_departement?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type collectivites_testCreateInput = {
    nom?: string | null
    type_service_local?: string | null
    siret?: string | null
    siren?: string | null
    code_insee_commune?: string | null
    code_postal?: string | null
    nom_commune?: string | null
    pays?: string | null
    continent?: string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    adresse?: string | null
    adresse_courriel?: string | null
    telephone?: string | null
    telecopie?: string | null
    site_internet?: string | null
    copyright?: string | null
    ancien_code_pivot?: string | null
    reseau_social?: string | null
    texte_reference?: string | null
    partenaire?: string | null
    itm_identifiant?: string | null
    sigle?: string | null
    date_modification?: Date | string | null
    date_creation?: Date | string | null
    partenaire_date_modification?: Date | string | null
    mission?: string | null
    formulaire_contact?: string | null
    version_type?: string | null
    version_etat_modification?: string | null
    version_source?: string | null
    type_organisme?: string | null
    type_repertoire?: string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: string | null
    sve?: string | null
    telephone_accessible?: string | null
    application_mobile?: string | null
    statut_de_diffusion?: string | null
    information_complementaire?: string | null
    commentaire_plage_ouverture?: string | null
    annuaire?: string | null
    tchat?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    is_selected?: boolean
    is_sended?: boolean
  }

  export type collectivites_testUncheckedCreateInput = {
    id?: number
    nom?: string | null
    type_service_local?: string | null
    siret?: string | null
    siren?: string | null
    code_insee_commune?: string | null
    code_postal?: string | null
    nom_commune?: string | null
    pays?: string | null
    continent?: string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    adresse?: string | null
    adresse_courriel?: string | null
    telephone?: string | null
    telecopie?: string | null
    site_internet?: string | null
    copyright?: string | null
    ancien_code_pivot?: string | null
    reseau_social?: string | null
    texte_reference?: string | null
    partenaire?: string | null
    itm_identifiant?: string | null
    sigle?: string | null
    date_modification?: Date | string | null
    date_creation?: Date | string | null
    partenaire_date_modification?: Date | string | null
    mission?: string | null
    formulaire_contact?: string | null
    version_type?: string | null
    version_etat_modification?: string | null
    version_source?: string | null
    type_organisme?: string | null
    type_repertoire?: string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: string | null
    sve?: string | null
    telephone_accessible?: string | null
    application_mobile?: string | null
    statut_de_diffusion?: string | null
    information_complementaire?: string | null
    commentaire_plage_ouverture?: string | null
    annuaire?: string | null
    tchat?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    is_selected?: boolean
    is_sended?: boolean
  }

  export type collectivites_testUpdateInput = {
    nom?: NullableStringFieldUpdateOperationsInput | string | null
    type_service_local?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    siren?: NullableStringFieldUpdateOperationsInput | string | null
    code_insee_commune?: NullableStringFieldUpdateOperationsInput | string | null
    code_postal?: NullableStringFieldUpdateOperationsInput | string | null
    nom_commune?: NullableStringFieldUpdateOperationsInput | string | null
    pays?: NullableStringFieldUpdateOperationsInput | string | null
    continent?: NullableStringFieldUpdateOperationsInput | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    adresse_courriel?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    telecopie?: NullableStringFieldUpdateOperationsInput | string | null
    site_internet?: NullableStringFieldUpdateOperationsInput | string | null
    copyright?: NullableStringFieldUpdateOperationsInput | string | null
    ancien_code_pivot?: NullableStringFieldUpdateOperationsInput | string | null
    reseau_social?: NullableStringFieldUpdateOperationsInput | string | null
    texte_reference?: NullableStringFieldUpdateOperationsInput | string | null
    partenaire?: NullableStringFieldUpdateOperationsInput | string | null
    itm_identifiant?: NullableStringFieldUpdateOperationsInput | string | null
    sigle?: NullableStringFieldUpdateOperationsInput | string | null
    date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_creation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    partenaire_date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    formulaire_contact?: NullableStringFieldUpdateOperationsInput | string | null
    version_type?: NullableStringFieldUpdateOperationsInput | string | null
    version_etat_modification?: NullableStringFieldUpdateOperationsInput | string | null
    version_source?: NullableStringFieldUpdateOperationsInput | string | null
    type_organisme?: NullableStringFieldUpdateOperationsInput | string | null
    type_repertoire?: NullableStringFieldUpdateOperationsInput | string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: NullableStringFieldUpdateOperationsInput | string | null
    sve?: NullableStringFieldUpdateOperationsInput | string | null
    telephone_accessible?: NullableStringFieldUpdateOperationsInput | string | null
    application_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    statut_de_diffusion?: NullableStringFieldUpdateOperationsInput | string | null
    information_complementaire?: NullableStringFieldUpdateOperationsInput | string | null
    commentaire_plage_ouverture?: NullableStringFieldUpdateOperationsInput | string | null
    annuaire?: NullableStringFieldUpdateOperationsInput | string | null
    tchat?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_selected?: BoolFieldUpdateOperationsInput | boolean
    is_sended?: BoolFieldUpdateOperationsInput | boolean
  }

  export type collectivites_testUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nom?: NullableStringFieldUpdateOperationsInput | string | null
    type_service_local?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    siren?: NullableStringFieldUpdateOperationsInput | string | null
    code_insee_commune?: NullableStringFieldUpdateOperationsInput | string | null
    code_postal?: NullableStringFieldUpdateOperationsInput | string | null
    nom_commune?: NullableStringFieldUpdateOperationsInput | string | null
    pays?: NullableStringFieldUpdateOperationsInput | string | null
    continent?: NullableStringFieldUpdateOperationsInput | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    adresse_courriel?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    telecopie?: NullableStringFieldUpdateOperationsInput | string | null
    site_internet?: NullableStringFieldUpdateOperationsInput | string | null
    copyright?: NullableStringFieldUpdateOperationsInput | string | null
    ancien_code_pivot?: NullableStringFieldUpdateOperationsInput | string | null
    reseau_social?: NullableStringFieldUpdateOperationsInput | string | null
    texte_reference?: NullableStringFieldUpdateOperationsInput | string | null
    partenaire?: NullableStringFieldUpdateOperationsInput | string | null
    itm_identifiant?: NullableStringFieldUpdateOperationsInput | string | null
    sigle?: NullableStringFieldUpdateOperationsInput | string | null
    date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_creation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    partenaire_date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    formulaire_contact?: NullableStringFieldUpdateOperationsInput | string | null
    version_type?: NullableStringFieldUpdateOperationsInput | string | null
    version_etat_modification?: NullableStringFieldUpdateOperationsInput | string | null
    version_source?: NullableStringFieldUpdateOperationsInput | string | null
    type_organisme?: NullableStringFieldUpdateOperationsInput | string | null
    type_repertoire?: NullableStringFieldUpdateOperationsInput | string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: NullableStringFieldUpdateOperationsInput | string | null
    sve?: NullableStringFieldUpdateOperationsInput | string | null
    telephone_accessible?: NullableStringFieldUpdateOperationsInput | string | null
    application_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    statut_de_diffusion?: NullableStringFieldUpdateOperationsInput | string | null
    information_complementaire?: NullableStringFieldUpdateOperationsInput | string | null
    commentaire_plage_ouverture?: NullableStringFieldUpdateOperationsInput | string | null
    annuaire?: NullableStringFieldUpdateOperationsInput | string | null
    tchat?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_selected?: BoolFieldUpdateOperationsInput | boolean
    is_sended?: BoolFieldUpdateOperationsInput | boolean
  }

  export type collectivites_testCreateManyInput = {
    id?: number
    nom?: string | null
    type_service_local?: string | null
    siret?: string | null
    siren?: string | null
    code_insee_commune?: string | null
    code_postal?: string | null
    nom_commune?: string | null
    pays?: string | null
    continent?: string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    adresse?: string | null
    adresse_courriel?: string | null
    telephone?: string | null
    telecopie?: string | null
    site_internet?: string | null
    copyright?: string | null
    ancien_code_pivot?: string | null
    reseau_social?: string | null
    texte_reference?: string | null
    partenaire?: string | null
    itm_identifiant?: string | null
    sigle?: string | null
    date_modification?: Date | string | null
    date_creation?: Date | string | null
    partenaire_date_modification?: Date | string | null
    mission?: string | null
    formulaire_contact?: string | null
    version_type?: string | null
    version_etat_modification?: string | null
    version_source?: string | null
    type_organisme?: string | null
    type_repertoire?: string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: string | null
    sve?: string | null
    telephone_accessible?: string | null
    application_mobile?: string | null
    statut_de_diffusion?: string | null
    information_complementaire?: string | null
    commentaire_plage_ouverture?: string | null
    annuaire?: string | null
    tchat?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    is_selected?: boolean
    is_sended?: boolean
  }

  export type collectivites_testUpdateManyMutationInput = {
    nom?: NullableStringFieldUpdateOperationsInput | string | null
    type_service_local?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    siren?: NullableStringFieldUpdateOperationsInput | string | null
    code_insee_commune?: NullableStringFieldUpdateOperationsInput | string | null
    code_postal?: NullableStringFieldUpdateOperationsInput | string | null
    nom_commune?: NullableStringFieldUpdateOperationsInput | string | null
    pays?: NullableStringFieldUpdateOperationsInput | string | null
    continent?: NullableStringFieldUpdateOperationsInput | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    adresse_courriel?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    telecopie?: NullableStringFieldUpdateOperationsInput | string | null
    site_internet?: NullableStringFieldUpdateOperationsInput | string | null
    copyright?: NullableStringFieldUpdateOperationsInput | string | null
    ancien_code_pivot?: NullableStringFieldUpdateOperationsInput | string | null
    reseau_social?: NullableStringFieldUpdateOperationsInput | string | null
    texte_reference?: NullableStringFieldUpdateOperationsInput | string | null
    partenaire?: NullableStringFieldUpdateOperationsInput | string | null
    itm_identifiant?: NullableStringFieldUpdateOperationsInput | string | null
    sigle?: NullableStringFieldUpdateOperationsInput | string | null
    date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_creation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    partenaire_date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    formulaire_contact?: NullableStringFieldUpdateOperationsInput | string | null
    version_type?: NullableStringFieldUpdateOperationsInput | string | null
    version_etat_modification?: NullableStringFieldUpdateOperationsInput | string | null
    version_source?: NullableStringFieldUpdateOperationsInput | string | null
    type_organisme?: NullableStringFieldUpdateOperationsInput | string | null
    type_repertoire?: NullableStringFieldUpdateOperationsInput | string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: NullableStringFieldUpdateOperationsInput | string | null
    sve?: NullableStringFieldUpdateOperationsInput | string | null
    telephone_accessible?: NullableStringFieldUpdateOperationsInput | string | null
    application_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    statut_de_diffusion?: NullableStringFieldUpdateOperationsInput | string | null
    information_complementaire?: NullableStringFieldUpdateOperationsInput | string | null
    commentaire_plage_ouverture?: NullableStringFieldUpdateOperationsInput | string | null
    annuaire?: NullableStringFieldUpdateOperationsInput | string | null
    tchat?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_selected?: BoolFieldUpdateOperationsInput | boolean
    is_sended?: BoolFieldUpdateOperationsInput | boolean
  }

  export type collectivites_testUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nom?: NullableStringFieldUpdateOperationsInput | string | null
    type_service_local?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    siren?: NullableStringFieldUpdateOperationsInput | string | null
    code_insee_commune?: NullableStringFieldUpdateOperationsInput | string | null
    code_postal?: NullableStringFieldUpdateOperationsInput | string | null
    nom_commune?: NullableStringFieldUpdateOperationsInput | string | null
    pays?: NullableStringFieldUpdateOperationsInput | string | null
    continent?: NullableStringFieldUpdateOperationsInput | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    adresse_courriel?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    telecopie?: NullableStringFieldUpdateOperationsInput | string | null
    site_internet?: NullableStringFieldUpdateOperationsInput | string | null
    copyright?: NullableStringFieldUpdateOperationsInput | string | null
    ancien_code_pivot?: NullableStringFieldUpdateOperationsInput | string | null
    reseau_social?: NullableStringFieldUpdateOperationsInput | string | null
    texte_reference?: NullableStringFieldUpdateOperationsInput | string | null
    partenaire?: NullableStringFieldUpdateOperationsInput | string | null
    itm_identifiant?: NullableStringFieldUpdateOperationsInput | string | null
    sigle?: NullableStringFieldUpdateOperationsInput | string | null
    date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_creation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    partenaire_date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    formulaire_contact?: NullableStringFieldUpdateOperationsInput | string | null
    version_type?: NullableStringFieldUpdateOperationsInput | string | null
    version_etat_modification?: NullableStringFieldUpdateOperationsInput | string | null
    version_source?: NullableStringFieldUpdateOperationsInput | string | null
    type_organisme?: NullableStringFieldUpdateOperationsInput | string | null
    type_repertoire?: NullableStringFieldUpdateOperationsInput | string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: NullableStringFieldUpdateOperationsInput | string | null
    sve?: NullableStringFieldUpdateOperationsInput | string | null
    telephone_accessible?: NullableStringFieldUpdateOperationsInput | string | null
    application_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    statut_de_diffusion?: NullableStringFieldUpdateOperationsInput | string | null
    information_complementaire?: NullableStringFieldUpdateOperationsInput | string | null
    commentaire_plage_ouverture?: NullableStringFieldUpdateOperationsInput | string | null
    annuaire?: NullableStringFieldUpdateOperationsInput | string | null
    tchat?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_selected?: BoolFieldUpdateOperationsInput | boolean
    is_sended?: BoolFieldUpdateOperationsInput | boolean
  }

  export type departementCreateInput = {
    departement_code?: string | null
    departement_nom?: string | null
    departement_nom_uppercase?: string | null
    departement_slug?: string | null
    departement_nom_soundex?: string | null
    collectivites_rel?: collectivitesCreateNestedManyWithoutDepartement_idInput
  }

  export type departementUncheckedCreateInput = {
    departement_id?: number
    departement_code?: string | null
    departement_nom?: string | null
    departement_nom_uppercase?: string | null
    departement_slug?: string | null
    departement_nom_soundex?: string | null
    collectivites_rel?: collectivitesUncheckedCreateNestedManyWithoutDepartement_idInput
  }

  export type departementUpdateInput = {
    departement_code?: NullableStringFieldUpdateOperationsInput | string | null
    departement_nom?: NullableStringFieldUpdateOperationsInput | string | null
    departement_nom_uppercase?: NullableStringFieldUpdateOperationsInput | string | null
    departement_slug?: NullableStringFieldUpdateOperationsInput | string | null
    departement_nom_soundex?: NullableStringFieldUpdateOperationsInput | string | null
    collectivites_rel?: collectivitesUpdateManyWithoutDepartement_idNestedInput
  }

  export type departementUncheckedUpdateInput = {
    departement_id?: IntFieldUpdateOperationsInput | number
    departement_code?: NullableStringFieldUpdateOperationsInput | string | null
    departement_nom?: NullableStringFieldUpdateOperationsInput | string | null
    departement_nom_uppercase?: NullableStringFieldUpdateOperationsInput | string | null
    departement_slug?: NullableStringFieldUpdateOperationsInput | string | null
    departement_nom_soundex?: NullableStringFieldUpdateOperationsInput | string | null
    collectivites_rel?: collectivitesUncheckedUpdateManyWithoutDepartement_idNestedInput
  }

  export type departementCreateManyInput = {
    departement_id?: number
    departement_code?: string | null
    departement_nom?: string | null
    departement_nom_uppercase?: string | null
    departement_slug?: string | null
    departement_nom_soundex?: string | null
  }

  export type departementUpdateManyMutationInput = {
    departement_code?: NullableStringFieldUpdateOperationsInput | string | null
    departement_nom?: NullableStringFieldUpdateOperationsInput | string | null
    departement_nom_uppercase?: NullableStringFieldUpdateOperationsInput | string | null
    departement_slug?: NullableStringFieldUpdateOperationsInput | string | null
    departement_nom_soundex?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type departementUncheckedUpdateManyInput = {
    departement_id?: IntFieldUpdateOperationsInput | number
    departement_code?: NullableStringFieldUpdateOperationsInput | string | null
    departement_nom?: NullableStringFieldUpdateOperationsInput | string | null
    departement_nom_uppercase?: NullableStringFieldUpdateOperationsInput | string | null
    departement_slug?: NullableStringFieldUpdateOperationsInput | string | null
    departement_nom_soundex?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type serviceCreateInput = {
    nom?: string | null
    type_service_local?: string | null
    siret?: string | null
    siren?: string | null
    code_insee_commune?: string | null
    code_postal?: string | null
    nom_commune?: string | null
    pays?: string | null
    continent?: string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    adresse?: string | null
    adresse_courriel?: string | null
    telephone?: string | null
    telecopie?: string | null
    site_internet?: string | null
    copyright?: string | null
    ancien_code_pivot?: string | null
    reseau_social?: string | null
    texte_reference?: string | null
    partenaire?: string | null
    itm_identifiant?: string | null
    sigle?: string | null
    date_modification?: Date | string | null
    date_creation?: Date | string | null
    partenaire_date_modification?: Date | string | null
    mission?: string | null
    formulaire_contact?: string | null
    version_type?: string | null
    version_etat_modification?: string | null
    version_source?: string | null
    type_organisme?: string | null
    type_repertoire?: string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: string | null
    sve?: string | null
    telephone_accessible?: string | null
    application_mobile?: string | null
    statut_de_diffusion?: string | null
    information_complementaire?: string | null
    commentaire_plage_ouverture?: string | null
    annuaire?: string | null
    tchat?: string | null
  }

  export type serviceUncheckedCreateInput = {
    id?: number
    nom?: string | null
    type_service_local?: string | null
    siret?: string | null
    siren?: string | null
    code_insee_commune?: string | null
    code_postal?: string | null
    nom_commune?: string | null
    pays?: string | null
    continent?: string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    adresse?: string | null
    adresse_courriel?: string | null
    telephone?: string | null
    telecopie?: string | null
    site_internet?: string | null
    copyright?: string | null
    ancien_code_pivot?: string | null
    reseau_social?: string | null
    texte_reference?: string | null
    partenaire?: string | null
    itm_identifiant?: string | null
    sigle?: string | null
    date_modification?: Date | string | null
    date_creation?: Date | string | null
    partenaire_date_modification?: Date | string | null
    mission?: string | null
    formulaire_contact?: string | null
    version_type?: string | null
    version_etat_modification?: string | null
    version_source?: string | null
    type_organisme?: string | null
    type_repertoire?: string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: string | null
    sve?: string | null
    telephone_accessible?: string | null
    application_mobile?: string | null
    statut_de_diffusion?: string | null
    information_complementaire?: string | null
    commentaire_plage_ouverture?: string | null
    annuaire?: string | null
    tchat?: string | null
  }

  export type serviceUpdateInput = {
    nom?: NullableStringFieldUpdateOperationsInput | string | null
    type_service_local?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    siren?: NullableStringFieldUpdateOperationsInput | string | null
    code_insee_commune?: NullableStringFieldUpdateOperationsInput | string | null
    code_postal?: NullableStringFieldUpdateOperationsInput | string | null
    nom_commune?: NullableStringFieldUpdateOperationsInput | string | null
    pays?: NullableStringFieldUpdateOperationsInput | string | null
    continent?: NullableStringFieldUpdateOperationsInput | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    adresse_courriel?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    telecopie?: NullableStringFieldUpdateOperationsInput | string | null
    site_internet?: NullableStringFieldUpdateOperationsInput | string | null
    copyright?: NullableStringFieldUpdateOperationsInput | string | null
    ancien_code_pivot?: NullableStringFieldUpdateOperationsInput | string | null
    reseau_social?: NullableStringFieldUpdateOperationsInput | string | null
    texte_reference?: NullableStringFieldUpdateOperationsInput | string | null
    partenaire?: NullableStringFieldUpdateOperationsInput | string | null
    itm_identifiant?: NullableStringFieldUpdateOperationsInput | string | null
    sigle?: NullableStringFieldUpdateOperationsInput | string | null
    date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_creation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    partenaire_date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    formulaire_contact?: NullableStringFieldUpdateOperationsInput | string | null
    version_type?: NullableStringFieldUpdateOperationsInput | string | null
    version_etat_modification?: NullableStringFieldUpdateOperationsInput | string | null
    version_source?: NullableStringFieldUpdateOperationsInput | string | null
    type_organisme?: NullableStringFieldUpdateOperationsInput | string | null
    type_repertoire?: NullableStringFieldUpdateOperationsInput | string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: NullableStringFieldUpdateOperationsInput | string | null
    sve?: NullableStringFieldUpdateOperationsInput | string | null
    telephone_accessible?: NullableStringFieldUpdateOperationsInput | string | null
    application_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    statut_de_diffusion?: NullableStringFieldUpdateOperationsInput | string | null
    information_complementaire?: NullableStringFieldUpdateOperationsInput | string | null
    commentaire_plage_ouverture?: NullableStringFieldUpdateOperationsInput | string | null
    annuaire?: NullableStringFieldUpdateOperationsInput | string | null
    tchat?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type serviceUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nom?: NullableStringFieldUpdateOperationsInput | string | null
    type_service_local?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    siren?: NullableStringFieldUpdateOperationsInput | string | null
    code_insee_commune?: NullableStringFieldUpdateOperationsInput | string | null
    code_postal?: NullableStringFieldUpdateOperationsInput | string | null
    nom_commune?: NullableStringFieldUpdateOperationsInput | string | null
    pays?: NullableStringFieldUpdateOperationsInput | string | null
    continent?: NullableStringFieldUpdateOperationsInput | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    adresse_courriel?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    telecopie?: NullableStringFieldUpdateOperationsInput | string | null
    site_internet?: NullableStringFieldUpdateOperationsInput | string | null
    copyright?: NullableStringFieldUpdateOperationsInput | string | null
    ancien_code_pivot?: NullableStringFieldUpdateOperationsInput | string | null
    reseau_social?: NullableStringFieldUpdateOperationsInput | string | null
    texte_reference?: NullableStringFieldUpdateOperationsInput | string | null
    partenaire?: NullableStringFieldUpdateOperationsInput | string | null
    itm_identifiant?: NullableStringFieldUpdateOperationsInput | string | null
    sigle?: NullableStringFieldUpdateOperationsInput | string | null
    date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_creation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    partenaire_date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    formulaire_contact?: NullableStringFieldUpdateOperationsInput | string | null
    version_type?: NullableStringFieldUpdateOperationsInput | string | null
    version_etat_modification?: NullableStringFieldUpdateOperationsInput | string | null
    version_source?: NullableStringFieldUpdateOperationsInput | string | null
    type_organisme?: NullableStringFieldUpdateOperationsInput | string | null
    type_repertoire?: NullableStringFieldUpdateOperationsInput | string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: NullableStringFieldUpdateOperationsInput | string | null
    sve?: NullableStringFieldUpdateOperationsInput | string | null
    telephone_accessible?: NullableStringFieldUpdateOperationsInput | string | null
    application_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    statut_de_diffusion?: NullableStringFieldUpdateOperationsInput | string | null
    information_complementaire?: NullableStringFieldUpdateOperationsInput | string | null
    commentaire_plage_ouverture?: NullableStringFieldUpdateOperationsInput | string | null
    annuaire?: NullableStringFieldUpdateOperationsInput | string | null
    tchat?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type serviceCreateManyInput = {
    id?: number
    nom?: string | null
    type_service_local?: string | null
    siret?: string | null
    siren?: string | null
    code_insee_commune?: string | null
    code_postal?: string | null
    nom_commune?: string | null
    pays?: string | null
    continent?: string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    adresse?: string | null
    adresse_courriel?: string | null
    telephone?: string | null
    telecopie?: string | null
    site_internet?: string | null
    copyright?: string | null
    ancien_code_pivot?: string | null
    reseau_social?: string | null
    texte_reference?: string | null
    partenaire?: string | null
    itm_identifiant?: string | null
    sigle?: string | null
    date_modification?: Date | string | null
    date_creation?: Date | string | null
    partenaire_date_modification?: Date | string | null
    mission?: string | null
    formulaire_contact?: string | null
    version_type?: string | null
    version_etat_modification?: string | null
    version_source?: string | null
    type_organisme?: string | null
    type_repertoire?: string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: string | null
    sve?: string | null
    telephone_accessible?: string | null
    application_mobile?: string | null
    statut_de_diffusion?: string | null
    information_complementaire?: string | null
    commentaire_plage_ouverture?: string | null
    annuaire?: string | null
    tchat?: string | null
  }

  export type serviceUpdateManyMutationInput = {
    nom?: NullableStringFieldUpdateOperationsInput | string | null
    type_service_local?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    siren?: NullableStringFieldUpdateOperationsInput | string | null
    code_insee_commune?: NullableStringFieldUpdateOperationsInput | string | null
    code_postal?: NullableStringFieldUpdateOperationsInput | string | null
    nom_commune?: NullableStringFieldUpdateOperationsInput | string | null
    pays?: NullableStringFieldUpdateOperationsInput | string | null
    continent?: NullableStringFieldUpdateOperationsInput | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    adresse_courriel?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    telecopie?: NullableStringFieldUpdateOperationsInput | string | null
    site_internet?: NullableStringFieldUpdateOperationsInput | string | null
    copyright?: NullableStringFieldUpdateOperationsInput | string | null
    ancien_code_pivot?: NullableStringFieldUpdateOperationsInput | string | null
    reseau_social?: NullableStringFieldUpdateOperationsInput | string | null
    texte_reference?: NullableStringFieldUpdateOperationsInput | string | null
    partenaire?: NullableStringFieldUpdateOperationsInput | string | null
    itm_identifiant?: NullableStringFieldUpdateOperationsInput | string | null
    sigle?: NullableStringFieldUpdateOperationsInput | string | null
    date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_creation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    partenaire_date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    formulaire_contact?: NullableStringFieldUpdateOperationsInput | string | null
    version_type?: NullableStringFieldUpdateOperationsInput | string | null
    version_etat_modification?: NullableStringFieldUpdateOperationsInput | string | null
    version_source?: NullableStringFieldUpdateOperationsInput | string | null
    type_organisme?: NullableStringFieldUpdateOperationsInput | string | null
    type_repertoire?: NullableStringFieldUpdateOperationsInput | string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: NullableStringFieldUpdateOperationsInput | string | null
    sve?: NullableStringFieldUpdateOperationsInput | string | null
    telephone_accessible?: NullableStringFieldUpdateOperationsInput | string | null
    application_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    statut_de_diffusion?: NullableStringFieldUpdateOperationsInput | string | null
    information_complementaire?: NullableStringFieldUpdateOperationsInput | string | null
    commentaire_plage_ouverture?: NullableStringFieldUpdateOperationsInput | string | null
    annuaire?: NullableStringFieldUpdateOperationsInput | string | null
    tchat?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type serviceUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nom?: NullableStringFieldUpdateOperationsInput | string | null
    type_service_local?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    siren?: NullableStringFieldUpdateOperationsInput | string | null
    code_insee_commune?: NullableStringFieldUpdateOperationsInput | string | null
    code_postal?: NullableStringFieldUpdateOperationsInput | string | null
    nom_commune?: NullableStringFieldUpdateOperationsInput | string | null
    pays?: NullableStringFieldUpdateOperationsInput | string | null
    continent?: NullableStringFieldUpdateOperationsInput | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    adresse_courriel?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    telecopie?: NullableStringFieldUpdateOperationsInput | string | null
    site_internet?: NullableStringFieldUpdateOperationsInput | string | null
    copyright?: NullableStringFieldUpdateOperationsInput | string | null
    ancien_code_pivot?: NullableStringFieldUpdateOperationsInput | string | null
    reseau_social?: NullableStringFieldUpdateOperationsInput | string | null
    texte_reference?: NullableStringFieldUpdateOperationsInput | string | null
    partenaire?: NullableStringFieldUpdateOperationsInput | string | null
    itm_identifiant?: NullableStringFieldUpdateOperationsInput | string | null
    sigle?: NullableStringFieldUpdateOperationsInput | string | null
    date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_creation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    partenaire_date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    formulaire_contact?: NullableStringFieldUpdateOperationsInput | string | null
    version_type?: NullableStringFieldUpdateOperationsInput | string | null
    version_etat_modification?: NullableStringFieldUpdateOperationsInput | string | null
    version_source?: NullableStringFieldUpdateOperationsInput | string | null
    type_organisme?: NullableStringFieldUpdateOperationsInput | string | null
    type_repertoire?: NullableStringFieldUpdateOperationsInput | string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: NullableStringFieldUpdateOperationsInput | string | null
    sve?: NullableStringFieldUpdateOperationsInput | string | null
    telephone_accessible?: NullableStringFieldUpdateOperationsInput | string | null
    application_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    statut_de_diffusion?: NullableStringFieldUpdateOperationsInput | string | null
    information_complementaire?: NullableStringFieldUpdateOperationsInput | string | null
    commentaire_plage_ouverture?: NullableStringFieldUpdateOperationsInput | string | null
    annuaire?: NullableStringFieldUpdateOperationsInput | string | null
    tchat?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type service2CreateInput = {
    nom?: string | null
    type_service_local?: string | null
    siret?: string | null
    siren?: string | null
    code_insee_commune?: string | null
    code_postal?: string | null
    nom_commune?: string | null
    pays?: string | null
    continent?: string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    adresse?: string | null
    adresse_courriel?: string | null
    telephone?: string | null
    telecopie?: string | null
    site_internet?: string | null
    copyright?: string | null
    ancien_code_pivot?: string | null
    reseau_social?: string | null
    texte_reference?: string | null
    partenaire?: string | null
    itm_identifiant?: string | null
    sigle?: string | null
    date_modification?: Date | string | null
    date_creation?: Date | string | null
    partenaire_date_modification?: Date | string | null
    mission?: string | null
    formulaire_contact?: string | null
    version_type?: string | null
    version_etat_modification?: string | null
    version_source?: string | null
    type_organisme?: string | null
    type_repertoire?: string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: string | null
    sve?: string | null
    telephone_accessible?: string | null
    application_mobile?: string | null
    statut_de_diffusion?: string | null
    information_complementaire?: string | null
    commentaire_plage_ouverture?: string | null
    annuaire?: string | null
    tchat?: string | null
  }

  export type service2UncheckedCreateInput = {
    id?: number
    nom?: string | null
    type_service_local?: string | null
    siret?: string | null
    siren?: string | null
    code_insee_commune?: string | null
    code_postal?: string | null
    nom_commune?: string | null
    pays?: string | null
    continent?: string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    adresse?: string | null
    adresse_courriel?: string | null
    telephone?: string | null
    telecopie?: string | null
    site_internet?: string | null
    copyright?: string | null
    ancien_code_pivot?: string | null
    reseau_social?: string | null
    texte_reference?: string | null
    partenaire?: string | null
    itm_identifiant?: string | null
    sigle?: string | null
    date_modification?: Date | string | null
    date_creation?: Date | string | null
    partenaire_date_modification?: Date | string | null
    mission?: string | null
    formulaire_contact?: string | null
    version_type?: string | null
    version_etat_modification?: string | null
    version_source?: string | null
    type_organisme?: string | null
    type_repertoire?: string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: string | null
    sve?: string | null
    telephone_accessible?: string | null
    application_mobile?: string | null
    statut_de_diffusion?: string | null
    information_complementaire?: string | null
    commentaire_plage_ouverture?: string | null
    annuaire?: string | null
    tchat?: string | null
  }

  export type service2UpdateInput = {
    nom?: NullableStringFieldUpdateOperationsInput | string | null
    type_service_local?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    siren?: NullableStringFieldUpdateOperationsInput | string | null
    code_insee_commune?: NullableStringFieldUpdateOperationsInput | string | null
    code_postal?: NullableStringFieldUpdateOperationsInput | string | null
    nom_commune?: NullableStringFieldUpdateOperationsInput | string | null
    pays?: NullableStringFieldUpdateOperationsInput | string | null
    continent?: NullableStringFieldUpdateOperationsInput | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    adresse_courriel?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    telecopie?: NullableStringFieldUpdateOperationsInput | string | null
    site_internet?: NullableStringFieldUpdateOperationsInput | string | null
    copyright?: NullableStringFieldUpdateOperationsInput | string | null
    ancien_code_pivot?: NullableStringFieldUpdateOperationsInput | string | null
    reseau_social?: NullableStringFieldUpdateOperationsInput | string | null
    texte_reference?: NullableStringFieldUpdateOperationsInput | string | null
    partenaire?: NullableStringFieldUpdateOperationsInput | string | null
    itm_identifiant?: NullableStringFieldUpdateOperationsInput | string | null
    sigle?: NullableStringFieldUpdateOperationsInput | string | null
    date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_creation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    partenaire_date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    formulaire_contact?: NullableStringFieldUpdateOperationsInput | string | null
    version_type?: NullableStringFieldUpdateOperationsInput | string | null
    version_etat_modification?: NullableStringFieldUpdateOperationsInput | string | null
    version_source?: NullableStringFieldUpdateOperationsInput | string | null
    type_organisme?: NullableStringFieldUpdateOperationsInput | string | null
    type_repertoire?: NullableStringFieldUpdateOperationsInput | string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: NullableStringFieldUpdateOperationsInput | string | null
    sve?: NullableStringFieldUpdateOperationsInput | string | null
    telephone_accessible?: NullableStringFieldUpdateOperationsInput | string | null
    application_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    statut_de_diffusion?: NullableStringFieldUpdateOperationsInput | string | null
    information_complementaire?: NullableStringFieldUpdateOperationsInput | string | null
    commentaire_plage_ouverture?: NullableStringFieldUpdateOperationsInput | string | null
    annuaire?: NullableStringFieldUpdateOperationsInput | string | null
    tchat?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type service2UncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nom?: NullableStringFieldUpdateOperationsInput | string | null
    type_service_local?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    siren?: NullableStringFieldUpdateOperationsInput | string | null
    code_insee_commune?: NullableStringFieldUpdateOperationsInput | string | null
    code_postal?: NullableStringFieldUpdateOperationsInput | string | null
    nom_commune?: NullableStringFieldUpdateOperationsInput | string | null
    pays?: NullableStringFieldUpdateOperationsInput | string | null
    continent?: NullableStringFieldUpdateOperationsInput | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    adresse_courriel?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    telecopie?: NullableStringFieldUpdateOperationsInput | string | null
    site_internet?: NullableStringFieldUpdateOperationsInput | string | null
    copyright?: NullableStringFieldUpdateOperationsInput | string | null
    ancien_code_pivot?: NullableStringFieldUpdateOperationsInput | string | null
    reseau_social?: NullableStringFieldUpdateOperationsInput | string | null
    texte_reference?: NullableStringFieldUpdateOperationsInput | string | null
    partenaire?: NullableStringFieldUpdateOperationsInput | string | null
    itm_identifiant?: NullableStringFieldUpdateOperationsInput | string | null
    sigle?: NullableStringFieldUpdateOperationsInput | string | null
    date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_creation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    partenaire_date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    formulaire_contact?: NullableStringFieldUpdateOperationsInput | string | null
    version_type?: NullableStringFieldUpdateOperationsInput | string | null
    version_etat_modification?: NullableStringFieldUpdateOperationsInput | string | null
    version_source?: NullableStringFieldUpdateOperationsInput | string | null
    type_organisme?: NullableStringFieldUpdateOperationsInput | string | null
    type_repertoire?: NullableStringFieldUpdateOperationsInput | string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: NullableStringFieldUpdateOperationsInput | string | null
    sve?: NullableStringFieldUpdateOperationsInput | string | null
    telephone_accessible?: NullableStringFieldUpdateOperationsInput | string | null
    application_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    statut_de_diffusion?: NullableStringFieldUpdateOperationsInput | string | null
    information_complementaire?: NullableStringFieldUpdateOperationsInput | string | null
    commentaire_plage_ouverture?: NullableStringFieldUpdateOperationsInput | string | null
    annuaire?: NullableStringFieldUpdateOperationsInput | string | null
    tchat?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type service2CreateManyInput = {
    id?: number
    nom?: string | null
    type_service_local?: string | null
    siret?: string | null
    siren?: string | null
    code_insee_commune?: string | null
    code_postal?: string | null
    nom_commune?: string | null
    pays?: string | null
    continent?: string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    adresse?: string | null
    adresse_courriel?: string | null
    telephone?: string | null
    telecopie?: string | null
    site_internet?: string | null
    copyright?: string | null
    ancien_code_pivot?: string | null
    reseau_social?: string | null
    texte_reference?: string | null
    partenaire?: string | null
    itm_identifiant?: string | null
    sigle?: string | null
    date_modification?: Date | string | null
    date_creation?: Date | string | null
    partenaire_date_modification?: Date | string | null
    mission?: string | null
    formulaire_contact?: string | null
    version_type?: string | null
    version_etat_modification?: string | null
    version_source?: string | null
    type_organisme?: string | null
    type_repertoire?: string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: string | null
    sve?: string | null
    telephone_accessible?: string | null
    application_mobile?: string | null
    statut_de_diffusion?: string | null
    information_complementaire?: string | null
    commentaire_plage_ouverture?: string | null
    annuaire?: string | null
    tchat?: string | null
  }

  export type service2UpdateManyMutationInput = {
    nom?: NullableStringFieldUpdateOperationsInput | string | null
    type_service_local?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    siren?: NullableStringFieldUpdateOperationsInput | string | null
    code_insee_commune?: NullableStringFieldUpdateOperationsInput | string | null
    code_postal?: NullableStringFieldUpdateOperationsInput | string | null
    nom_commune?: NullableStringFieldUpdateOperationsInput | string | null
    pays?: NullableStringFieldUpdateOperationsInput | string | null
    continent?: NullableStringFieldUpdateOperationsInput | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    adresse_courriel?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    telecopie?: NullableStringFieldUpdateOperationsInput | string | null
    site_internet?: NullableStringFieldUpdateOperationsInput | string | null
    copyright?: NullableStringFieldUpdateOperationsInput | string | null
    ancien_code_pivot?: NullableStringFieldUpdateOperationsInput | string | null
    reseau_social?: NullableStringFieldUpdateOperationsInput | string | null
    texte_reference?: NullableStringFieldUpdateOperationsInput | string | null
    partenaire?: NullableStringFieldUpdateOperationsInput | string | null
    itm_identifiant?: NullableStringFieldUpdateOperationsInput | string | null
    sigle?: NullableStringFieldUpdateOperationsInput | string | null
    date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_creation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    partenaire_date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    formulaire_contact?: NullableStringFieldUpdateOperationsInput | string | null
    version_type?: NullableStringFieldUpdateOperationsInput | string | null
    version_etat_modification?: NullableStringFieldUpdateOperationsInput | string | null
    version_source?: NullableStringFieldUpdateOperationsInput | string | null
    type_organisme?: NullableStringFieldUpdateOperationsInput | string | null
    type_repertoire?: NullableStringFieldUpdateOperationsInput | string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: NullableStringFieldUpdateOperationsInput | string | null
    sve?: NullableStringFieldUpdateOperationsInput | string | null
    telephone_accessible?: NullableStringFieldUpdateOperationsInput | string | null
    application_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    statut_de_diffusion?: NullableStringFieldUpdateOperationsInput | string | null
    information_complementaire?: NullableStringFieldUpdateOperationsInput | string | null
    commentaire_plage_ouverture?: NullableStringFieldUpdateOperationsInput | string | null
    annuaire?: NullableStringFieldUpdateOperationsInput | string | null
    tchat?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type service2UncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nom?: NullableStringFieldUpdateOperationsInput | string | null
    type_service_local?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    siren?: NullableStringFieldUpdateOperationsInput | string | null
    code_insee_commune?: NullableStringFieldUpdateOperationsInput | string | null
    code_postal?: NullableStringFieldUpdateOperationsInput | string | null
    nom_commune?: NullableStringFieldUpdateOperationsInput | string | null
    pays?: NullableStringFieldUpdateOperationsInput | string | null
    continent?: NullableStringFieldUpdateOperationsInput | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    adresse_courriel?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    telecopie?: NullableStringFieldUpdateOperationsInput | string | null
    site_internet?: NullableStringFieldUpdateOperationsInput | string | null
    copyright?: NullableStringFieldUpdateOperationsInput | string | null
    ancien_code_pivot?: NullableStringFieldUpdateOperationsInput | string | null
    reseau_social?: NullableStringFieldUpdateOperationsInput | string | null
    texte_reference?: NullableStringFieldUpdateOperationsInput | string | null
    partenaire?: NullableStringFieldUpdateOperationsInput | string | null
    itm_identifiant?: NullableStringFieldUpdateOperationsInput | string | null
    sigle?: NullableStringFieldUpdateOperationsInput | string | null
    date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_creation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    partenaire_date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    formulaire_contact?: NullableStringFieldUpdateOperationsInput | string | null
    version_type?: NullableStringFieldUpdateOperationsInput | string | null
    version_etat_modification?: NullableStringFieldUpdateOperationsInput | string | null
    version_source?: NullableStringFieldUpdateOperationsInput | string | null
    type_organisme?: NullableStringFieldUpdateOperationsInput | string | null
    type_repertoire?: NullableStringFieldUpdateOperationsInput | string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: NullableStringFieldUpdateOperationsInput | string | null
    sve?: NullableStringFieldUpdateOperationsInput | string | null
    telephone_accessible?: NullableStringFieldUpdateOperationsInput | string | null
    application_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    statut_de_diffusion?: NullableStringFieldUpdateOperationsInput | string | null
    information_complementaire?: NullableStringFieldUpdateOperationsInput | string | null
    commentaire_plage_ouverture?: NullableStringFieldUpdateOperationsInput | string | null
    annuaire?: NullableStringFieldUpdateOperationsInput | string | null
    tchat?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usersCreateInput = {
    name?: string | null
    email?: string | null
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type usersUncheckedCreateInput = {
    id?: number
    name?: string | null
    email?: string | null
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type usersUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usersCreateManyInput = {
    id?: number
    name?: string | null
    email?: string | null
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type usersUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DepartementNullableRelationFilter = {
    is?: departementWhereInput | null
    isNot?: departementWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type collectivitesCountOrderByAggregateInput = {
    id?: SortOrder
    nom?: SortOrder
    type_service_local?: SortOrder
    siret?: SortOrder
    siren?: SortOrder
    code_insee_commune?: SortOrder
    code_postal?: SortOrder
    code_departement?: SortOrder
    nom_departement?: SortOrder
    nom_commune?: SortOrder
    pays?: SortOrder
    continent?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    adresse?: SortOrder
    adresse_courriel?: SortOrder
    telephone?: SortOrder
    telecopie?: SortOrder
    site_internet?: SortOrder
    copyright?: SortOrder
    ancien_code_pivot?: SortOrder
    reseau_social?: SortOrder
    texte_reference?: SortOrder
    partenaire?: SortOrder
    itm_identifiant?: SortOrder
    sigle?: SortOrder
    date_modification?: SortOrder
    date_creation?: SortOrder
    partenaire_date_modification?: SortOrder
    mission?: SortOrder
    formulaire_contact?: SortOrder
    version_type?: SortOrder
    version_etat_modification?: SortOrder
    version_source?: SortOrder
    type_organisme?: SortOrder
    type_repertoire?: SortOrder
    plage_ouverture?: SortOrder
    hierarchie?: SortOrder
    categorie?: SortOrder
    sve?: SortOrder
    telephone_accessible?: SortOrder
    application_mobile?: SortOrder
    statut_de_diffusion?: SortOrder
    information_complementaire?: SortOrder
    commentaire_plage_ouverture?: SortOrder
    annuaire?: SortOrder
    tchat?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    is_selected?: SortOrder
    is_sended?: SortOrder
  }

  export type collectivitesAvgOrderByAggregateInput = {
    id?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
  }

  export type collectivitesMaxOrderByAggregateInput = {
    id?: SortOrder
    nom?: SortOrder
    type_service_local?: SortOrder
    siret?: SortOrder
    siren?: SortOrder
    code_insee_commune?: SortOrder
    code_postal?: SortOrder
    code_departement?: SortOrder
    nom_departement?: SortOrder
    nom_commune?: SortOrder
    pays?: SortOrder
    continent?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    adresse?: SortOrder
    adresse_courriel?: SortOrder
    telephone?: SortOrder
    telecopie?: SortOrder
    site_internet?: SortOrder
    copyright?: SortOrder
    ancien_code_pivot?: SortOrder
    reseau_social?: SortOrder
    texte_reference?: SortOrder
    partenaire?: SortOrder
    itm_identifiant?: SortOrder
    sigle?: SortOrder
    date_modification?: SortOrder
    date_creation?: SortOrder
    partenaire_date_modification?: SortOrder
    mission?: SortOrder
    formulaire_contact?: SortOrder
    version_type?: SortOrder
    version_etat_modification?: SortOrder
    version_source?: SortOrder
    type_organisme?: SortOrder
    type_repertoire?: SortOrder
    categorie?: SortOrder
    sve?: SortOrder
    telephone_accessible?: SortOrder
    application_mobile?: SortOrder
    statut_de_diffusion?: SortOrder
    information_complementaire?: SortOrder
    commentaire_plage_ouverture?: SortOrder
    annuaire?: SortOrder
    tchat?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    is_selected?: SortOrder
    is_sended?: SortOrder
  }

  export type collectivitesMinOrderByAggregateInput = {
    id?: SortOrder
    nom?: SortOrder
    type_service_local?: SortOrder
    siret?: SortOrder
    siren?: SortOrder
    code_insee_commune?: SortOrder
    code_postal?: SortOrder
    code_departement?: SortOrder
    nom_departement?: SortOrder
    nom_commune?: SortOrder
    pays?: SortOrder
    continent?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    adresse?: SortOrder
    adresse_courriel?: SortOrder
    telephone?: SortOrder
    telecopie?: SortOrder
    site_internet?: SortOrder
    copyright?: SortOrder
    ancien_code_pivot?: SortOrder
    reseau_social?: SortOrder
    texte_reference?: SortOrder
    partenaire?: SortOrder
    itm_identifiant?: SortOrder
    sigle?: SortOrder
    date_modification?: SortOrder
    date_creation?: SortOrder
    partenaire_date_modification?: SortOrder
    mission?: SortOrder
    formulaire_contact?: SortOrder
    version_type?: SortOrder
    version_etat_modification?: SortOrder
    version_source?: SortOrder
    type_organisme?: SortOrder
    type_repertoire?: SortOrder
    categorie?: SortOrder
    sve?: SortOrder
    telephone_accessible?: SortOrder
    application_mobile?: SortOrder
    statut_de_diffusion?: SortOrder
    information_complementaire?: SortOrder
    commentaire_plage_ouverture?: SortOrder
    annuaire?: SortOrder
    tchat?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    is_selected?: SortOrder
    is_sended?: SortOrder
  }

  export type collectivitesSumOrderByAggregateInput = {
    id?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type collectivites_joinCountOrderByAggregateInput = {
    code_postal?: SortOrder
    code_departement?: SortOrder
  }

  export type collectivites_joinMaxOrderByAggregateInput = {
    code_postal?: SortOrder
    code_departement?: SortOrder
  }

  export type collectivites_joinMinOrderByAggregateInput = {
    code_postal?: SortOrder
    code_departement?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type collectivites_testCountOrderByAggregateInput = {
    id?: SortOrder
    nom?: SortOrder
    type_service_local?: SortOrder
    siret?: SortOrder
    siren?: SortOrder
    code_insee_commune?: SortOrder
    code_postal?: SortOrder
    nom_commune?: SortOrder
    pays?: SortOrder
    continent?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    adresse?: SortOrder
    adresse_courriel?: SortOrder
    telephone?: SortOrder
    telecopie?: SortOrder
    site_internet?: SortOrder
    copyright?: SortOrder
    ancien_code_pivot?: SortOrder
    reseau_social?: SortOrder
    texte_reference?: SortOrder
    partenaire?: SortOrder
    itm_identifiant?: SortOrder
    sigle?: SortOrder
    date_modification?: SortOrder
    date_creation?: SortOrder
    partenaire_date_modification?: SortOrder
    mission?: SortOrder
    formulaire_contact?: SortOrder
    version_type?: SortOrder
    version_etat_modification?: SortOrder
    version_source?: SortOrder
    type_organisme?: SortOrder
    type_repertoire?: SortOrder
    plage_ouverture?: SortOrder
    hierarchie?: SortOrder
    categorie?: SortOrder
    sve?: SortOrder
    telephone_accessible?: SortOrder
    application_mobile?: SortOrder
    statut_de_diffusion?: SortOrder
    information_complementaire?: SortOrder
    commentaire_plage_ouverture?: SortOrder
    annuaire?: SortOrder
    tchat?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    is_selected?: SortOrder
    is_sended?: SortOrder
  }

  export type collectivites_testAvgOrderByAggregateInput = {
    id?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
  }

  export type collectivites_testMaxOrderByAggregateInput = {
    id?: SortOrder
    nom?: SortOrder
    type_service_local?: SortOrder
    siret?: SortOrder
    siren?: SortOrder
    code_insee_commune?: SortOrder
    code_postal?: SortOrder
    nom_commune?: SortOrder
    pays?: SortOrder
    continent?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    adresse?: SortOrder
    adresse_courriel?: SortOrder
    telephone?: SortOrder
    telecopie?: SortOrder
    site_internet?: SortOrder
    copyright?: SortOrder
    ancien_code_pivot?: SortOrder
    reseau_social?: SortOrder
    texte_reference?: SortOrder
    partenaire?: SortOrder
    itm_identifiant?: SortOrder
    sigle?: SortOrder
    date_modification?: SortOrder
    date_creation?: SortOrder
    partenaire_date_modification?: SortOrder
    mission?: SortOrder
    formulaire_contact?: SortOrder
    version_type?: SortOrder
    version_etat_modification?: SortOrder
    version_source?: SortOrder
    type_organisme?: SortOrder
    type_repertoire?: SortOrder
    categorie?: SortOrder
    sve?: SortOrder
    telephone_accessible?: SortOrder
    application_mobile?: SortOrder
    statut_de_diffusion?: SortOrder
    information_complementaire?: SortOrder
    commentaire_plage_ouverture?: SortOrder
    annuaire?: SortOrder
    tchat?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    is_selected?: SortOrder
    is_sended?: SortOrder
  }

  export type collectivites_testMinOrderByAggregateInput = {
    id?: SortOrder
    nom?: SortOrder
    type_service_local?: SortOrder
    siret?: SortOrder
    siren?: SortOrder
    code_insee_commune?: SortOrder
    code_postal?: SortOrder
    nom_commune?: SortOrder
    pays?: SortOrder
    continent?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    adresse?: SortOrder
    adresse_courriel?: SortOrder
    telephone?: SortOrder
    telecopie?: SortOrder
    site_internet?: SortOrder
    copyright?: SortOrder
    ancien_code_pivot?: SortOrder
    reseau_social?: SortOrder
    texte_reference?: SortOrder
    partenaire?: SortOrder
    itm_identifiant?: SortOrder
    sigle?: SortOrder
    date_modification?: SortOrder
    date_creation?: SortOrder
    partenaire_date_modification?: SortOrder
    mission?: SortOrder
    formulaire_contact?: SortOrder
    version_type?: SortOrder
    version_etat_modification?: SortOrder
    version_source?: SortOrder
    type_organisme?: SortOrder
    type_repertoire?: SortOrder
    categorie?: SortOrder
    sve?: SortOrder
    telephone_accessible?: SortOrder
    application_mobile?: SortOrder
    statut_de_diffusion?: SortOrder
    information_complementaire?: SortOrder
    commentaire_plage_ouverture?: SortOrder
    annuaire?: SortOrder
    tchat?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    is_selected?: SortOrder
    is_sended?: SortOrder
  }

  export type collectivites_testSumOrderByAggregateInput = {
    id?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
  }

  export type CollectivitesListRelationFilter = {
    every?: collectivitesWhereInput
    some?: collectivitesWhereInput
    none?: collectivitesWhereInput
  }

  export type collectivitesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type departementCountOrderByAggregateInput = {
    departement_id?: SortOrder
    departement_code?: SortOrder
    departement_nom?: SortOrder
    departement_nom_uppercase?: SortOrder
    departement_slug?: SortOrder
    departement_nom_soundex?: SortOrder
  }

  export type departementAvgOrderByAggregateInput = {
    departement_id?: SortOrder
  }

  export type departementMaxOrderByAggregateInput = {
    departement_id?: SortOrder
    departement_code?: SortOrder
    departement_nom?: SortOrder
    departement_nom_uppercase?: SortOrder
    departement_slug?: SortOrder
    departement_nom_soundex?: SortOrder
  }

  export type departementMinOrderByAggregateInput = {
    departement_id?: SortOrder
    departement_code?: SortOrder
    departement_nom?: SortOrder
    departement_nom_uppercase?: SortOrder
    departement_slug?: SortOrder
    departement_nom_soundex?: SortOrder
  }

  export type departementSumOrderByAggregateInput = {
    departement_id?: SortOrder
  }

  export type serviceCountOrderByAggregateInput = {
    id?: SortOrder
    nom?: SortOrder
    type_service_local?: SortOrder
    siret?: SortOrder
    siren?: SortOrder
    code_insee_commune?: SortOrder
    code_postal?: SortOrder
    nom_commune?: SortOrder
    pays?: SortOrder
    continent?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    adresse?: SortOrder
    adresse_courriel?: SortOrder
    telephone?: SortOrder
    telecopie?: SortOrder
    site_internet?: SortOrder
    copyright?: SortOrder
    ancien_code_pivot?: SortOrder
    reseau_social?: SortOrder
    texte_reference?: SortOrder
    partenaire?: SortOrder
    itm_identifiant?: SortOrder
    sigle?: SortOrder
    date_modification?: SortOrder
    date_creation?: SortOrder
    partenaire_date_modification?: SortOrder
    mission?: SortOrder
    formulaire_contact?: SortOrder
    version_type?: SortOrder
    version_etat_modification?: SortOrder
    version_source?: SortOrder
    type_organisme?: SortOrder
    type_repertoire?: SortOrder
    plage_ouverture?: SortOrder
    hierarchie?: SortOrder
    categorie?: SortOrder
    sve?: SortOrder
    telephone_accessible?: SortOrder
    application_mobile?: SortOrder
    statut_de_diffusion?: SortOrder
    information_complementaire?: SortOrder
    commentaire_plage_ouverture?: SortOrder
    annuaire?: SortOrder
    tchat?: SortOrder
  }

  export type serviceAvgOrderByAggregateInput = {
    id?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
  }

  export type serviceMaxOrderByAggregateInput = {
    id?: SortOrder
    nom?: SortOrder
    type_service_local?: SortOrder
    siret?: SortOrder
    siren?: SortOrder
    code_insee_commune?: SortOrder
    code_postal?: SortOrder
    nom_commune?: SortOrder
    pays?: SortOrder
    continent?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    adresse?: SortOrder
    adresse_courriel?: SortOrder
    telephone?: SortOrder
    telecopie?: SortOrder
    site_internet?: SortOrder
    copyright?: SortOrder
    ancien_code_pivot?: SortOrder
    reseau_social?: SortOrder
    texte_reference?: SortOrder
    partenaire?: SortOrder
    itm_identifiant?: SortOrder
    sigle?: SortOrder
    date_modification?: SortOrder
    date_creation?: SortOrder
    partenaire_date_modification?: SortOrder
    mission?: SortOrder
    formulaire_contact?: SortOrder
    version_type?: SortOrder
    version_etat_modification?: SortOrder
    version_source?: SortOrder
    type_organisme?: SortOrder
    type_repertoire?: SortOrder
    categorie?: SortOrder
    sve?: SortOrder
    telephone_accessible?: SortOrder
    application_mobile?: SortOrder
    statut_de_diffusion?: SortOrder
    information_complementaire?: SortOrder
    commentaire_plage_ouverture?: SortOrder
    annuaire?: SortOrder
    tchat?: SortOrder
  }

  export type serviceMinOrderByAggregateInput = {
    id?: SortOrder
    nom?: SortOrder
    type_service_local?: SortOrder
    siret?: SortOrder
    siren?: SortOrder
    code_insee_commune?: SortOrder
    code_postal?: SortOrder
    nom_commune?: SortOrder
    pays?: SortOrder
    continent?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    adresse?: SortOrder
    adresse_courriel?: SortOrder
    telephone?: SortOrder
    telecopie?: SortOrder
    site_internet?: SortOrder
    copyright?: SortOrder
    ancien_code_pivot?: SortOrder
    reseau_social?: SortOrder
    texte_reference?: SortOrder
    partenaire?: SortOrder
    itm_identifiant?: SortOrder
    sigle?: SortOrder
    date_modification?: SortOrder
    date_creation?: SortOrder
    partenaire_date_modification?: SortOrder
    mission?: SortOrder
    formulaire_contact?: SortOrder
    version_type?: SortOrder
    version_etat_modification?: SortOrder
    version_source?: SortOrder
    type_organisme?: SortOrder
    type_repertoire?: SortOrder
    categorie?: SortOrder
    sve?: SortOrder
    telephone_accessible?: SortOrder
    application_mobile?: SortOrder
    statut_de_diffusion?: SortOrder
    information_complementaire?: SortOrder
    commentaire_plage_ouverture?: SortOrder
    annuaire?: SortOrder
    tchat?: SortOrder
  }

  export type serviceSumOrderByAggregateInput = {
    id?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
  }

  export type service2CountOrderByAggregateInput = {
    id?: SortOrder
    nom?: SortOrder
    type_service_local?: SortOrder
    siret?: SortOrder
    siren?: SortOrder
    code_insee_commune?: SortOrder
    code_postal?: SortOrder
    nom_commune?: SortOrder
    pays?: SortOrder
    continent?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    adresse?: SortOrder
    adresse_courriel?: SortOrder
    telephone?: SortOrder
    telecopie?: SortOrder
    site_internet?: SortOrder
    copyright?: SortOrder
    ancien_code_pivot?: SortOrder
    reseau_social?: SortOrder
    texte_reference?: SortOrder
    partenaire?: SortOrder
    itm_identifiant?: SortOrder
    sigle?: SortOrder
    date_modification?: SortOrder
    date_creation?: SortOrder
    partenaire_date_modification?: SortOrder
    mission?: SortOrder
    formulaire_contact?: SortOrder
    version_type?: SortOrder
    version_etat_modification?: SortOrder
    version_source?: SortOrder
    type_organisme?: SortOrder
    type_repertoire?: SortOrder
    plage_ouverture?: SortOrder
    hierarchie?: SortOrder
    categorie?: SortOrder
    sve?: SortOrder
    telephone_accessible?: SortOrder
    application_mobile?: SortOrder
    statut_de_diffusion?: SortOrder
    information_complementaire?: SortOrder
    commentaire_plage_ouverture?: SortOrder
    annuaire?: SortOrder
    tchat?: SortOrder
  }

  export type service2AvgOrderByAggregateInput = {
    id?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
  }

  export type service2MaxOrderByAggregateInput = {
    id?: SortOrder
    nom?: SortOrder
    type_service_local?: SortOrder
    siret?: SortOrder
    siren?: SortOrder
    code_insee_commune?: SortOrder
    code_postal?: SortOrder
    nom_commune?: SortOrder
    pays?: SortOrder
    continent?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    adresse?: SortOrder
    adresse_courriel?: SortOrder
    telephone?: SortOrder
    telecopie?: SortOrder
    site_internet?: SortOrder
    copyright?: SortOrder
    ancien_code_pivot?: SortOrder
    reseau_social?: SortOrder
    texte_reference?: SortOrder
    partenaire?: SortOrder
    itm_identifiant?: SortOrder
    sigle?: SortOrder
    date_modification?: SortOrder
    date_creation?: SortOrder
    partenaire_date_modification?: SortOrder
    mission?: SortOrder
    formulaire_contact?: SortOrder
    version_type?: SortOrder
    version_etat_modification?: SortOrder
    version_source?: SortOrder
    type_organisme?: SortOrder
    type_repertoire?: SortOrder
    categorie?: SortOrder
    sve?: SortOrder
    telephone_accessible?: SortOrder
    application_mobile?: SortOrder
    statut_de_diffusion?: SortOrder
    information_complementaire?: SortOrder
    commentaire_plage_ouverture?: SortOrder
    annuaire?: SortOrder
    tchat?: SortOrder
  }

  export type service2MinOrderByAggregateInput = {
    id?: SortOrder
    nom?: SortOrder
    type_service_local?: SortOrder
    siret?: SortOrder
    siren?: SortOrder
    code_insee_commune?: SortOrder
    code_postal?: SortOrder
    nom_commune?: SortOrder
    pays?: SortOrder
    continent?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    adresse?: SortOrder
    adresse_courriel?: SortOrder
    telephone?: SortOrder
    telecopie?: SortOrder
    site_internet?: SortOrder
    copyright?: SortOrder
    ancien_code_pivot?: SortOrder
    reseau_social?: SortOrder
    texte_reference?: SortOrder
    partenaire?: SortOrder
    itm_identifiant?: SortOrder
    sigle?: SortOrder
    date_modification?: SortOrder
    date_creation?: SortOrder
    partenaire_date_modification?: SortOrder
    mission?: SortOrder
    formulaire_contact?: SortOrder
    version_type?: SortOrder
    version_etat_modification?: SortOrder
    version_source?: SortOrder
    type_organisme?: SortOrder
    type_repertoire?: SortOrder
    categorie?: SortOrder
    sve?: SortOrder
    telephone_accessible?: SortOrder
    application_mobile?: SortOrder
    statut_de_diffusion?: SortOrder
    information_complementaire?: SortOrder
    commentaire_plage_ouverture?: SortOrder
    annuaire?: SortOrder
    tchat?: SortOrder
  }

  export type service2SumOrderByAggregateInput = {
    id?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type usersCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type usersAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type usersSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type departementCreateNestedOneWithoutCollectivites_relInput = {
    create?: XOR<departementCreateWithoutCollectivites_relInput, departementUncheckedCreateWithoutCollectivites_relInput>
    connectOrCreate?: departementCreateOrConnectWithoutCollectivites_relInput
    connect?: departementWhereUniqueInput
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type departementUpdateOneWithoutCollectivites_relNestedInput = {
    create?: XOR<departementCreateWithoutCollectivites_relInput, departementUncheckedCreateWithoutCollectivites_relInput>
    connectOrCreate?: departementCreateOrConnectWithoutCollectivites_relInput
    upsert?: departementUpsertWithoutCollectivites_relInput
    disconnect?: departementWhereInput | boolean
    delete?: departementWhereInput | boolean
    connect?: departementWhereUniqueInput
    update?: XOR<XOR<departementUpdateToOneWithWhereWithoutCollectivites_relInput, departementUpdateWithoutCollectivites_relInput>, departementUncheckedUpdateWithoutCollectivites_relInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type collectivitesCreateNestedManyWithoutDepartement_idInput = {
    create?: XOR<collectivitesCreateWithoutDepartement_idInput, collectivitesUncheckedCreateWithoutDepartement_idInput> | collectivitesCreateWithoutDepartement_idInput[] | collectivitesUncheckedCreateWithoutDepartement_idInput[]
    connectOrCreate?: collectivitesCreateOrConnectWithoutDepartement_idInput | collectivitesCreateOrConnectWithoutDepartement_idInput[]
    createMany?: collectivitesCreateManyDepartement_idInputEnvelope
    connect?: collectivitesWhereUniqueInput | collectivitesWhereUniqueInput[]
  }

  export type collectivitesUncheckedCreateNestedManyWithoutDepartement_idInput = {
    create?: XOR<collectivitesCreateWithoutDepartement_idInput, collectivitesUncheckedCreateWithoutDepartement_idInput> | collectivitesCreateWithoutDepartement_idInput[] | collectivitesUncheckedCreateWithoutDepartement_idInput[]
    connectOrCreate?: collectivitesCreateOrConnectWithoutDepartement_idInput | collectivitesCreateOrConnectWithoutDepartement_idInput[]
    createMany?: collectivitesCreateManyDepartement_idInputEnvelope
    connect?: collectivitesWhereUniqueInput | collectivitesWhereUniqueInput[]
  }

  export type collectivitesUpdateManyWithoutDepartement_idNestedInput = {
    create?: XOR<collectivitesCreateWithoutDepartement_idInput, collectivitesUncheckedCreateWithoutDepartement_idInput> | collectivitesCreateWithoutDepartement_idInput[] | collectivitesUncheckedCreateWithoutDepartement_idInput[]
    connectOrCreate?: collectivitesCreateOrConnectWithoutDepartement_idInput | collectivitesCreateOrConnectWithoutDepartement_idInput[]
    upsert?: collectivitesUpsertWithWhereUniqueWithoutDepartement_idInput | collectivitesUpsertWithWhereUniqueWithoutDepartement_idInput[]
    createMany?: collectivitesCreateManyDepartement_idInputEnvelope
    set?: collectivitesWhereUniqueInput | collectivitesWhereUniqueInput[]
    disconnect?: collectivitesWhereUniqueInput | collectivitesWhereUniqueInput[]
    delete?: collectivitesWhereUniqueInput | collectivitesWhereUniqueInput[]
    connect?: collectivitesWhereUniqueInput | collectivitesWhereUniqueInput[]
    update?: collectivitesUpdateWithWhereUniqueWithoutDepartement_idInput | collectivitesUpdateWithWhereUniqueWithoutDepartement_idInput[]
    updateMany?: collectivitesUpdateManyWithWhereWithoutDepartement_idInput | collectivitesUpdateManyWithWhereWithoutDepartement_idInput[]
    deleteMany?: collectivitesScalarWhereInput | collectivitesScalarWhereInput[]
  }

  export type collectivitesUncheckedUpdateManyWithoutDepartement_idNestedInput = {
    create?: XOR<collectivitesCreateWithoutDepartement_idInput, collectivitesUncheckedCreateWithoutDepartement_idInput> | collectivitesCreateWithoutDepartement_idInput[] | collectivitesUncheckedCreateWithoutDepartement_idInput[]
    connectOrCreate?: collectivitesCreateOrConnectWithoutDepartement_idInput | collectivitesCreateOrConnectWithoutDepartement_idInput[]
    upsert?: collectivitesUpsertWithWhereUniqueWithoutDepartement_idInput | collectivitesUpsertWithWhereUniqueWithoutDepartement_idInput[]
    createMany?: collectivitesCreateManyDepartement_idInputEnvelope
    set?: collectivitesWhereUniqueInput | collectivitesWhereUniqueInput[]
    disconnect?: collectivitesWhereUniqueInput | collectivitesWhereUniqueInput[]
    delete?: collectivitesWhereUniqueInput | collectivitesWhereUniqueInput[]
    connect?: collectivitesWhereUniqueInput | collectivitesWhereUniqueInput[]
    update?: collectivitesUpdateWithWhereUniqueWithoutDepartement_idInput | collectivitesUpdateWithWhereUniqueWithoutDepartement_idInput[]
    updateMany?: collectivitesUpdateManyWithWhereWithoutDepartement_idInput | collectivitesUpdateManyWithWhereWithoutDepartement_idInput[]
    deleteMany?: collectivitesScalarWhereInput | collectivitesScalarWhereInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type departementCreateWithoutCollectivites_relInput = {
    departement_code?: string | null
    departement_nom?: string | null
    departement_nom_uppercase?: string | null
    departement_slug?: string | null
    departement_nom_soundex?: string | null
  }

  export type departementUncheckedCreateWithoutCollectivites_relInput = {
    departement_id?: number
    departement_code?: string | null
    departement_nom?: string | null
    departement_nom_uppercase?: string | null
    departement_slug?: string | null
    departement_nom_soundex?: string | null
  }

  export type departementCreateOrConnectWithoutCollectivites_relInput = {
    where: departementWhereUniqueInput
    create: XOR<departementCreateWithoutCollectivites_relInput, departementUncheckedCreateWithoutCollectivites_relInput>
  }

  export type departementUpsertWithoutCollectivites_relInput = {
    update: XOR<departementUpdateWithoutCollectivites_relInput, departementUncheckedUpdateWithoutCollectivites_relInput>
    create: XOR<departementCreateWithoutCollectivites_relInput, departementUncheckedCreateWithoutCollectivites_relInput>
    where?: departementWhereInput
  }

  export type departementUpdateToOneWithWhereWithoutCollectivites_relInput = {
    where?: departementWhereInput
    data: XOR<departementUpdateWithoutCollectivites_relInput, departementUncheckedUpdateWithoutCollectivites_relInput>
  }

  export type departementUpdateWithoutCollectivites_relInput = {
    departement_code?: NullableStringFieldUpdateOperationsInput | string | null
    departement_nom?: NullableStringFieldUpdateOperationsInput | string | null
    departement_nom_uppercase?: NullableStringFieldUpdateOperationsInput | string | null
    departement_slug?: NullableStringFieldUpdateOperationsInput | string | null
    departement_nom_soundex?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type departementUncheckedUpdateWithoutCollectivites_relInput = {
    departement_id?: IntFieldUpdateOperationsInput | number
    departement_code?: NullableStringFieldUpdateOperationsInput | string | null
    departement_nom?: NullableStringFieldUpdateOperationsInput | string | null
    departement_nom_uppercase?: NullableStringFieldUpdateOperationsInput | string | null
    departement_slug?: NullableStringFieldUpdateOperationsInput | string | null
    departement_nom_soundex?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type collectivitesCreateWithoutDepartement_idInput = {
    nom?: string | null
    type_service_local?: string | null
    siret?: string | null
    siren?: string | null
    code_insee_commune?: string | null
    code_postal?: string | null
    nom_departement?: string | null
    nom_commune?: string | null
    pays?: string | null
    continent?: string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    adresse?: string | null
    adresse_courriel?: string | null
    telephone?: string | null
    telecopie?: string | null
    site_internet?: string | null
    copyright?: string | null
    ancien_code_pivot?: string | null
    reseau_social?: string | null
    texte_reference?: string | null
    partenaire?: string | null
    itm_identifiant?: string | null
    sigle?: string | null
    date_modification?: Date | string | null
    date_creation?: Date | string | null
    partenaire_date_modification?: Date | string | null
    mission?: string | null
    formulaire_contact?: string | null
    version_type?: string | null
    version_etat_modification?: string | null
    version_source?: string | null
    type_organisme?: string | null
    type_repertoire?: string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: string | null
    sve?: string | null
    telephone_accessible?: string | null
    application_mobile?: string | null
    statut_de_diffusion?: string | null
    information_complementaire?: string | null
    commentaire_plage_ouverture?: string | null
    annuaire?: string | null
    tchat?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    is_selected?: boolean
    is_sended?: boolean
  }

  export type collectivitesUncheckedCreateWithoutDepartement_idInput = {
    id?: number
    nom?: string | null
    type_service_local?: string | null
    siret?: string | null
    siren?: string | null
    code_insee_commune?: string | null
    code_postal?: string | null
    nom_departement?: string | null
    nom_commune?: string | null
    pays?: string | null
    continent?: string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    adresse?: string | null
    adresse_courriel?: string | null
    telephone?: string | null
    telecopie?: string | null
    site_internet?: string | null
    copyright?: string | null
    ancien_code_pivot?: string | null
    reseau_social?: string | null
    texte_reference?: string | null
    partenaire?: string | null
    itm_identifiant?: string | null
    sigle?: string | null
    date_modification?: Date | string | null
    date_creation?: Date | string | null
    partenaire_date_modification?: Date | string | null
    mission?: string | null
    formulaire_contact?: string | null
    version_type?: string | null
    version_etat_modification?: string | null
    version_source?: string | null
    type_organisme?: string | null
    type_repertoire?: string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: string | null
    sve?: string | null
    telephone_accessible?: string | null
    application_mobile?: string | null
    statut_de_diffusion?: string | null
    information_complementaire?: string | null
    commentaire_plage_ouverture?: string | null
    annuaire?: string | null
    tchat?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    is_selected?: boolean
    is_sended?: boolean
  }

  export type collectivitesCreateOrConnectWithoutDepartement_idInput = {
    where: collectivitesWhereUniqueInput
    create: XOR<collectivitesCreateWithoutDepartement_idInput, collectivitesUncheckedCreateWithoutDepartement_idInput>
  }

  export type collectivitesCreateManyDepartement_idInputEnvelope = {
    data: collectivitesCreateManyDepartement_idInput | collectivitesCreateManyDepartement_idInput[]
    skipDuplicates?: boolean
  }

  export type collectivitesUpsertWithWhereUniqueWithoutDepartement_idInput = {
    where: collectivitesWhereUniqueInput
    update: XOR<collectivitesUpdateWithoutDepartement_idInput, collectivitesUncheckedUpdateWithoutDepartement_idInput>
    create: XOR<collectivitesCreateWithoutDepartement_idInput, collectivitesUncheckedCreateWithoutDepartement_idInput>
  }

  export type collectivitesUpdateWithWhereUniqueWithoutDepartement_idInput = {
    where: collectivitesWhereUniqueInput
    data: XOR<collectivitesUpdateWithoutDepartement_idInput, collectivitesUncheckedUpdateWithoutDepartement_idInput>
  }

  export type collectivitesUpdateManyWithWhereWithoutDepartement_idInput = {
    where: collectivitesScalarWhereInput
    data: XOR<collectivitesUpdateManyMutationInput, collectivitesUncheckedUpdateManyWithoutDepartement_idInput>
  }

  export type collectivitesScalarWhereInput = {
    AND?: collectivitesScalarWhereInput | collectivitesScalarWhereInput[]
    OR?: collectivitesScalarWhereInput[]
    NOT?: collectivitesScalarWhereInput | collectivitesScalarWhereInput[]
    id?: IntFilter<"collectivites"> | number
    nom?: StringNullableFilter<"collectivites"> | string | null
    type_service_local?: StringNullableFilter<"collectivites"> | string | null
    siret?: StringNullableFilter<"collectivites"> | string | null
    siren?: StringNullableFilter<"collectivites"> | string | null
    code_insee_commune?: StringNullableFilter<"collectivites"> | string | null
    code_postal?: StringNullableFilter<"collectivites"> | string | null
    code_departement?: StringNullableFilter<"collectivites"> | string | null
    nom_departement?: StringNullableFilter<"collectivites"> | string | null
    nom_commune?: StringNullableFilter<"collectivites"> | string | null
    pays?: StringNullableFilter<"collectivites"> | string | null
    continent?: StringNullableFilter<"collectivites"> | string | null
    longitude?: DecimalNullableFilter<"collectivites"> | Decimal | DecimalJsLike | number | string | null
    latitude?: DecimalNullableFilter<"collectivites"> | Decimal | DecimalJsLike | number | string | null
    adresse?: StringNullableFilter<"collectivites"> | string | null
    adresse_courriel?: StringNullableFilter<"collectivites"> | string | null
    telephone?: StringNullableFilter<"collectivites"> | string | null
    telecopie?: StringNullableFilter<"collectivites"> | string | null
    site_internet?: StringNullableFilter<"collectivites"> | string | null
    copyright?: StringNullableFilter<"collectivites"> | string | null
    ancien_code_pivot?: StringNullableFilter<"collectivites"> | string | null
    reseau_social?: StringNullableFilter<"collectivites"> | string | null
    texte_reference?: StringNullableFilter<"collectivites"> | string | null
    partenaire?: StringNullableFilter<"collectivites"> | string | null
    itm_identifiant?: StringNullableFilter<"collectivites"> | string | null
    sigle?: StringNullableFilter<"collectivites"> | string | null
    date_modification?: DateTimeNullableFilter<"collectivites"> | Date | string | null
    date_creation?: DateTimeNullableFilter<"collectivites"> | Date | string | null
    partenaire_date_modification?: DateTimeNullableFilter<"collectivites"> | Date | string | null
    mission?: StringNullableFilter<"collectivites"> | string | null
    formulaire_contact?: StringNullableFilter<"collectivites"> | string | null
    version_type?: StringNullableFilter<"collectivites"> | string | null
    version_etat_modification?: StringNullableFilter<"collectivites"> | string | null
    version_source?: StringNullableFilter<"collectivites"> | string | null
    type_organisme?: StringNullableFilter<"collectivites"> | string | null
    type_repertoire?: StringNullableFilter<"collectivites"> | string | null
    plage_ouverture?: JsonNullableFilter<"collectivites">
    hierarchie?: JsonNullableFilter<"collectivites">
    categorie?: StringNullableFilter<"collectivites"> | string | null
    sve?: StringNullableFilter<"collectivites"> | string | null
    telephone_accessible?: StringNullableFilter<"collectivites"> | string | null
    application_mobile?: StringNullableFilter<"collectivites"> | string | null
    statut_de_diffusion?: StringNullableFilter<"collectivites"> | string | null
    information_complementaire?: StringNullableFilter<"collectivites"> | string | null
    commentaire_plage_ouverture?: StringNullableFilter<"collectivites"> | string | null
    annuaire?: StringNullableFilter<"collectivites"> | string | null
    tchat?: StringNullableFilter<"collectivites"> | string | null
    createdAt?: DateTimeNullableFilter<"collectivites"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"collectivites"> | Date | string | null
    is_selected?: BoolFilter<"collectivites"> | boolean
    is_sended?: BoolFilter<"collectivites"> | boolean
  }

  export type collectivitesCreateManyDepartement_idInput = {
    id?: number
    nom?: string | null
    type_service_local?: string | null
    siret?: string | null
    siren?: string | null
    code_insee_commune?: string | null
    code_postal?: string | null
    nom_departement?: string | null
    nom_commune?: string | null
    pays?: string | null
    continent?: string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    adresse?: string | null
    adresse_courriel?: string | null
    telephone?: string | null
    telecopie?: string | null
    site_internet?: string | null
    copyright?: string | null
    ancien_code_pivot?: string | null
    reseau_social?: string | null
    texte_reference?: string | null
    partenaire?: string | null
    itm_identifiant?: string | null
    sigle?: string | null
    date_modification?: Date | string | null
    date_creation?: Date | string | null
    partenaire_date_modification?: Date | string | null
    mission?: string | null
    formulaire_contact?: string | null
    version_type?: string | null
    version_etat_modification?: string | null
    version_source?: string | null
    type_organisme?: string | null
    type_repertoire?: string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: string | null
    sve?: string | null
    telephone_accessible?: string | null
    application_mobile?: string | null
    statut_de_diffusion?: string | null
    information_complementaire?: string | null
    commentaire_plage_ouverture?: string | null
    annuaire?: string | null
    tchat?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    is_selected?: boolean
    is_sended?: boolean
  }

  export type collectivitesUpdateWithoutDepartement_idInput = {
    nom?: NullableStringFieldUpdateOperationsInput | string | null
    type_service_local?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    siren?: NullableStringFieldUpdateOperationsInput | string | null
    code_insee_commune?: NullableStringFieldUpdateOperationsInput | string | null
    code_postal?: NullableStringFieldUpdateOperationsInput | string | null
    nom_departement?: NullableStringFieldUpdateOperationsInput | string | null
    nom_commune?: NullableStringFieldUpdateOperationsInput | string | null
    pays?: NullableStringFieldUpdateOperationsInput | string | null
    continent?: NullableStringFieldUpdateOperationsInput | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    adresse_courriel?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    telecopie?: NullableStringFieldUpdateOperationsInput | string | null
    site_internet?: NullableStringFieldUpdateOperationsInput | string | null
    copyright?: NullableStringFieldUpdateOperationsInput | string | null
    ancien_code_pivot?: NullableStringFieldUpdateOperationsInput | string | null
    reseau_social?: NullableStringFieldUpdateOperationsInput | string | null
    texte_reference?: NullableStringFieldUpdateOperationsInput | string | null
    partenaire?: NullableStringFieldUpdateOperationsInput | string | null
    itm_identifiant?: NullableStringFieldUpdateOperationsInput | string | null
    sigle?: NullableStringFieldUpdateOperationsInput | string | null
    date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_creation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    partenaire_date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    formulaire_contact?: NullableStringFieldUpdateOperationsInput | string | null
    version_type?: NullableStringFieldUpdateOperationsInput | string | null
    version_etat_modification?: NullableStringFieldUpdateOperationsInput | string | null
    version_source?: NullableStringFieldUpdateOperationsInput | string | null
    type_organisme?: NullableStringFieldUpdateOperationsInput | string | null
    type_repertoire?: NullableStringFieldUpdateOperationsInput | string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: NullableStringFieldUpdateOperationsInput | string | null
    sve?: NullableStringFieldUpdateOperationsInput | string | null
    telephone_accessible?: NullableStringFieldUpdateOperationsInput | string | null
    application_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    statut_de_diffusion?: NullableStringFieldUpdateOperationsInput | string | null
    information_complementaire?: NullableStringFieldUpdateOperationsInput | string | null
    commentaire_plage_ouverture?: NullableStringFieldUpdateOperationsInput | string | null
    annuaire?: NullableStringFieldUpdateOperationsInput | string | null
    tchat?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_selected?: BoolFieldUpdateOperationsInput | boolean
    is_sended?: BoolFieldUpdateOperationsInput | boolean
  }

  export type collectivitesUncheckedUpdateWithoutDepartement_idInput = {
    id?: IntFieldUpdateOperationsInput | number
    nom?: NullableStringFieldUpdateOperationsInput | string | null
    type_service_local?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    siren?: NullableStringFieldUpdateOperationsInput | string | null
    code_insee_commune?: NullableStringFieldUpdateOperationsInput | string | null
    code_postal?: NullableStringFieldUpdateOperationsInput | string | null
    nom_departement?: NullableStringFieldUpdateOperationsInput | string | null
    nom_commune?: NullableStringFieldUpdateOperationsInput | string | null
    pays?: NullableStringFieldUpdateOperationsInput | string | null
    continent?: NullableStringFieldUpdateOperationsInput | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    adresse_courriel?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    telecopie?: NullableStringFieldUpdateOperationsInput | string | null
    site_internet?: NullableStringFieldUpdateOperationsInput | string | null
    copyright?: NullableStringFieldUpdateOperationsInput | string | null
    ancien_code_pivot?: NullableStringFieldUpdateOperationsInput | string | null
    reseau_social?: NullableStringFieldUpdateOperationsInput | string | null
    texte_reference?: NullableStringFieldUpdateOperationsInput | string | null
    partenaire?: NullableStringFieldUpdateOperationsInput | string | null
    itm_identifiant?: NullableStringFieldUpdateOperationsInput | string | null
    sigle?: NullableStringFieldUpdateOperationsInput | string | null
    date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_creation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    partenaire_date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    formulaire_contact?: NullableStringFieldUpdateOperationsInput | string | null
    version_type?: NullableStringFieldUpdateOperationsInput | string | null
    version_etat_modification?: NullableStringFieldUpdateOperationsInput | string | null
    version_source?: NullableStringFieldUpdateOperationsInput | string | null
    type_organisme?: NullableStringFieldUpdateOperationsInput | string | null
    type_repertoire?: NullableStringFieldUpdateOperationsInput | string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: NullableStringFieldUpdateOperationsInput | string | null
    sve?: NullableStringFieldUpdateOperationsInput | string | null
    telephone_accessible?: NullableStringFieldUpdateOperationsInput | string | null
    application_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    statut_de_diffusion?: NullableStringFieldUpdateOperationsInput | string | null
    information_complementaire?: NullableStringFieldUpdateOperationsInput | string | null
    commentaire_plage_ouverture?: NullableStringFieldUpdateOperationsInput | string | null
    annuaire?: NullableStringFieldUpdateOperationsInput | string | null
    tchat?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_selected?: BoolFieldUpdateOperationsInput | boolean
    is_sended?: BoolFieldUpdateOperationsInput | boolean
  }

  export type collectivitesUncheckedUpdateManyWithoutDepartement_idInput = {
    id?: IntFieldUpdateOperationsInput | number
    nom?: NullableStringFieldUpdateOperationsInput | string | null
    type_service_local?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    siren?: NullableStringFieldUpdateOperationsInput | string | null
    code_insee_commune?: NullableStringFieldUpdateOperationsInput | string | null
    code_postal?: NullableStringFieldUpdateOperationsInput | string | null
    nom_departement?: NullableStringFieldUpdateOperationsInput | string | null
    nom_commune?: NullableStringFieldUpdateOperationsInput | string | null
    pays?: NullableStringFieldUpdateOperationsInput | string | null
    continent?: NullableStringFieldUpdateOperationsInput | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    adresse_courriel?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    telecopie?: NullableStringFieldUpdateOperationsInput | string | null
    site_internet?: NullableStringFieldUpdateOperationsInput | string | null
    copyright?: NullableStringFieldUpdateOperationsInput | string | null
    ancien_code_pivot?: NullableStringFieldUpdateOperationsInput | string | null
    reseau_social?: NullableStringFieldUpdateOperationsInput | string | null
    texte_reference?: NullableStringFieldUpdateOperationsInput | string | null
    partenaire?: NullableStringFieldUpdateOperationsInput | string | null
    itm_identifiant?: NullableStringFieldUpdateOperationsInput | string | null
    sigle?: NullableStringFieldUpdateOperationsInput | string | null
    date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_creation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    partenaire_date_modification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    formulaire_contact?: NullableStringFieldUpdateOperationsInput | string | null
    version_type?: NullableStringFieldUpdateOperationsInput | string | null
    version_etat_modification?: NullableStringFieldUpdateOperationsInput | string | null
    version_source?: NullableStringFieldUpdateOperationsInput | string | null
    type_organisme?: NullableStringFieldUpdateOperationsInput | string | null
    type_repertoire?: NullableStringFieldUpdateOperationsInput | string | null
    plage_ouverture?: NullableJsonNullValueInput | InputJsonValue
    hierarchie?: NullableJsonNullValueInput | InputJsonValue
    categorie?: NullableStringFieldUpdateOperationsInput | string | null
    sve?: NullableStringFieldUpdateOperationsInput | string | null
    telephone_accessible?: NullableStringFieldUpdateOperationsInput | string | null
    application_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    statut_de_diffusion?: NullableStringFieldUpdateOperationsInput | string | null
    information_complementaire?: NullableStringFieldUpdateOperationsInput | string | null
    commentaire_plage_ouverture?: NullableStringFieldUpdateOperationsInput | string | null
    annuaire?: NullableStringFieldUpdateOperationsInput | string | null
    tchat?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_selected?: BoolFieldUpdateOperationsInput | boolean
    is_sended?: BoolFieldUpdateOperationsInput | boolean
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use DepartementCountOutputTypeDefaultArgs instead
     */
    export type DepartementCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DepartementCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use collectivitesDefaultArgs instead
     */
    export type collectivitesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = collectivitesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use collectivites_joinDefaultArgs instead
     */
    export type collectivites_joinArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = collectivites_joinDefaultArgs<ExtArgs>
    /**
     * @deprecated Use collectivites_testDefaultArgs instead
     */
    export type collectivites_testArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = collectivites_testDefaultArgs<ExtArgs>
    /**
     * @deprecated Use departementDefaultArgs instead
     */
    export type departementArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = departementDefaultArgs<ExtArgs>
    /**
     * @deprecated Use serviceDefaultArgs instead
     */
    export type serviceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = serviceDefaultArgs<ExtArgs>
    /**
     * @deprecated Use service2DefaultArgs instead
     */
    export type service2Args<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = service2DefaultArgs<ExtArgs>
    /**
     * @deprecated Use usersDefaultArgs instead
     */
    export type usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = usersDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}